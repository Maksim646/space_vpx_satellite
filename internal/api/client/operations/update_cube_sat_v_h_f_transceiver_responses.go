// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	models "github.com/Maksim646/space_vpx_satellite/internal/api/definition"
)

// UpdateCubeSatVHFTransceiverReader is a Reader for the UpdateCubeSatVHFTransceiver structure.
type UpdateCubeSatVHFTransceiverReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateCubeSatVHFTransceiverReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateCubeSatVHFTransceiverOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateCubeSatVHFTransceiverBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateCubeSatVHFTransceiverForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateCubeSatVHFTransceiverUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateCubeSatVHFTransceiverInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PATCH /cube_sat_vhf_transceiver/{id}] UpdateCubeSatVHFTransceiver", response, response.Code())
	}
}

// NewUpdateCubeSatVHFTransceiverOK creates a UpdateCubeSatVHFTransceiverOK with default headers values
func NewUpdateCubeSatVHFTransceiverOK() *UpdateCubeSatVHFTransceiverOK {
	return &UpdateCubeSatVHFTransceiverOK{}
}

/*
UpdateCubeSatVHFTransceiverOK describes a response with status code 200, with default header values.

Update CubeSat VHF Transceiver Response
*/
type UpdateCubeSatVHFTransceiverOK struct {
	Payload *models.VHFTransceiver
}

// IsSuccess returns true when this update cube sat v h f transceiver o k response has a 2xx status code
func (o *UpdateCubeSatVHFTransceiverOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update cube sat v h f transceiver o k response has a 3xx status code
func (o *UpdateCubeSatVHFTransceiverOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat v h f transceiver o k response has a 4xx status code
func (o *UpdateCubeSatVHFTransceiverOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update cube sat v h f transceiver o k response has a 5xx status code
func (o *UpdateCubeSatVHFTransceiverOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat v h f transceiver o k response a status code equal to that given
func (o *UpdateCubeSatVHFTransceiverOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update cube sat v h f transceiver o k response
func (o *UpdateCubeSatVHFTransceiverOK) Code() int {
	return 200
}

func (o *UpdateCubeSatVHFTransceiverOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_vhf_transceiver/{id}][%d] updateCubeSatVHFTransceiverOK %s", 200, payload)
}

func (o *UpdateCubeSatVHFTransceiverOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_vhf_transceiver/{id}][%d] updateCubeSatVHFTransceiverOK %s", 200, payload)
}

func (o *UpdateCubeSatVHFTransceiverOK) GetPayload() *models.VHFTransceiver {
	return o.Payload
}

func (o *UpdateCubeSatVHFTransceiverOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VHFTransceiver)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatVHFTransceiverBadRequest creates a UpdateCubeSatVHFTransceiverBadRequest with default headers values
func NewUpdateCubeSatVHFTransceiverBadRequest() *UpdateCubeSatVHFTransceiverBadRequest {
	return &UpdateCubeSatVHFTransceiverBadRequest{}
}

/*
UpdateCubeSatVHFTransceiverBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpdateCubeSatVHFTransceiverBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat v h f transceiver bad request response has a 2xx status code
func (o *UpdateCubeSatVHFTransceiverBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat v h f transceiver bad request response has a 3xx status code
func (o *UpdateCubeSatVHFTransceiverBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat v h f transceiver bad request response has a 4xx status code
func (o *UpdateCubeSatVHFTransceiverBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cube sat v h f transceiver bad request response has a 5xx status code
func (o *UpdateCubeSatVHFTransceiverBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat v h f transceiver bad request response a status code equal to that given
func (o *UpdateCubeSatVHFTransceiverBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update cube sat v h f transceiver bad request response
func (o *UpdateCubeSatVHFTransceiverBadRequest) Code() int {
	return 400
}

func (o *UpdateCubeSatVHFTransceiverBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_vhf_transceiver/{id}][%d] updateCubeSatVHFTransceiverBadRequest %s", 400, payload)
}

func (o *UpdateCubeSatVHFTransceiverBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_vhf_transceiver/{id}][%d] updateCubeSatVHFTransceiverBadRequest %s", 400, payload)
}

func (o *UpdateCubeSatVHFTransceiverBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatVHFTransceiverBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatVHFTransceiverForbidden creates a UpdateCubeSatVHFTransceiverForbidden with default headers values
func NewUpdateCubeSatVHFTransceiverForbidden() *UpdateCubeSatVHFTransceiverForbidden {
	return &UpdateCubeSatVHFTransceiverForbidden{}
}

/*
UpdateCubeSatVHFTransceiverForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateCubeSatVHFTransceiverForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat v h f transceiver forbidden response has a 2xx status code
func (o *UpdateCubeSatVHFTransceiverForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat v h f transceiver forbidden response has a 3xx status code
func (o *UpdateCubeSatVHFTransceiverForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat v h f transceiver forbidden response has a 4xx status code
func (o *UpdateCubeSatVHFTransceiverForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cube sat v h f transceiver forbidden response has a 5xx status code
func (o *UpdateCubeSatVHFTransceiverForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat v h f transceiver forbidden response a status code equal to that given
func (o *UpdateCubeSatVHFTransceiverForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update cube sat v h f transceiver forbidden response
func (o *UpdateCubeSatVHFTransceiverForbidden) Code() int {
	return 403
}

func (o *UpdateCubeSatVHFTransceiverForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_vhf_transceiver/{id}][%d] updateCubeSatVHFTransceiverForbidden %s", 403, payload)
}

func (o *UpdateCubeSatVHFTransceiverForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_vhf_transceiver/{id}][%d] updateCubeSatVHFTransceiverForbidden %s", 403, payload)
}

func (o *UpdateCubeSatVHFTransceiverForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatVHFTransceiverForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatVHFTransceiverUnprocessableEntity creates a UpdateCubeSatVHFTransceiverUnprocessableEntity with default headers values
func NewUpdateCubeSatVHFTransceiverUnprocessableEntity() *UpdateCubeSatVHFTransceiverUnprocessableEntity {
	return &UpdateCubeSatVHFTransceiverUnprocessableEntity{}
}

/*
UpdateCubeSatVHFTransceiverUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type UpdateCubeSatVHFTransceiverUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat v h f transceiver unprocessable entity response has a 2xx status code
func (o *UpdateCubeSatVHFTransceiverUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat v h f transceiver unprocessable entity response has a 3xx status code
func (o *UpdateCubeSatVHFTransceiverUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat v h f transceiver unprocessable entity response has a 4xx status code
func (o *UpdateCubeSatVHFTransceiverUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cube sat v h f transceiver unprocessable entity response has a 5xx status code
func (o *UpdateCubeSatVHFTransceiverUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat v h f transceiver unprocessable entity response a status code equal to that given
func (o *UpdateCubeSatVHFTransceiverUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the update cube sat v h f transceiver unprocessable entity response
func (o *UpdateCubeSatVHFTransceiverUnprocessableEntity) Code() int {
	return 422
}

func (o *UpdateCubeSatVHFTransceiverUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_vhf_transceiver/{id}][%d] updateCubeSatVHFTransceiverUnprocessableEntity %s", 422, payload)
}

func (o *UpdateCubeSatVHFTransceiverUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_vhf_transceiver/{id}][%d] updateCubeSatVHFTransceiverUnprocessableEntity %s", 422, payload)
}

func (o *UpdateCubeSatVHFTransceiverUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatVHFTransceiverUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatVHFTransceiverInternalServerError creates a UpdateCubeSatVHFTransceiverInternalServerError with default headers values
func NewUpdateCubeSatVHFTransceiverInternalServerError() *UpdateCubeSatVHFTransceiverInternalServerError {
	return &UpdateCubeSatVHFTransceiverInternalServerError{}
}

/*
UpdateCubeSatVHFTransceiverInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type UpdateCubeSatVHFTransceiverInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat v h f transceiver internal server error response has a 2xx status code
func (o *UpdateCubeSatVHFTransceiverInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat v h f transceiver internal server error response has a 3xx status code
func (o *UpdateCubeSatVHFTransceiverInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat v h f transceiver internal server error response has a 4xx status code
func (o *UpdateCubeSatVHFTransceiverInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update cube sat v h f transceiver internal server error response has a 5xx status code
func (o *UpdateCubeSatVHFTransceiverInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update cube sat v h f transceiver internal server error response a status code equal to that given
func (o *UpdateCubeSatVHFTransceiverInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update cube sat v h f transceiver internal server error response
func (o *UpdateCubeSatVHFTransceiverInternalServerError) Code() int {
	return 500
}

func (o *UpdateCubeSatVHFTransceiverInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_vhf_transceiver/{id}][%d] updateCubeSatVHFTransceiverInternalServerError %s", 500, payload)
}

func (o *UpdateCubeSatVHFTransceiverInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_vhf_transceiver/{id}][%d] updateCubeSatVHFTransceiverInternalServerError %s", 500, payload)
}

func (o *UpdateCubeSatVHFTransceiverInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatVHFTransceiverInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
