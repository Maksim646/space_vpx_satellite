// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	models "github.com/Maksim646/space_vpx_satellite/internal/api/definition"
)

// GetCubeSatSolarPanelsSideReader is a Reader for the GetCubeSatSolarPanelsSide structure.
type GetCubeSatSolarPanelsSideReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCubeSatSolarPanelsSideReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCubeSatSolarPanelsSideOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCubeSatSolarPanelsSideBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCubeSatSolarPanelsSideForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetCubeSatSolarPanelsSideUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCubeSatSolarPanelsSideInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /solar_panel_side/available_solar_panel_side] GetCubeSatSolarPanelsSide", response, response.Code())
	}
}

// NewGetCubeSatSolarPanelsSideOK creates a GetCubeSatSolarPanelsSideOK with default headers values
func NewGetCubeSatSolarPanelsSideOK() *GetCubeSatSolarPanelsSideOK {
	return &GetCubeSatSolarPanelsSideOK{}
}

/*
GetCubeSatSolarPanelsSideOK describes a response with status code 200, with default header values.

Get CubeSat Solar Panels Side Response
*/
type GetCubeSatSolarPanelsSideOK struct {
	Payload *models.CubeSatSolarPanelsSide
}

// IsSuccess returns true when this get cube sat solar panels side o k response has a 2xx status code
func (o *GetCubeSatSolarPanelsSideOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get cube sat solar panels side o k response has a 3xx status code
func (o *GetCubeSatSolarPanelsSideOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cube sat solar panels side o k response has a 4xx status code
func (o *GetCubeSatSolarPanelsSideOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get cube sat solar panels side o k response has a 5xx status code
func (o *GetCubeSatSolarPanelsSideOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get cube sat solar panels side o k response a status code equal to that given
func (o *GetCubeSatSolarPanelsSideOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get cube sat solar panels side o k response
func (o *GetCubeSatSolarPanelsSideOK) Code() int {
	return 200
}

func (o *GetCubeSatSolarPanelsSideOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /solar_panel_side/available_solar_panel_side][%d] getCubeSatSolarPanelsSideOK %s", 200, payload)
}

func (o *GetCubeSatSolarPanelsSideOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /solar_panel_side/available_solar_panel_side][%d] getCubeSatSolarPanelsSideOK %s", 200, payload)
}

func (o *GetCubeSatSolarPanelsSideOK) GetPayload() *models.CubeSatSolarPanelsSide {
	return o.Payload
}

func (o *GetCubeSatSolarPanelsSideOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CubeSatSolarPanelsSide)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCubeSatSolarPanelsSideBadRequest creates a GetCubeSatSolarPanelsSideBadRequest with default headers values
func NewGetCubeSatSolarPanelsSideBadRequest() *GetCubeSatSolarPanelsSideBadRequest {
	return &GetCubeSatSolarPanelsSideBadRequest{}
}

/*
GetCubeSatSolarPanelsSideBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetCubeSatSolarPanelsSideBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get cube sat solar panels side bad request response has a 2xx status code
func (o *GetCubeSatSolarPanelsSideBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cube sat solar panels side bad request response has a 3xx status code
func (o *GetCubeSatSolarPanelsSideBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cube sat solar panels side bad request response has a 4xx status code
func (o *GetCubeSatSolarPanelsSideBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cube sat solar panels side bad request response has a 5xx status code
func (o *GetCubeSatSolarPanelsSideBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get cube sat solar panels side bad request response a status code equal to that given
func (o *GetCubeSatSolarPanelsSideBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get cube sat solar panels side bad request response
func (o *GetCubeSatSolarPanelsSideBadRequest) Code() int {
	return 400
}

func (o *GetCubeSatSolarPanelsSideBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /solar_panel_side/available_solar_panel_side][%d] getCubeSatSolarPanelsSideBadRequest %s", 400, payload)
}

func (o *GetCubeSatSolarPanelsSideBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /solar_panel_side/available_solar_panel_side][%d] getCubeSatSolarPanelsSideBadRequest %s", 400, payload)
}

func (o *GetCubeSatSolarPanelsSideBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCubeSatSolarPanelsSideBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCubeSatSolarPanelsSideForbidden creates a GetCubeSatSolarPanelsSideForbidden with default headers values
func NewGetCubeSatSolarPanelsSideForbidden() *GetCubeSatSolarPanelsSideForbidden {
	return &GetCubeSatSolarPanelsSideForbidden{}
}

/*
GetCubeSatSolarPanelsSideForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCubeSatSolarPanelsSideForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get cube sat solar panels side forbidden response has a 2xx status code
func (o *GetCubeSatSolarPanelsSideForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cube sat solar panels side forbidden response has a 3xx status code
func (o *GetCubeSatSolarPanelsSideForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cube sat solar panels side forbidden response has a 4xx status code
func (o *GetCubeSatSolarPanelsSideForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cube sat solar panels side forbidden response has a 5xx status code
func (o *GetCubeSatSolarPanelsSideForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get cube sat solar panels side forbidden response a status code equal to that given
func (o *GetCubeSatSolarPanelsSideForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get cube sat solar panels side forbidden response
func (o *GetCubeSatSolarPanelsSideForbidden) Code() int {
	return 403
}

func (o *GetCubeSatSolarPanelsSideForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /solar_panel_side/available_solar_panel_side][%d] getCubeSatSolarPanelsSideForbidden %s", 403, payload)
}

func (o *GetCubeSatSolarPanelsSideForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /solar_panel_side/available_solar_panel_side][%d] getCubeSatSolarPanelsSideForbidden %s", 403, payload)
}

func (o *GetCubeSatSolarPanelsSideForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCubeSatSolarPanelsSideForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCubeSatSolarPanelsSideUnprocessableEntity creates a GetCubeSatSolarPanelsSideUnprocessableEntity with default headers values
func NewGetCubeSatSolarPanelsSideUnprocessableEntity() *GetCubeSatSolarPanelsSideUnprocessableEntity {
	return &GetCubeSatSolarPanelsSideUnprocessableEntity{}
}

/*
GetCubeSatSolarPanelsSideUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type GetCubeSatSolarPanelsSideUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this get cube sat solar panels side unprocessable entity response has a 2xx status code
func (o *GetCubeSatSolarPanelsSideUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cube sat solar panels side unprocessable entity response has a 3xx status code
func (o *GetCubeSatSolarPanelsSideUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cube sat solar panels side unprocessable entity response has a 4xx status code
func (o *GetCubeSatSolarPanelsSideUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cube sat solar panels side unprocessable entity response has a 5xx status code
func (o *GetCubeSatSolarPanelsSideUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get cube sat solar panels side unprocessable entity response a status code equal to that given
func (o *GetCubeSatSolarPanelsSideUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get cube sat solar panels side unprocessable entity response
func (o *GetCubeSatSolarPanelsSideUnprocessableEntity) Code() int {
	return 422
}

func (o *GetCubeSatSolarPanelsSideUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /solar_panel_side/available_solar_panel_side][%d] getCubeSatSolarPanelsSideUnprocessableEntity %s", 422, payload)
}

func (o *GetCubeSatSolarPanelsSideUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /solar_panel_side/available_solar_panel_side][%d] getCubeSatSolarPanelsSideUnprocessableEntity %s", 422, payload)
}

func (o *GetCubeSatSolarPanelsSideUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCubeSatSolarPanelsSideUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCubeSatSolarPanelsSideInternalServerError creates a GetCubeSatSolarPanelsSideInternalServerError with default headers values
func NewGetCubeSatSolarPanelsSideInternalServerError() *GetCubeSatSolarPanelsSideInternalServerError {
	return &GetCubeSatSolarPanelsSideInternalServerError{}
}

/*
GetCubeSatSolarPanelsSideInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetCubeSatSolarPanelsSideInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get cube sat solar panels side internal server error response has a 2xx status code
func (o *GetCubeSatSolarPanelsSideInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cube sat solar panels side internal server error response has a 3xx status code
func (o *GetCubeSatSolarPanelsSideInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cube sat solar panels side internal server error response has a 4xx status code
func (o *GetCubeSatSolarPanelsSideInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get cube sat solar panels side internal server error response has a 5xx status code
func (o *GetCubeSatSolarPanelsSideInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get cube sat solar panels side internal server error response a status code equal to that given
func (o *GetCubeSatSolarPanelsSideInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get cube sat solar panels side internal server error response
func (o *GetCubeSatSolarPanelsSideInternalServerError) Code() int {
	return 500
}

func (o *GetCubeSatSolarPanelsSideInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /solar_panel_side/available_solar_panel_side][%d] getCubeSatSolarPanelsSideInternalServerError %s", 500, payload)
}

func (o *GetCubeSatSolarPanelsSideInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /solar_panel_side/available_solar_panel_side][%d] getCubeSatSolarPanelsSideInternalServerError %s", 500, payload)
}

func (o *GetCubeSatSolarPanelsSideInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCubeSatSolarPanelsSideInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
