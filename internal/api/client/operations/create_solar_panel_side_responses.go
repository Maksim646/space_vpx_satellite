// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	models "github.com/Maksim646/space_vpx_satellite/internal/api/definition"
)

// CreateSolarPanelSideReader is a Reader for the CreateSolarPanelSide structure.
type CreateSolarPanelSideReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateSolarPanelSideReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateSolarPanelSideOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateSolarPanelSideBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateSolarPanelSideForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateSolarPanelSideUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateSolarPanelSideInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /solar_panel_side] CreateSolarPanelSide", response, response.Code())
	}
}

// NewCreateSolarPanelSideOK creates a CreateSolarPanelSideOK with default headers values
func NewCreateSolarPanelSideOK() *CreateSolarPanelSideOK {
	return &CreateSolarPanelSideOK{}
}

/*
CreateSolarPanelSideOK describes a response with status code 200, with default header values.

Create Solar Panel Side Response
*/
type CreateSolarPanelSideOK struct {
	Payload *models.SolarPanelSide
}

// IsSuccess returns true when this create solar panel side o k response has a 2xx status code
func (o *CreateSolarPanelSideOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create solar panel side o k response has a 3xx status code
func (o *CreateSolarPanelSideOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create solar panel side o k response has a 4xx status code
func (o *CreateSolarPanelSideOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create solar panel side o k response has a 5xx status code
func (o *CreateSolarPanelSideOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create solar panel side o k response a status code equal to that given
func (o *CreateSolarPanelSideOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create solar panel side o k response
func (o *CreateSolarPanelSideOK) Code() int {
	return 200
}

func (o *CreateSolarPanelSideOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /solar_panel_side][%d] createSolarPanelSideOK %s", 200, payload)
}

func (o *CreateSolarPanelSideOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /solar_panel_side][%d] createSolarPanelSideOK %s", 200, payload)
}

func (o *CreateSolarPanelSideOK) GetPayload() *models.SolarPanelSide {
	return o.Payload
}

func (o *CreateSolarPanelSideOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SolarPanelSide)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSolarPanelSideBadRequest creates a CreateSolarPanelSideBadRequest with default headers values
func NewCreateSolarPanelSideBadRequest() *CreateSolarPanelSideBadRequest {
	return &CreateSolarPanelSideBadRequest{}
}

/*
CreateSolarPanelSideBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CreateSolarPanelSideBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this create solar panel side bad request response has a 2xx status code
func (o *CreateSolarPanelSideBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create solar panel side bad request response has a 3xx status code
func (o *CreateSolarPanelSideBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create solar panel side bad request response has a 4xx status code
func (o *CreateSolarPanelSideBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create solar panel side bad request response has a 5xx status code
func (o *CreateSolarPanelSideBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create solar panel side bad request response a status code equal to that given
func (o *CreateSolarPanelSideBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create solar panel side bad request response
func (o *CreateSolarPanelSideBadRequest) Code() int {
	return 400
}

func (o *CreateSolarPanelSideBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /solar_panel_side][%d] createSolarPanelSideBadRequest %s", 400, payload)
}

func (o *CreateSolarPanelSideBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /solar_panel_side][%d] createSolarPanelSideBadRequest %s", 400, payload)
}

func (o *CreateSolarPanelSideBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateSolarPanelSideBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSolarPanelSideForbidden creates a CreateSolarPanelSideForbidden with default headers values
func NewCreateSolarPanelSideForbidden() *CreateSolarPanelSideForbidden {
	return &CreateSolarPanelSideForbidden{}
}

/*
CreateSolarPanelSideForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateSolarPanelSideForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this create solar panel side forbidden response has a 2xx status code
func (o *CreateSolarPanelSideForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create solar panel side forbidden response has a 3xx status code
func (o *CreateSolarPanelSideForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create solar panel side forbidden response has a 4xx status code
func (o *CreateSolarPanelSideForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create solar panel side forbidden response has a 5xx status code
func (o *CreateSolarPanelSideForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create solar panel side forbidden response a status code equal to that given
func (o *CreateSolarPanelSideForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create solar panel side forbidden response
func (o *CreateSolarPanelSideForbidden) Code() int {
	return 403
}

func (o *CreateSolarPanelSideForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /solar_panel_side][%d] createSolarPanelSideForbidden %s", 403, payload)
}

func (o *CreateSolarPanelSideForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /solar_panel_side][%d] createSolarPanelSideForbidden %s", 403, payload)
}

func (o *CreateSolarPanelSideForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateSolarPanelSideForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSolarPanelSideUnprocessableEntity creates a CreateSolarPanelSideUnprocessableEntity with default headers values
func NewCreateSolarPanelSideUnprocessableEntity() *CreateSolarPanelSideUnprocessableEntity {
	return &CreateSolarPanelSideUnprocessableEntity{}
}

/*
CreateSolarPanelSideUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type CreateSolarPanelSideUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this create solar panel side unprocessable entity response has a 2xx status code
func (o *CreateSolarPanelSideUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create solar panel side unprocessable entity response has a 3xx status code
func (o *CreateSolarPanelSideUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create solar panel side unprocessable entity response has a 4xx status code
func (o *CreateSolarPanelSideUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create solar panel side unprocessable entity response has a 5xx status code
func (o *CreateSolarPanelSideUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create solar panel side unprocessable entity response a status code equal to that given
func (o *CreateSolarPanelSideUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the create solar panel side unprocessable entity response
func (o *CreateSolarPanelSideUnprocessableEntity) Code() int {
	return 422
}

func (o *CreateSolarPanelSideUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /solar_panel_side][%d] createSolarPanelSideUnprocessableEntity %s", 422, payload)
}

func (o *CreateSolarPanelSideUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /solar_panel_side][%d] createSolarPanelSideUnprocessableEntity %s", 422, payload)
}

func (o *CreateSolarPanelSideUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateSolarPanelSideUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSolarPanelSideInternalServerError creates a CreateSolarPanelSideInternalServerError with default headers values
func NewCreateSolarPanelSideInternalServerError() *CreateSolarPanelSideInternalServerError {
	return &CreateSolarPanelSideInternalServerError{}
}

/*
CreateSolarPanelSideInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type CreateSolarPanelSideInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this create solar panel side internal server error response has a 2xx status code
func (o *CreateSolarPanelSideInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create solar panel side internal server error response has a 3xx status code
func (o *CreateSolarPanelSideInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create solar panel side internal server error response has a 4xx status code
func (o *CreateSolarPanelSideInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create solar panel side internal server error response has a 5xx status code
func (o *CreateSolarPanelSideInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create solar panel side internal server error response a status code equal to that given
func (o *CreateSolarPanelSideInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create solar panel side internal server error response
func (o *CreateSolarPanelSideInternalServerError) Code() int {
	return 500
}

func (o *CreateSolarPanelSideInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /solar_panel_side][%d] createSolarPanelSideInternalServerError %s", 500, payload)
}

func (o *CreateSolarPanelSideInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /solar_panel_side][%d] createSolarPanelSideInternalServerError %s", 500, payload)
}

func (o *CreateSolarPanelSideInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateSolarPanelSideInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
