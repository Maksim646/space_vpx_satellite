// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	models "github.com/Maksim646/space_vpx_satellite/internal/api/definition"
)

// GetChassisByIDReader is a Reader for the GetChassisByID structure.
type GetChassisByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetChassisByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetChassisByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetChassisByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetChassisByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetChassisByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /chassis/{id}] GetChassisByID", response, response.Code())
	}
}

// NewGetChassisByIDOK creates a GetChassisByIDOK with default headers values
func NewGetChassisByIDOK() *GetChassisByIDOK {
	return &GetChassisByIDOK{}
}

/*
GetChassisByIDOK describes a response with status code 200, with default header values.

Chassis Response
*/
type GetChassisByIDOK struct {
	Payload *models.Chassis
}

// IsSuccess returns true when this get chassis by Id o k response has a 2xx status code
func (o *GetChassisByIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get chassis by Id o k response has a 3xx status code
func (o *GetChassisByIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chassis by Id o k response has a 4xx status code
func (o *GetChassisByIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get chassis by Id o k response has a 5xx status code
func (o *GetChassisByIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get chassis by Id o k response a status code equal to that given
func (o *GetChassisByIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get chassis by Id o k response
func (o *GetChassisByIDOK) Code() int {
	return 200
}

func (o *GetChassisByIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chassis/{id}][%d] getChassisByIdOK %s", 200, payload)
}

func (o *GetChassisByIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chassis/{id}][%d] getChassisByIdOK %s", 200, payload)
}

func (o *GetChassisByIDOK) GetPayload() *models.Chassis {
	return o.Payload
}

func (o *GetChassisByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Chassis)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChassisByIDForbidden creates a GetChassisByIDForbidden with default headers values
func NewGetChassisByIDForbidden() *GetChassisByIDForbidden {
	return &GetChassisByIDForbidden{}
}

/*
GetChassisByIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetChassisByIDForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get chassis by Id forbidden response has a 2xx status code
func (o *GetChassisByIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chassis by Id forbidden response has a 3xx status code
func (o *GetChassisByIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chassis by Id forbidden response has a 4xx status code
func (o *GetChassisByIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get chassis by Id forbidden response has a 5xx status code
func (o *GetChassisByIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get chassis by Id forbidden response a status code equal to that given
func (o *GetChassisByIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get chassis by Id forbidden response
func (o *GetChassisByIDForbidden) Code() int {
	return 403
}

func (o *GetChassisByIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chassis/{id}][%d] getChassisByIdForbidden %s", 403, payload)
}

func (o *GetChassisByIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chassis/{id}][%d] getChassisByIdForbidden %s", 403, payload)
}

func (o *GetChassisByIDForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetChassisByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChassisByIDNotFound creates a GetChassisByIDNotFound with default headers values
func NewGetChassisByIDNotFound() *GetChassisByIDNotFound {
	return &GetChassisByIDNotFound{}
}

/*
GetChassisByIDNotFound describes a response with status code 404, with default header values.

Chassis not found
*/
type GetChassisByIDNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get chassis by Id not found response has a 2xx status code
func (o *GetChassisByIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chassis by Id not found response has a 3xx status code
func (o *GetChassisByIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chassis by Id not found response has a 4xx status code
func (o *GetChassisByIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get chassis by Id not found response has a 5xx status code
func (o *GetChassisByIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get chassis by Id not found response a status code equal to that given
func (o *GetChassisByIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get chassis by Id not found response
func (o *GetChassisByIDNotFound) Code() int {
	return 404
}

func (o *GetChassisByIDNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chassis/{id}][%d] getChassisByIdNotFound %s", 404, payload)
}

func (o *GetChassisByIDNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chassis/{id}][%d] getChassisByIdNotFound %s", 404, payload)
}

func (o *GetChassisByIDNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetChassisByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChassisByIDInternalServerError creates a GetChassisByIDInternalServerError with default headers values
func NewGetChassisByIDInternalServerError() *GetChassisByIDInternalServerError {
	return &GetChassisByIDInternalServerError{}
}

/*
GetChassisByIDInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetChassisByIDInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get chassis by Id internal server error response has a 2xx status code
func (o *GetChassisByIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chassis by Id internal server error response has a 3xx status code
func (o *GetChassisByIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chassis by Id internal server error response has a 4xx status code
func (o *GetChassisByIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get chassis by Id internal server error response has a 5xx status code
func (o *GetChassisByIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get chassis by Id internal server error response a status code equal to that given
func (o *GetChassisByIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get chassis by Id internal server error response
func (o *GetChassisByIDInternalServerError) Code() int {
	return 500
}

func (o *GetChassisByIDInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chassis/{id}][%d] getChassisByIdInternalServerError %s", 500, payload)
}

func (o *GetChassisByIDInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chassis/{id}][%d] getChassisByIdInternalServerError %s", 500, payload)
}

func (o *GetChassisByIDInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetChassisByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
