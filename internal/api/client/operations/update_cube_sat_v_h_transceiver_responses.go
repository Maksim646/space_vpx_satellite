// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	models "github.com/Maksim646/space_vpx_satellite/internal/api/definition"
)

// UpdateCubeSatVHTransceiverReader is a Reader for the UpdateCubeSatVHTransceiver structure.
type UpdateCubeSatVHTransceiverReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateCubeSatVHTransceiverReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateCubeSatVHTransceiverOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateCubeSatVHTransceiverBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateCubeSatVHTransceiverForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateCubeSatVHTransceiverUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateCubeSatVHTransceiverInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PATCH /cube_sat_vhf_transceiver/{id}] UpdateCubeSatVHTransceiver", response, response.Code())
	}
}

// NewUpdateCubeSatVHTransceiverOK creates a UpdateCubeSatVHTransceiverOK with default headers values
func NewUpdateCubeSatVHTransceiverOK() *UpdateCubeSatVHTransceiverOK {
	return &UpdateCubeSatVHTransceiverOK{}
}

/*
UpdateCubeSatVHTransceiverOK describes a response with status code 200, with default header values.

Update CubeSat VHF Transceiver Response
*/
type UpdateCubeSatVHTransceiverOK struct {
	Payload *models.VHFTransceiver
}

// IsSuccess returns true when this update cube sat v h transceiver o k response has a 2xx status code
func (o *UpdateCubeSatVHTransceiverOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update cube sat v h transceiver o k response has a 3xx status code
func (o *UpdateCubeSatVHTransceiverOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat v h transceiver o k response has a 4xx status code
func (o *UpdateCubeSatVHTransceiverOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update cube sat v h transceiver o k response has a 5xx status code
func (o *UpdateCubeSatVHTransceiverOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat v h transceiver o k response a status code equal to that given
func (o *UpdateCubeSatVHTransceiverOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update cube sat v h transceiver o k response
func (o *UpdateCubeSatVHTransceiverOK) Code() int {
	return 200
}

func (o *UpdateCubeSatVHTransceiverOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_vhf_transceiver/{id}][%d] updateCubeSatVHTransceiverOK %s", 200, payload)
}

func (o *UpdateCubeSatVHTransceiverOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_vhf_transceiver/{id}][%d] updateCubeSatVHTransceiverOK %s", 200, payload)
}

func (o *UpdateCubeSatVHTransceiverOK) GetPayload() *models.VHFTransceiver {
	return o.Payload
}

func (o *UpdateCubeSatVHTransceiverOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VHFTransceiver)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatVHTransceiverBadRequest creates a UpdateCubeSatVHTransceiverBadRequest with default headers values
func NewUpdateCubeSatVHTransceiverBadRequest() *UpdateCubeSatVHTransceiverBadRequest {
	return &UpdateCubeSatVHTransceiverBadRequest{}
}

/*
UpdateCubeSatVHTransceiverBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpdateCubeSatVHTransceiverBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat v h transceiver bad request response has a 2xx status code
func (o *UpdateCubeSatVHTransceiverBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat v h transceiver bad request response has a 3xx status code
func (o *UpdateCubeSatVHTransceiverBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat v h transceiver bad request response has a 4xx status code
func (o *UpdateCubeSatVHTransceiverBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cube sat v h transceiver bad request response has a 5xx status code
func (o *UpdateCubeSatVHTransceiverBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat v h transceiver bad request response a status code equal to that given
func (o *UpdateCubeSatVHTransceiverBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update cube sat v h transceiver bad request response
func (o *UpdateCubeSatVHTransceiverBadRequest) Code() int {
	return 400
}

func (o *UpdateCubeSatVHTransceiverBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_vhf_transceiver/{id}][%d] updateCubeSatVHTransceiverBadRequest %s", 400, payload)
}

func (o *UpdateCubeSatVHTransceiverBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_vhf_transceiver/{id}][%d] updateCubeSatVHTransceiverBadRequest %s", 400, payload)
}

func (o *UpdateCubeSatVHTransceiverBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatVHTransceiverBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatVHTransceiverForbidden creates a UpdateCubeSatVHTransceiverForbidden with default headers values
func NewUpdateCubeSatVHTransceiverForbidden() *UpdateCubeSatVHTransceiverForbidden {
	return &UpdateCubeSatVHTransceiverForbidden{}
}

/*
UpdateCubeSatVHTransceiverForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateCubeSatVHTransceiverForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat v h transceiver forbidden response has a 2xx status code
func (o *UpdateCubeSatVHTransceiverForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat v h transceiver forbidden response has a 3xx status code
func (o *UpdateCubeSatVHTransceiverForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat v h transceiver forbidden response has a 4xx status code
func (o *UpdateCubeSatVHTransceiverForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cube sat v h transceiver forbidden response has a 5xx status code
func (o *UpdateCubeSatVHTransceiverForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat v h transceiver forbidden response a status code equal to that given
func (o *UpdateCubeSatVHTransceiverForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update cube sat v h transceiver forbidden response
func (o *UpdateCubeSatVHTransceiverForbidden) Code() int {
	return 403
}

func (o *UpdateCubeSatVHTransceiverForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_vhf_transceiver/{id}][%d] updateCubeSatVHTransceiverForbidden %s", 403, payload)
}

func (o *UpdateCubeSatVHTransceiverForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_vhf_transceiver/{id}][%d] updateCubeSatVHTransceiverForbidden %s", 403, payload)
}

func (o *UpdateCubeSatVHTransceiverForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatVHTransceiverForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatVHTransceiverUnprocessableEntity creates a UpdateCubeSatVHTransceiverUnprocessableEntity with default headers values
func NewUpdateCubeSatVHTransceiverUnprocessableEntity() *UpdateCubeSatVHTransceiverUnprocessableEntity {
	return &UpdateCubeSatVHTransceiverUnprocessableEntity{}
}

/*
UpdateCubeSatVHTransceiverUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type UpdateCubeSatVHTransceiverUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat v h transceiver unprocessable entity response has a 2xx status code
func (o *UpdateCubeSatVHTransceiverUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat v h transceiver unprocessable entity response has a 3xx status code
func (o *UpdateCubeSatVHTransceiverUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat v h transceiver unprocessable entity response has a 4xx status code
func (o *UpdateCubeSatVHTransceiverUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cube sat v h transceiver unprocessable entity response has a 5xx status code
func (o *UpdateCubeSatVHTransceiverUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat v h transceiver unprocessable entity response a status code equal to that given
func (o *UpdateCubeSatVHTransceiverUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the update cube sat v h transceiver unprocessable entity response
func (o *UpdateCubeSatVHTransceiverUnprocessableEntity) Code() int {
	return 422
}

func (o *UpdateCubeSatVHTransceiverUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_vhf_transceiver/{id}][%d] updateCubeSatVHTransceiverUnprocessableEntity %s", 422, payload)
}

func (o *UpdateCubeSatVHTransceiverUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_vhf_transceiver/{id}][%d] updateCubeSatVHTransceiverUnprocessableEntity %s", 422, payload)
}

func (o *UpdateCubeSatVHTransceiverUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatVHTransceiverUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatVHTransceiverInternalServerError creates a UpdateCubeSatVHTransceiverInternalServerError with default headers values
func NewUpdateCubeSatVHTransceiverInternalServerError() *UpdateCubeSatVHTransceiverInternalServerError {
	return &UpdateCubeSatVHTransceiverInternalServerError{}
}

/*
UpdateCubeSatVHTransceiverInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type UpdateCubeSatVHTransceiverInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat v h transceiver internal server error response has a 2xx status code
func (o *UpdateCubeSatVHTransceiverInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat v h transceiver internal server error response has a 3xx status code
func (o *UpdateCubeSatVHTransceiverInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat v h transceiver internal server error response has a 4xx status code
func (o *UpdateCubeSatVHTransceiverInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update cube sat v h transceiver internal server error response has a 5xx status code
func (o *UpdateCubeSatVHTransceiverInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update cube sat v h transceiver internal server error response a status code equal to that given
func (o *UpdateCubeSatVHTransceiverInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update cube sat v h transceiver internal server error response
func (o *UpdateCubeSatVHTransceiverInternalServerError) Code() int {
	return 500
}

func (o *UpdateCubeSatVHTransceiverInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_vhf_transceiver/{id}][%d] updateCubeSatVHTransceiverInternalServerError %s", 500, payload)
}

func (o *UpdateCubeSatVHTransceiverInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_vhf_transceiver/{id}][%d] updateCubeSatVHTransceiverInternalServerError %s", 500, payload)
}

func (o *UpdateCubeSatVHTransceiverInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatVHTransceiverInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
