// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	models "github.com/Maksim646/space_vpx_satellite/internal/api/definition"
)

// UpdateCubeSatBoardComputingModuleByProjectReader is a Reader for the UpdateCubeSatBoardComputingModuleByProject structure.
type UpdateCubeSatBoardComputingModuleByProjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateCubeSatBoardComputingModuleByProjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateCubeSatBoardComputingModuleByProjectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateCubeSatBoardComputingModuleByProjectBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateCubeSatBoardComputingModuleByProjectUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateCubeSatBoardComputingModuleByProjectForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateCubeSatBoardComputingModuleByProjectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateCubeSatBoardComputingModuleByProjectUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateCubeSatBoardComputingModuleByProjectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /projects/{project_id}/board_computing_module] UpdateCubeSatBoardComputingModuleByProject", response, response.Code())
	}
}

// NewUpdateCubeSatBoardComputingModuleByProjectOK creates a UpdateCubeSatBoardComputingModuleByProjectOK with default headers values
func NewUpdateCubeSatBoardComputingModuleByProjectOK() *UpdateCubeSatBoardComputingModuleByProjectOK {
	return &UpdateCubeSatBoardComputingModuleByProjectOK{}
}

/*
UpdateCubeSatBoardComputingModuleByProjectOK describes a response with status code 200, with default header values.

Successfully updated Board Computing Module
*/
type UpdateCubeSatBoardComputingModuleByProjectOK struct {
	Payload *models.CubeSatProject
}

// IsSuccess returns true when this update cube sat board computing module by project o k response has a 2xx status code
func (o *UpdateCubeSatBoardComputingModuleByProjectOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update cube sat board computing module by project o k response has a 3xx status code
func (o *UpdateCubeSatBoardComputingModuleByProjectOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat board computing module by project o k response has a 4xx status code
func (o *UpdateCubeSatBoardComputingModuleByProjectOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update cube sat board computing module by project o k response has a 5xx status code
func (o *UpdateCubeSatBoardComputingModuleByProjectOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat board computing module by project o k response a status code equal to that given
func (o *UpdateCubeSatBoardComputingModuleByProjectOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update cube sat board computing module by project o k response
func (o *UpdateCubeSatBoardComputingModuleByProjectOK) Code() int {
	return 200
}

func (o *UpdateCubeSatBoardComputingModuleByProjectOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/board_computing_module][%d] updateCubeSatBoardComputingModuleByProjectOK %s", 200, payload)
}

func (o *UpdateCubeSatBoardComputingModuleByProjectOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/board_computing_module][%d] updateCubeSatBoardComputingModuleByProjectOK %s", 200, payload)
}

func (o *UpdateCubeSatBoardComputingModuleByProjectOK) GetPayload() *models.CubeSatProject {
	return o.Payload
}

func (o *UpdateCubeSatBoardComputingModuleByProjectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CubeSatProject)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatBoardComputingModuleByProjectBadRequest creates a UpdateCubeSatBoardComputingModuleByProjectBadRequest with default headers values
func NewUpdateCubeSatBoardComputingModuleByProjectBadRequest() *UpdateCubeSatBoardComputingModuleByProjectBadRequest {
	return &UpdateCubeSatBoardComputingModuleByProjectBadRequest{}
}

/*
UpdateCubeSatBoardComputingModuleByProjectBadRequest describes a response with status code 400, with default header values.

Bad request (e.g., invalid input)
*/
type UpdateCubeSatBoardComputingModuleByProjectBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat board computing module by project bad request response has a 2xx status code
func (o *UpdateCubeSatBoardComputingModuleByProjectBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat board computing module by project bad request response has a 3xx status code
func (o *UpdateCubeSatBoardComputingModuleByProjectBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat board computing module by project bad request response has a 4xx status code
func (o *UpdateCubeSatBoardComputingModuleByProjectBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cube sat board computing module by project bad request response has a 5xx status code
func (o *UpdateCubeSatBoardComputingModuleByProjectBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat board computing module by project bad request response a status code equal to that given
func (o *UpdateCubeSatBoardComputingModuleByProjectBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update cube sat board computing module by project bad request response
func (o *UpdateCubeSatBoardComputingModuleByProjectBadRequest) Code() int {
	return 400
}

func (o *UpdateCubeSatBoardComputingModuleByProjectBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/board_computing_module][%d] updateCubeSatBoardComputingModuleByProjectBadRequest %s", 400, payload)
}

func (o *UpdateCubeSatBoardComputingModuleByProjectBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/board_computing_module][%d] updateCubeSatBoardComputingModuleByProjectBadRequest %s", 400, payload)
}

func (o *UpdateCubeSatBoardComputingModuleByProjectBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatBoardComputingModuleByProjectBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatBoardComputingModuleByProjectUnauthorized creates a UpdateCubeSatBoardComputingModuleByProjectUnauthorized with default headers values
func NewUpdateCubeSatBoardComputingModuleByProjectUnauthorized() *UpdateCubeSatBoardComputingModuleByProjectUnauthorized {
	return &UpdateCubeSatBoardComputingModuleByProjectUnauthorized{}
}

/*
UpdateCubeSatBoardComputingModuleByProjectUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateCubeSatBoardComputingModuleByProjectUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat board computing module by project unauthorized response has a 2xx status code
func (o *UpdateCubeSatBoardComputingModuleByProjectUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat board computing module by project unauthorized response has a 3xx status code
func (o *UpdateCubeSatBoardComputingModuleByProjectUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat board computing module by project unauthorized response has a 4xx status code
func (o *UpdateCubeSatBoardComputingModuleByProjectUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cube sat board computing module by project unauthorized response has a 5xx status code
func (o *UpdateCubeSatBoardComputingModuleByProjectUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat board computing module by project unauthorized response a status code equal to that given
func (o *UpdateCubeSatBoardComputingModuleByProjectUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update cube sat board computing module by project unauthorized response
func (o *UpdateCubeSatBoardComputingModuleByProjectUnauthorized) Code() int {
	return 401
}

func (o *UpdateCubeSatBoardComputingModuleByProjectUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/board_computing_module][%d] updateCubeSatBoardComputingModuleByProjectUnauthorized %s", 401, payload)
}

func (o *UpdateCubeSatBoardComputingModuleByProjectUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/board_computing_module][%d] updateCubeSatBoardComputingModuleByProjectUnauthorized %s", 401, payload)
}

func (o *UpdateCubeSatBoardComputingModuleByProjectUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatBoardComputingModuleByProjectUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatBoardComputingModuleByProjectForbidden creates a UpdateCubeSatBoardComputingModuleByProjectForbidden with default headers values
func NewUpdateCubeSatBoardComputingModuleByProjectForbidden() *UpdateCubeSatBoardComputingModuleByProjectForbidden {
	return &UpdateCubeSatBoardComputingModuleByProjectForbidden{}
}

/*
UpdateCubeSatBoardComputingModuleByProjectForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateCubeSatBoardComputingModuleByProjectForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat board computing module by project forbidden response has a 2xx status code
func (o *UpdateCubeSatBoardComputingModuleByProjectForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat board computing module by project forbidden response has a 3xx status code
func (o *UpdateCubeSatBoardComputingModuleByProjectForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat board computing module by project forbidden response has a 4xx status code
func (o *UpdateCubeSatBoardComputingModuleByProjectForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cube sat board computing module by project forbidden response has a 5xx status code
func (o *UpdateCubeSatBoardComputingModuleByProjectForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat board computing module by project forbidden response a status code equal to that given
func (o *UpdateCubeSatBoardComputingModuleByProjectForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update cube sat board computing module by project forbidden response
func (o *UpdateCubeSatBoardComputingModuleByProjectForbidden) Code() int {
	return 403
}

func (o *UpdateCubeSatBoardComputingModuleByProjectForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/board_computing_module][%d] updateCubeSatBoardComputingModuleByProjectForbidden %s", 403, payload)
}

func (o *UpdateCubeSatBoardComputingModuleByProjectForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/board_computing_module][%d] updateCubeSatBoardComputingModuleByProjectForbidden %s", 403, payload)
}

func (o *UpdateCubeSatBoardComputingModuleByProjectForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatBoardComputingModuleByProjectForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatBoardComputingModuleByProjectNotFound creates a UpdateCubeSatBoardComputingModuleByProjectNotFound with default headers values
func NewUpdateCubeSatBoardComputingModuleByProjectNotFound() *UpdateCubeSatBoardComputingModuleByProjectNotFound {
	return &UpdateCubeSatBoardComputingModuleByProjectNotFound{}
}

/*
UpdateCubeSatBoardComputingModuleByProjectNotFound describes a response with status code 404, with default header values.

Project not found
*/
type UpdateCubeSatBoardComputingModuleByProjectNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat board computing module by project not found response has a 2xx status code
func (o *UpdateCubeSatBoardComputingModuleByProjectNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat board computing module by project not found response has a 3xx status code
func (o *UpdateCubeSatBoardComputingModuleByProjectNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat board computing module by project not found response has a 4xx status code
func (o *UpdateCubeSatBoardComputingModuleByProjectNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cube sat board computing module by project not found response has a 5xx status code
func (o *UpdateCubeSatBoardComputingModuleByProjectNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat board computing module by project not found response a status code equal to that given
func (o *UpdateCubeSatBoardComputingModuleByProjectNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update cube sat board computing module by project not found response
func (o *UpdateCubeSatBoardComputingModuleByProjectNotFound) Code() int {
	return 404
}

func (o *UpdateCubeSatBoardComputingModuleByProjectNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/board_computing_module][%d] updateCubeSatBoardComputingModuleByProjectNotFound %s", 404, payload)
}

func (o *UpdateCubeSatBoardComputingModuleByProjectNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/board_computing_module][%d] updateCubeSatBoardComputingModuleByProjectNotFound %s", 404, payload)
}

func (o *UpdateCubeSatBoardComputingModuleByProjectNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatBoardComputingModuleByProjectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatBoardComputingModuleByProjectUnprocessableEntity creates a UpdateCubeSatBoardComputingModuleByProjectUnprocessableEntity with default headers values
func NewUpdateCubeSatBoardComputingModuleByProjectUnprocessableEntity() *UpdateCubeSatBoardComputingModuleByProjectUnprocessableEntity {
	return &UpdateCubeSatBoardComputingModuleByProjectUnprocessableEntity{}
}

/*
UpdateCubeSatBoardComputingModuleByProjectUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity (e.g., validation errors)
*/
type UpdateCubeSatBoardComputingModuleByProjectUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat board computing module by project unprocessable entity response has a 2xx status code
func (o *UpdateCubeSatBoardComputingModuleByProjectUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat board computing module by project unprocessable entity response has a 3xx status code
func (o *UpdateCubeSatBoardComputingModuleByProjectUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat board computing module by project unprocessable entity response has a 4xx status code
func (o *UpdateCubeSatBoardComputingModuleByProjectUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cube sat board computing module by project unprocessable entity response has a 5xx status code
func (o *UpdateCubeSatBoardComputingModuleByProjectUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat board computing module by project unprocessable entity response a status code equal to that given
func (o *UpdateCubeSatBoardComputingModuleByProjectUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the update cube sat board computing module by project unprocessable entity response
func (o *UpdateCubeSatBoardComputingModuleByProjectUnprocessableEntity) Code() int {
	return 422
}

func (o *UpdateCubeSatBoardComputingModuleByProjectUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/board_computing_module][%d] updateCubeSatBoardComputingModuleByProjectUnprocessableEntity %s", 422, payload)
}

func (o *UpdateCubeSatBoardComputingModuleByProjectUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/board_computing_module][%d] updateCubeSatBoardComputingModuleByProjectUnprocessableEntity %s", 422, payload)
}

func (o *UpdateCubeSatBoardComputingModuleByProjectUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatBoardComputingModuleByProjectUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatBoardComputingModuleByProjectInternalServerError creates a UpdateCubeSatBoardComputingModuleByProjectInternalServerError with default headers values
func NewUpdateCubeSatBoardComputingModuleByProjectInternalServerError() *UpdateCubeSatBoardComputingModuleByProjectInternalServerError {
	return &UpdateCubeSatBoardComputingModuleByProjectInternalServerError{}
}

/*
UpdateCubeSatBoardComputingModuleByProjectInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type UpdateCubeSatBoardComputingModuleByProjectInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat board computing module by project internal server error response has a 2xx status code
func (o *UpdateCubeSatBoardComputingModuleByProjectInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat board computing module by project internal server error response has a 3xx status code
func (o *UpdateCubeSatBoardComputingModuleByProjectInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat board computing module by project internal server error response has a 4xx status code
func (o *UpdateCubeSatBoardComputingModuleByProjectInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update cube sat board computing module by project internal server error response has a 5xx status code
func (o *UpdateCubeSatBoardComputingModuleByProjectInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update cube sat board computing module by project internal server error response a status code equal to that given
func (o *UpdateCubeSatBoardComputingModuleByProjectInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update cube sat board computing module by project internal server error response
func (o *UpdateCubeSatBoardComputingModuleByProjectInternalServerError) Code() int {
	return 500
}

func (o *UpdateCubeSatBoardComputingModuleByProjectInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/board_computing_module][%d] updateCubeSatBoardComputingModuleByProjectInternalServerError %s", 500, payload)
}

func (o *UpdateCubeSatBoardComputingModuleByProjectInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/board_computing_module][%d] updateCubeSatBoardComputingModuleByProjectInternalServerError %s", 500, payload)
}

func (o *UpdateCubeSatBoardComputingModuleByProjectInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatBoardComputingModuleByProjectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
