// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	models "github.com/Maksim646/space_vpx_satellite/internal/api/definition"
)

// CreateProjectReader is a Reader for the CreateProject structure.
type CreateProjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateProjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateProjectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateProjectBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateProjectForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateProjectUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateProjectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /project] CreateProject", response, response.Code())
	}
}

// NewCreateProjectOK creates a CreateProjectOK with default headers values
func NewCreateProjectOK() *CreateProjectOK {
	return &CreateProjectOK{}
}

/*
CreateProjectOK describes a response with status code 200, with default header values.

Create Project Response
*/
type CreateProjectOK struct {
	Payload *models.CreateProjectResponse
}

// IsSuccess returns true when this create project o k response has a 2xx status code
func (o *CreateProjectOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create project o k response has a 3xx status code
func (o *CreateProjectOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project o k response has a 4xx status code
func (o *CreateProjectOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create project o k response has a 5xx status code
func (o *CreateProjectOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create project o k response a status code equal to that given
func (o *CreateProjectOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create project o k response
func (o *CreateProjectOK) Code() int {
	return 200
}

func (o *CreateProjectOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /project][%d] createProjectOK %s", 200, payload)
}

func (o *CreateProjectOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /project][%d] createProjectOK %s", 200, payload)
}

func (o *CreateProjectOK) GetPayload() *models.CreateProjectResponse {
	return o.Payload
}

func (o *CreateProjectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreateProjectResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProjectBadRequest creates a CreateProjectBadRequest with default headers values
func NewCreateProjectBadRequest() *CreateProjectBadRequest {
	return &CreateProjectBadRequest{}
}

/*
CreateProjectBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CreateProjectBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this create project bad request response has a 2xx status code
func (o *CreateProjectBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project bad request response has a 3xx status code
func (o *CreateProjectBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project bad request response has a 4xx status code
func (o *CreateProjectBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project bad request response has a 5xx status code
func (o *CreateProjectBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create project bad request response a status code equal to that given
func (o *CreateProjectBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create project bad request response
func (o *CreateProjectBadRequest) Code() int {
	return 400
}

func (o *CreateProjectBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /project][%d] createProjectBadRequest %s", 400, payload)
}

func (o *CreateProjectBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /project][%d] createProjectBadRequest %s", 400, payload)
}

func (o *CreateProjectBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateProjectBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProjectForbidden creates a CreateProjectForbidden with default headers values
func NewCreateProjectForbidden() *CreateProjectForbidden {
	return &CreateProjectForbidden{}
}

/*
CreateProjectForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateProjectForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this create project forbidden response has a 2xx status code
func (o *CreateProjectForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project forbidden response has a 3xx status code
func (o *CreateProjectForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project forbidden response has a 4xx status code
func (o *CreateProjectForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project forbidden response has a 5xx status code
func (o *CreateProjectForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create project forbidden response a status code equal to that given
func (o *CreateProjectForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create project forbidden response
func (o *CreateProjectForbidden) Code() int {
	return 403
}

func (o *CreateProjectForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /project][%d] createProjectForbidden %s", 403, payload)
}

func (o *CreateProjectForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /project][%d] createProjectForbidden %s", 403, payload)
}

func (o *CreateProjectForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateProjectForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProjectUnprocessableEntity creates a CreateProjectUnprocessableEntity with default headers values
func NewCreateProjectUnprocessableEntity() *CreateProjectUnprocessableEntity {
	return &CreateProjectUnprocessableEntity{}
}

/*
CreateProjectUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type CreateProjectUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this create project unprocessable entity response has a 2xx status code
func (o *CreateProjectUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project unprocessable entity response has a 3xx status code
func (o *CreateProjectUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project unprocessable entity response has a 4xx status code
func (o *CreateProjectUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project unprocessable entity response has a 5xx status code
func (o *CreateProjectUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create project unprocessable entity response a status code equal to that given
func (o *CreateProjectUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the create project unprocessable entity response
func (o *CreateProjectUnprocessableEntity) Code() int {
	return 422
}

func (o *CreateProjectUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /project][%d] createProjectUnprocessableEntity %s", 422, payload)
}

func (o *CreateProjectUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /project][%d] createProjectUnprocessableEntity %s", 422, payload)
}

func (o *CreateProjectUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateProjectUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProjectInternalServerError creates a CreateProjectInternalServerError with default headers values
func NewCreateProjectInternalServerError() *CreateProjectInternalServerError {
	return &CreateProjectInternalServerError{}
}

/*
CreateProjectInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type CreateProjectInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this create project internal server error response has a 2xx status code
func (o *CreateProjectInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project internal server error response has a 3xx status code
func (o *CreateProjectInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project internal server error response has a 4xx status code
func (o *CreateProjectInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create project internal server error response has a 5xx status code
func (o *CreateProjectInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create project internal server error response a status code equal to that given
func (o *CreateProjectInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create project internal server error response
func (o *CreateProjectInternalServerError) Code() int {
	return 500
}

func (o *CreateProjectInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /project][%d] createProjectInternalServerError %s", 500, payload)
}

func (o *CreateProjectInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /project][%d] createProjectInternalServerError %s", 500, payload)
}

func (o *CreateProjectInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateProjectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
