// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	models "github.com/Maksim646/space_vpx_satellite/internal/api/definition"
)

// GetSolarPanelTopReader is a Reader for the GetSolarPanelTop structure.
type GetSolarPanelTopReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSolarPanelTopReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSolarPanelTopOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSolarPanelTopBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSolarPanelTopForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetSolarPanelTopUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSolarPanelTopInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /solar_panel_top/{id}] GetSolarPanelTop", response, response.Code())
	}
}

// NewGetSolarPanelTopOK creates a GetSolarPanelTopOK with default headers values
func NewGetSolarPanelTopOK() *GetSolarPanelTopOK {
	return &GetSolarPanelTopOK{}
}

/*
GetSolarPanelTopOK describes a response with status code 200, with default header values.

Get Solar Panel Top Response
*/
type GetSolarPanelTopOK struct {
	Payload *models.SolarPanelTop
}

// IsSuccess returns true when this get solar panel top o k response has a 2xx status code
func (o *GetSolarPanelTopOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get solar panel top o k response has a 3xx status code
func (o *GetSolarPanelTopOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get solar panel top o k response has a 4xx status code
func (o *GetSolarPanelTopOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get solar panel top o k response has a 5xx status code
func (o *GetSolarPanelTopOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get solar panel top o k response a status code equal to that given
func (o *GetSolarPanelTopOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get solar panel top o k response
func (o *GetSolarPanelTopOK) Code() int {
	return 200
}

func (o *GetSolarPanelTopOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /solar_panel_top/{id}][%d] getSolarPanelTopOK %s", 200, payload)
}

func (o *GetSolarPanelTopOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /solar_panel_top/{id}][%d] getSolarPanelTopOK %s", 200, payload)
}

func (o *GetSolarPanelTopOK) GetPayload() *models.SolarPanelTop {
	return o.Payload
}

func (o *GetSolarPanelTopOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SolarPanelTop)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSolarPanelTopBadRequest creates a GetSolarPanelTopBadRequest with default headers values
func NewGetSolarPanelTopBadRequest() *GetSolarPanelTopBadRequest {
	return &GetSolarPanelTopBadRequest{}
}

/*
GetSolarPanelTopBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetSolarPanelTopBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get solar panel top bad request response has a 2xx status code
func (o *GetSolarPanelTopBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get solar panel top bad request response has a 3xx status code
func (o *GetSolarPanelTopBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get solar panel top bad request response has a 4xx status code
func (o *GetSolarPanelTopBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get solar panel top bad request response has a 5xx status code
func (o *GetSolarPanelTopBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get solar panel top bad request response a status code equal to that given
func (o *GetSolarPanelTopBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get solar panel top bad request response
func (o *GetSolarPanelTopBadRequest) Code() int {
	return 400
}

func (o *GetSolarPanelTopBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /solar_panel_top/{id}][%d] getSolarPanelTopBadRequest %s", 400, payload)
}

func (o *GetSolarPanelTopBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /solar_panel_top/{id}][%d] getSolarPanelTopBadRequest %s", 400, payload)
}

func (o *GetSolarPanelTopBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSolarPanelTopBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSolarPanelTopForbidden creates a GetSolarPanelTopForbidden with default headers values
func NewGetSolarPanelTopForbidden() *GetSolarPanelTopForbidden {
	return &GetSolarPanelTopForbidden{}
}

/*
GetSolarPanelTopForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetSolarPanelTopForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get solar panel top forbidden response has a 2xx status code
func (o *GetSolarPanelTopForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get solar panel top forbidden response has a 3xx status code
func (o *GetSolarPanelTopForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get solar panel top forbidden response has a 4xx status code
func (o *GetSolarPanelTopForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get solar panel top forbidden response has a 5xx status code
func (o *GetSolarPanelTopForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get solar panel top forbidden response a status code equal to that given
func (o *GetSolarPanelTopForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get solar panel top forbidden response
func (o *GetSolarPanelTopForbidden) Code() int {
	return 403
}

func (o *GetSolarPanelTopForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /solar_panel_top/{id}][%d] getSolarPanelTopForbidden %s", 403, payload)
}

func (o *GetSolarPanelTopForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /solar_panel_top/{id}][%d] getSolarPanelTopForbidden %s", 403, payload)
}

func (o *GetSolarPanelTopForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSolarPanelTopForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSolarPanelTopUnprocessableEntity creates a GetSolarPanelTopUnprocessableEntity with default headers values
func NewGetSolarPanelTopUnprocessableEntity() *GetSolarPanelTopUnprocessableEntity {
	return &GetSolarPanelTopUnprocessableEntity{}
}

/*
GetSolarPanelTopUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type GetSolarPanelTopUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this get solar panel top unprocessable entity response has a 2xx status code
func (o *GetSolarPanelTopUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get solar panel top unprocessable entity response has a 3xx status code
func (o *GetSolarPanelTopUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get solar panel top unprocessable entity response has a 4xx status code
func (o *GetSolarPanelTopUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get solar panel top unprocessable entity response has a 5xx status code
func (o *GetSolarPanelTopUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get solar panel top unprocessable entity response a status code equal to that given
func (o *GetSolarPanelTopUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get solar panel top unprocessable entity response
func (o *GetSolarPanelTopUnprocessableEntity) Code() int {
	return 422
}

func (o *GetSolarPanelTopUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /solar_panel_top/{id}][%d] getSolarPanelTopUnprocessableEntity %s", 422, payload)
}

func (o *GetSolarPanelTopUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /solar_panel_top/{id}][%d] getSolarPanelTopUnprocessableEntity %s", 422, payload)
}

func (o *GetSolarPanelTopUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSolarPanelTopUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSolarPanelTopInternalServerError creates a GetSolarPanelTopInternalServerError with default headers values
func NewGetSolarPanelTopInternalServerError() *GetSolarPanelTopInternalServerError {
	return &GetSolarPanelTopInternalServerError{}
}

/*
GetSolarPanelTopInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetSolarPanelTopInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get solar panel top internal server error response has a 2xx status code
func (o *GetSolarPanelTopInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get solar panel top internal server error response has a 3xx status code
func (o *GetSolarPanelTopInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get solar panel top internal server error response has a 4xx status code
func (o *GetSolarPanelTopInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get solar panel top internal server error response has a 5xx status code
func (o *GetSolarPanelTopInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get solar panel top internal server error response a status code equal to that given
func (o *GetSolarPanelTopInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get solar panel top internal server error response
func (o *GetSolarPanelTopInternalServerError) Code() int {
	return 500
}

func (o *GetSolarPanelTopInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /solar_panel_top/{id}][%d] getSolarPanelTopInternalServerError %s", 500, payload)
}

func (o *GetSolarPanelTopInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /solar_panel_top/{id}][%d] getSolarPanelTopInternalServerError %s", 500, payload)
}

func (o *GetSolarPanelTopInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSolarPanelTopInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
