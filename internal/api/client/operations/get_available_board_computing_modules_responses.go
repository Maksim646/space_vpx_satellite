// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	models "github.com/Maksim646/space_vpx_satellite/internal/api/definition"
)

// GetAvailableBoardComputingModulesReader is a Reader for the GetAvailableBoardComputingModules structure.
type GetAvailableBoardComputingModulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAvailableBoardComputingModulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAvailableBoardComputingModulesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAvailableBoardComputingModulesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAvailableBoardComputingModulesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAvailableBoardComputingModulesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAvailableBoardComputingModulesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /board_computing_module/available_board_computing_module] GetAvailableBoardComputingModules", response, response.Code())
	}
}

// NewGetAvailableBoardComputingModulesOK creates a GetAvailableBoardComputingModulesOK with default headers values
func NewGetAvailableBoardComputingModulesOK() *GetAvailableBoardComputingModulesOK {
	return &GetAvailableBoardComputingModulesOK{}
}

/*
GetAvailableBoardComputingModulesOK describes a response with status code 200, with default header values.

Successfully retrieved list of Board Computing Modules
*/
type GetAvailableBoardComputingModulesOK struct {
	Payload *models.BoardComputingModuleList
}

// IsSuccess returns true when this get available board computing modules o k response has a 2xx status code
func (o *GetAvailableBoardComputingModulesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get available board computing modules o k response has a 3xx status code
func (o *GetAvailableBoardComputingModulesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get available board computing modules o k response has a 4xx status code
func (o *GetAvailableBoardComputingModulesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get available board computing modules o k response has a 5xx status code
func (o *GetAvailableBoardComputingModulesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get available board computing modules o k response a status code equal to that given
func (o *GetAvailableBoardComputingModulesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get available board computing modules o k response
func (o *GetAvailableBoardComputingModulesOK) Code() int {
	return 200
}

func (o *GetAvailableBoardComputingModulesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /board_computing_module/available_board_computing_module][%d] getAvailableBoardComputingModulesOK %s", 200, payload)
}

func (o *GetAvailableBoardComputingModulesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /board_computing_module/available_board_computing_module][%d] getAvailableBoardComputingModulesOK %s", 200, payload)
}

func (o *GetAvailableBoardComputingModulesOK) GetPayload() *models.BoardComputingModuleList {
	return o.Payload
}

func (o *GetAvailableBoardComputingModulesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BoardComputingModuleList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAvailableBoardComputingModulesBadRequest creates a GetAvailableBoardComputingModulesBadRequest with default headers values
func NewGetAvailableBoardComputingModulesBadRequest() *GetAvailableBoardComputingModulesBadRequest {
	return &GetAvailableBoardComputingModulesBadRequest{}
}

/*
GetAvailableBoardComputingModulesBadRequest describes a response with status code 400, with default header values.

Bad request (e.g., invalid input)
*/
type GetAvailableBoardComputingModulesBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get available board computing modules bad request response has a 2xx status code
func (o *GetAvailableBoardComputingModulesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get available board computing modules bad request response has a 3xx status code
func (o *GetAvailableBoardComputingModulesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get available board computing modules bad request response has a 4xx status code
func (o *GetAvailableBoardComputingModulesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get available board computing modules bad request response has a 5xx status code
func (o *GetAvailableBoardComputingModulesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get available board computing modules bad request response a status code equal to that given
func (o *GetAvailableBoardComputingModulesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get available board computing modules bad request response
func (o *GetAvailableBoardComputingModulesBadRequest) Code() int {
	return 400
}

func (o *GetAvailableBoardComputingModulesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /board_computing_module/available_board_computing_module][%d] getAvailableBoardComputingModulesBadRequest %s", 400, payload)
}

func (o *GetAvailableBoardComputingModulesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /board_computing_module/available_board_computing_module][%d] getAvailableBoardComputingModulesBadRequest %s", 400, payload)
}

func (o *GetAvailableBoardComputingModulesBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAvailableBoardComputingModulesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAvailableBoardComputingModulesUnauthorized creates a GetAvailableBoardComputingModulesUnauthorized with default headers values
func NewGetAvailableBoardComputingModulesUnauthorized() *GetAvailableBoardComputingModulesUnauthorized {
	return &GetAvailableBoardComputingModulesUnauthorized{}
}

/*
GetAvailableBoardComputingModulesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAvailableBoardComputingModulesUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get available board computing modules unauthorized response has a 2xx status code
func (o *GetAvailableBoardComputingModulesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get available board computing modules unauthorized response has a 3xx status code
func (o *GetAvailableBoardComputingModulesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get available board computing modules unauthorized response has a 4xx status code
func (o *GetAvailableBoardComputingModulesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get available board computing modules unauthorized response has a 5xx status code
func (o *GetAvailableBoardComputingModulesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get available board computing modules unauthorized response a status code equal to that given
func (o *GetAvailableBoardComputingModulesUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get available board computing modules unauthorized response
func (o *GetAvailableBoardComputingModulesUnauthorized) Code() int {
	return 401
}

func (o *GetAvailableBoardComputingModulesUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /board_computing_module/available_board_computing_module][%d] getAvailableBoardComputingModulesUnauthorized %s", 401, payload)
}

func (o *GetAvailableBoardComputingModulesUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /board_computing_module/available_board_computing_module][%d] getAvailableBoardComputingModulesUnauthorized %s", 401, payload)
}

func (o *GetAvailableBoardComputingModulesUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAvailableBoardComputingModulesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAvailableBoardComputingModulesForbidden creates a GetAvailableBoardComputingModulesForbidden with default headers values
func NewGetAvailableBoardComputingModulesForbidden() *GetAvailableBoardComputingModulesForbidden {
	return &GetAvailableBoardComputingModulesForbidden{}
}

/*
GetAvailableBoardComputingModulesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAvailableBoardComputingModulesForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get available board computing modules forbidden response has a 2xx status code
func (o *GetAvailableBoardComputingModulesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get available board computing modules forbidden response has a 3xx status code
func (o *GetAvailableBoardComputingModulesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get available board computing modules forbidden response has a 4xx status code
func (o *GetAvailableBoardComputingModulesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get available board computing modules forbidden response has a 5xx status code
func (o *GetAvailableBoardComputingModulesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get available board computing modules forbidden response a status code equal to that given
func (o *GetAvailableBoardComputingModulesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get available board computing modules forbidden response
func (o *GetAvailableBoardComputingModulesForbidden) Code() int {
	return 403
}

func (o *GetAvailableBoardComputingModulesForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /board_computing_module/available_board_computing_module][%d] getAvailableBoardComputingModulesForbidden %s", 403, payload)
}

func (o *GetAvailableBoardComputingModulesForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /board_computing_module/available_board_computing_module][%d] getAvailableBoardComputingModulesForbidden %s", 403, payload)
}

func (o *GetAvailableBoardComputingModulesForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAvailableBoardComputingModulesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAvailableBoardComputingModulesInternalServerError creates a GetAvailableBoardComputingModulesInternalServerError with default headers values
func NewGetAvailableBoardComputingModulesInternalServerError() *GetAvailableBoardComputingModulesInternalServerError {
	return &GetAvailableBoardComputingModulesInternalServerError{}
}

/*
GetAvailableBoardComputingModulesInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetAvailableBoardComputingModulesInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get available board computing modules internal server error response has a 2xx status code
func (o *GetAvailableBoardComputingModulesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get available board computing modules internal server error response has a 3xx status code
func (o *GetAvailableBoardComputingModulesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get available board computing modules internal server error response has a 4xx status code
func (o *GetAvailableBoardComputingModulesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get available board computing modules internal server error response has a 5xx status code
func (o *GetAvailableBoardComputingModulesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get available board computing modules internal server error response a status code equal to that given
func (o *GetAvailableBoardComputingModulesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get available board computing modules internal server error response
func (o *GetAvailableBoardComputingModulesInternalServerError) Code() int {
	return 500
}

func (o *GetAvailableBoardComputingModulesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /board_computing_module/available_board_computing_module][%d] getAvailableBoardComputingModulesInternalServerError %s", 500, payload)
}

func (o *GetAvailableBoardComputingModulesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /board_computing_module/available_board_computing_module][%d] getAvailableBoardComputingModulesInternalServerError %s", 500, payload)
}

func (o *GetAvailableBoardComputingModulesInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAvailableBoardComputingModulesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
