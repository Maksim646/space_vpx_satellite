// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	models "github.com/Maksim646/space_vpx_satellite/internal/api/definition"
)

// NewUpdateCubeSatFrameByProjectParams creates a new UpdateCubeSatFrameByProjectParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateCubeSatFrameByProjectParams() *UpdateCubeSatFrameByProjectParams {
	return &UpdateCubeSatFrameByProjectParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateCubeSatFrameByProjectParamsWithTimeout creates a new UpdateCubeSatFrameByProjectParams object
// with the ability to set a timeout on a request.
func NewUpdateCubeSatFrameByProjectParamsWithTimeout(timeout time.Duration) *UpdateCubeSatFrameByProjectParams {
	return &UpdateCubeSatFrameByProjectParams{
		timeout: timeout,
	}
}

// NewUpdateCubeSatFrameByProjectParamsWithContext creates a new UpdateCubeSatFrameByProjectParams object
// with the ability to set a context for a request.
func NewUpdateCubeSatFrameByProjectParamsWithContext(ctx context.Context) *UpdateCubeSatFrameByProjectParams {
	return &UpdateCubeSatFrameByProjectParams{
		Context: ctx,
	}
}

// NewUpdateCubeSatFrameByProjectParamsWithHTTPClient creates a new UpdateCubeSatFrameByProjectParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateCubeSatFrameByProjectParamsWithHTTPClient(client *http.Client) *UpdateCubeSatFrameByProjectParams {
	return &UpdateCubeSatFrameByProjectParams{
		HTTPClient: client,
	}
}

/*
UpdateCubeSatFrameByProjectParams contains all the parameters to send to the API endpoint

	for the update cube sat frame by project operation.

	Typically these are written to a http.Request.
*/
type UpdateCubeSatFrameByProjectParams struct {

	/* AddCubeSatFrame.

	   Frame object to update
	*/
	AddCubeSatFrame *models.AddCubeSatFrame

	/* ProjectID.

	   The ID of the project to update
	*/
	ProjectID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update cube sat frame by project params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateCubeSatFrameByProjectParams) WithDefaults() *UpdateCubeSatFrameByProjectParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update cube sat frame by project params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateCubeSatFrameByProjectParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update cube sat frame by project params
func (o *UpdateCubeSatFrameByProjectParams) WithTimeout(timeout time.Duration) *UpdateCubeSatFrameByProjectParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update cube sat frame by project params
func (o *UpdateCubeSatFrameByProjectParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update cube sat frame by project params
func (o *UpdateCubeSatFrameByProjectParams) WithContext(ctx context.Context) *UpdateCubeSatFrameByProjectParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update cube sat frame by project params
func (o *UpdateCubeSatFrameByProjectParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update cube sat frame by project params
func (o *UpdateCubeSatFrameByProjectParams) WithHTTPClient(client *http.Client) *UpdateCubeSatFrameByProjectParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update cube sat frame by project params
func (o *UpdateCubeSatFrameByProjectParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAddCubeSatFrame adds the addCubeSatFrame to the update cube sat frame by project params
func (o *UpdateCubeSatFrameByProjectParams) WithAddCubeSatFrame(addCubeSatFrame *models.AddCubeSatFrame) *UpdateCubeSatFrameByProjectParams {
	o.SetAddCubeSatFrame(addCubeSatFrame)
	return o
}

// SetAddCubeSatFrame adds the addCubeSatFrame to the update cube sat frame by project params
func (o *UpdateCubeSatFrameByProjectParams) SetAddCubeSatFrame(addCubeSatFrame *models.AddCubeSatFrame) {
	o.AddCubeSatFrame = addCubeSatFrame
}

// WithProjectID adds the projectID to the update cube sat frame by project params
func (o *UpdateCubeSatFrameByProjectParams) WithProjectID(projectID string) *UpdateCubeSatFrameByProjectParams {
	o.SetProjectID(projectID)
	return o
}

// SetProjectID adds the projectId to the update cube sat frame by project params
func (o *UpdateCubeSatFrameByProjectParams) SetProjectID(projectID string) {
	o.ProjectID = projectID
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateCubeSatFrameByProjectParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.AddCubeSatFrame != nil {
		if err := r.SetBodyParam(o.AddCubeSatFrame); err != nil {
			return err
		}
	}

	// path param project_id
	if err := r.SetPathParam("project_id", o.ProjectID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
