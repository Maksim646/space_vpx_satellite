// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	models "github.com/Maksim646/space_vpx_satellite/internal/api/definition"
)

// GetBoardComputingModuleByIDReader is a Reader for the GetBoardComputingModuleByID structure.
type GetBoardComputingModuleByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBoardComputingModuleByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBoardComputingModuleByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetBoardComputingModuleByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetBoardComputingModuleByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetBoardComputingModuleByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetBoardComputingModuleByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetBoardComputingModuleByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /board_computing_module/{id}] GetBoardComputingModuleByID", response, response.Code())
	}
}

// NewGetBoardComputingModuleByIDOK creates a GetBoardComputingModuleByIDOK with default headers values
func NewGetBoardComputingModuleByIDOK() *GetBoardComputingModuleByIDOK {
	return &GetBoardComputingModuleByIDOK{}
}

/*
GetBoardComputingModuleByIDOK describes a response with status code 200, with default header values.

Successfully retrieved Board Computing Module
*/
type GetBoardComputingModuleByIDOK struct {
	Payload *models.BoardComputingModule
}

// IsSuccess returns true when this get board computing module by Id o k response has a 2xx status code
func (o *GetBoardComputingModuleByIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get board computing module by Id o k response has a 3xx status code
func (o *GetBoardComputingModuleByIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get board computing module by Id o k response has a 4xx status code
func (o *GetBoardComputingModuleByIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get board computing module by Id o k response has a 5xx status code
func (o *GetBoardComputingModuleByIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get board computing module by Id o k response a status code equal to that given
func (o *GetBoardComputingModuleByIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get board computing module by Id o k response
func (o *GetBoardComputingModuleByIDOK) Code() int {
	return 200
}

func (o *GetBoardComputingModuleByIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /board_computing_module/{id}][%d] getBoardComputingModuleByIdOK %s", 200, payload)
}

func (o *GetBoardComputingModuleByIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /board_computing_module/{id}][%d] getBoardComputingModuleByIdOK %s", 200, payload)
}

func (o *GetBoardComputingModuleByIDOK) GetPayload() *models.BoardComputingModule {
	return o.Payload
}

func (o *GetBoardComputingModuleByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BoardComputingModule)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBoardComputingModuleByIDBadRequest creates a GetBoardComputingModuleByIDBadRequest with default headers values
func NewGetBoardComputingModuleByIDBadRequest() *GetBoardComputingModuleByIDBadRequest {
	return &GetBoardComputingModuleByIDBadRequest{}
}

/*
GetBoardComputingModuleByIDBadRequest describes a response with status code 400, with default header values.

Bad request (e.g., invalid input)
*/
type GetBoardComputingModuleByIDBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get board computing module by Id bad request response has a 2xx status code
func (o *GetBoardComputingModuleByIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get board computing module by Id bad request response has a 3xx status code
func (o *GetBoardComputingModuleByIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get board computing module by Id bad request response has a 4xx status code
func (o *GetBoardComputingModuleByIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get board computing module by Id bad request response has a 5xx status code
func (o *GetBoardComputingModuleByIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get board computing module by Id bad request response a status code equal to that given
func (o *GetBoardComputingModuleByIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get board computing module by Id bad request response
func (o *GetBoardComputingModuleByIDBadRequest) Code() int {
	return 400
}

func (o *GetBoardComputingModuleByIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /board_computing_module/{id}][%d] getBoardComputingModuleByIdBadRequest %s", 400, payload)
}

func (o *GetBoardComputingModuleByIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /board_computing_module/{id}][%d] getBoardComputingModuleByIdBadRequest %s", 400, payload)
}

func (o *GetBoardComputingModuleByIDBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetBoardComputingModuleByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBoardComputingModuleByIDUnauthorized creates a GetBoardComputingModuleByIDUnauthorized with default headers values
func NewGetBoardComputingModuleByIDUnauthorized() *GetBoardComputingModuleByIDUnauthorized {
	return &GetBoardComputingModuleByIDUnauthorized{}
}

/*
GetBoardComputingModuleByIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetBoardComputingModuleByIDUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get board computing module by Id unauthorized response has a 2xx status code
func (o *GetBoardComputingModuleByIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get board computing module by Id unauthorized response has a 3xx status code
func (o *GetBoardComputingModuleByIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get board computing module by Id unauthorized response has a 4xx status code
func (o *GetBoardComputingModuleByIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get board computing module by Id unauthorized response has a 5xx status code
func (o *GetBoardComputingModuleByIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get board computing module by Id unauthorized response a status code equal to that given
func (o *GetBoardComputingModuleByIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get board computing module by Id unauthorized response
func (o *GetBoardComputingModuleByIDUnauthorized) Code() int {
	return 401
}

func (o *GetBoardComputingModuleByIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /board_computing_module/{id}][%d] getBoardComputingModuleByIdUnauthorized %s", 401, payload)
}

func (o *GetBoardComputingModuleByIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /board_computing_module/{id}][%d] getBoardComputingModuleByIdUnauthorized %s", 401, payload)
}

func (o *GetBoardComputingModuleByIDUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetBoardComputingModuleByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBoardComputingModuleByIDForbidden creates a GetBoardComputingModuleByIDForbidden with default headers values
func NewGetBoardComputingModuleByIDForbidden() *GetBoardComputingModuleByIDForbidden {
	return &GetBoardComputingModuleByIDForbidden{}
}

/*
GetBoardComputingModuleByIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetBoardComputingModuleByIDForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get board computing module by Id forbidden response has a 2xx status code
func (o *GetBoardComputingModuleByIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get board computing module by Id forbidden response has a 3xx status code
func (o *GetBoardComputingModuleByIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get board computing module by Id forbidden response has a 4xx status code
func (o *GetBoardComputingModuleByIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get board computing module by Id forbidden response has a 5xx status code
func (o *GetBoardComputingModuleByIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get board computing module by Id forbidden response a status code equal to that given
func (o *GetBoardComputingModuleByIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get board computing module by Id forbidden response
func (o *GetBoardComputingModuleByIDForbidden) Code() int {
	return 403
}

func (o *GetBoardComputingModuleByIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /board_computing_module/{id}][%d] getBoardComputingModuleByIdForbidden %s", 403, payload)
}

func (o *GetBoardComputingModuleByIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /board_computing_module/{id}][%d] getBoardComputingModuleByIdForbidden %s", 403, payload)
}

func (o *GetBoardComputingModuleByIDForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetBoardComputingModuleByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBoardComputingModuleByIDNotFound creates a GetBoardComputingModuleByIDNotFound with default headers values
func NewGetBoardComputingModuleByIDNotFound() *GetBoardComputingModuleByIDNotFound {
	return &GetBoardComputingModuleByIDNotFound{}
}

/*
GetBoardComputingModuleByIDNotFound describes a response with status code 404, with default header values.

Board Computing Module not found
*/
type GetBoardComputingModuleByIDNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get board computing module by Id not found response has a 2xx status code
func (o *GetBoardComputingModuleByIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get board computing module by Id not found response has a 3xx status code
func (o *GetBoardComputingModuleByIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get board computing module by Id not found response has a 4xx status code
func (o *GetBoardComputingModuleByIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get board computing module by Id not found response has a 5xx status code
func (o *GetBoardComputingModuleByIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get board computing module by Id not found response a status code equal to that given
func (o *GetBoardComputingModuleByIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get board computing module by Id not found response
func (o *GetBoardComputingModuleByIDNotFound) Code() int {
	return 404
}

func (o *GetBoardComputingModuleByIDNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /board_computing_module/{id}][%d] getBoardComputingModuleByIdNotFound %s", 404, payload)
}

func (o *GetBoardComputingModuleByIDNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /board_computing_module/{id}][%d] getBoardComputingModuleByIdNotFound %s", 404, payload)
}

func (o *GetBoardComputingModuleByIDNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetBoardComputingModuleByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBoardComputingModuleByIDInternalServerError creates a GetBoardComputingModuleByIDInternalServerError with default headers values
func NewGetBoardComputingModuleByIDInternalServerError() *GetBoardComputingModuleByIDInternalServerError {
	return &GetBoardComputingModuleByIDInternalServerError{}
}

/*
GetBoardComputingModuleByIDInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetBoardComputingModuleByIDInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get board computing module by Id internal server error response has a 2xx status code
func (o *GetBoardComputingModuleByIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get board computing module by Id internal server error response has a 3xx status code
func (o *GetBoardComputingModuleByIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get board computing module by Id internal server error response has a 4xx status code
func (o *GetBoardComputingModuleByIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get board computing module by Id internal server error response has a 5xx status code
func (o *GetBoardComputingModuleByIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get board computing module by Id internal server error response a status code equal to that given
func (o *GetBoardComputingModuleByIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get board computing module by Id internal server error response
func (o *GetBoardComputingModuleByIDInternalServerError) Code() int {
	return 500
}

func (o *GetBoardComputingModuleByIDInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /board_computing_module/{id}][%d] getBoardComputingModuleByIdInternalServerError %s", 500, payload)
}

func (o *GetBoardComputingModuleByIDInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /board_computing_module/{id}][%d] getBoardComputingModuleByIdInternalServerError %s", 500, payload)
}

func (o *GetBoardComputingModuleByIDInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetBoardComputingModuleByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
