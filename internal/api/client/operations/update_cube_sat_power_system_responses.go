// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	models "github.com/Maksim646/space_vpx_satellite/internal/api/definition"
)

// UpdateCubeSatPowerSystemReader is a Reader for the UpdateCubeSatPowerSystem structure.
type UpdateCubeSatPowerSystemReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateCubeSatPowerSystemReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateCubeSatPowerSystemOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateCubeSatPowerSystemBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateCubeSatPowerSystemForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateCubeSatPowerSystemUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateCubeSatPowerSystemInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PATCH /cube_sat_power_system/{id}] UpdateCubeSatPowerSystem", response, response.Code())
	}
}

// NewUpdateCubeSatPowerSystemOK creates a UpdateCubeSatPowerSystemOK with default headers values
func NewUpdateCubeSatPowerSystemOK() *UpdateCubeSatPowerSystemOK {
	return &UpdateCubeSatPowerSystemOK{}
}

/*
UpdateCubeSatPowerSystemOK describes a response with status code 200, with default header values.

Update Power System Response
*/
type UpdateCubeSatPowerSystemOK struct {
	Payload *models.CubeSatPowerSystem
}

// IsSuccess returns true when this update cube sat power system o k response has a 2xx status code
func (o *UpdateCubeSatPowerSystemOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update cube sat power system o k response has a 3xx status code
func (o *UpdateCubeSatPowerSystemOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat power system o k response has a 4xx status code
func (o *UpdateCubeSatPowerSystemOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update cube sat power system o k response has a 5xx status code
func (o *UpdateCubeSatPowerSystemOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat power system o k response a status code equal to that given
func (o *UpdateCubeSatPowerSystemOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update cube sat power system o k response
func (o *UpdateCubeSatPowerSystemOK) Code() int {
	return 200
}

func (o *UpdateCubeSatPowerSystemOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_power_system/{id}][%d] updateCubeSatPowerSystemOK %s", 200, payload)
}

func (o *UpdateCubeSatPowerSystemOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_power_system/{id}][%d] updateCubeSatPowerSystemOK %s", 200, payload)
}

func (o *UpdateCubeSatPowerSystemOK) GetPayload() *models.CubeSatPowerSystem {
	return o.Payload
}

func (o *UpdateCubeSatPowerSystemOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CubeSatPowerSystem)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatPowerSystemBadRequest creates a UpdateCubeSatPowerSystemBadRequest with default headers values
func NewUpdateCubeSatPowerSystemBadRequest() *UpdateCubeSatPowerSystemBadRequest {
	return &UpdateCubeSatPowerSystemBadRequest{}
}

/*
UpdateCubeSatPowerSystemBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpdateCubeSatPowerSystemBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat power system bad request response has a 2xx status code
func (o *UpdateCubeSatPowerSystemBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat power system bad request response has a 3xx status code
func (o *UpdateCubeSatPowerSystemBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat power system bad request response has a 4xx status code
func (o *UpdateCubeSatPowerSystemBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cube sat power system bad request response has a 5xx status code
func (o *UpdateCubeSatPowerSystemBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat power system bad request response a status code equal to that given
func (o *UpdateCubeSatPowerSystemBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update cube sat power system bad request response
func (o *UpdateCubeSatPowerSystemBadRequest) Code() int {
	return 400
}

func (o *UpdateCubeSatPowerSystemBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_power_system/{id}][%d] updateCubeSatPowerSystemBadRequest %s", 400, payload)
}

func (o *UpdateCubeSatPowerSystemBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_power_system/{id}][%d] updateCubeSatPowerSystemBadRequest %s", 400, payload)
}

func (o *UpdateCubeSatPowerSystemBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatPowerSystemBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatPowerSystemForbidden creates a UpdateCubeSatPowerSystemForbidden with default headers values
func NewUpdateCubeSatPowerSystemForbidden() *UpdateCubeSatPowerSystemForbidden {
	return &UpdateCubeSatPowerSystemForbidden{}
}

/*
UpdateCubeSatPowerSystemForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateCubeSatPowerSystemForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat power system forbidden response has a 2xx status code
func (o *UpdateCubeSatPowerSystemForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat power system forbidden response has a 3xx status code
func (o *UpdateCubeSatPowerSystemForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat power system forbidden response has a 4xx status code
func (o *UpdateCubeSatPowerSystemForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cube sat power system forbidden response has a 5xx status code
func (o *UpdateCubeSatPowerSystemForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat power system forbidden response a status code equal to that given
func (o *UpdateCubeSatPowerSystemForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update cube sat power system forbidden response
func (o *UpdateCubeSatPowerSystemForbidden) Code() int {
	return 403
}

func (o *UpdateCubeSatPowerSystemForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_power_system/{id}][%d] updateCubeSatPowerSystemForbidden %s", 403, payload)
}

func (o *UpdateCubeSatPowerSystemForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_power_system/{id}][%d] updateCubeSatPowerSystemForbidden %s", 403, payload)
}

func (o *UpdateCubeSatPowerSystemForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatPowerSystemForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatPowerSystemUnprocessableEntity creates a UpdateCubeSatPowerSystemUnprocessableEntity with default headers values
func NewUpdateCubeSatPowerSystemUnprocessableEntity() *UpdateCubeSatPowerSystemUnprocessableEntity {
	return &UpdateCubeSatPowerSystemUnprocessableEntity{}
}

/*
UpdateCubeSatPowerSystemUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type UpdateCubeSatPowerSystemUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat power system unprocessable entity response has a 2xx status code
func (o *UpdateCubeSatPowerSystemUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat power system unprocessable entity response has a 3xx status code
func (o *UpdateCubeSatPowerSystemUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat power system unprocessable entity response has a 4xx status code
func (o *UpdateCubeSatPowerSystemUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cube sat power system unprocessable entity response has a 5xx status code
func (o *UpdateCubeSatPowerSystemUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat power system unprocessable entity response a status code equal to that given
func (o *UpdateCubeSatPowerSystemUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the update cube sat power system unprocessable entity response
func (o *UpdateCubeSatPowerSystemUnprocessableEntity) Code() int {
	return 422
}

func (o *UpdateCubeSatPowerSystemUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_power_system/{id}][%d] updateCubeSatPowerSystemUnprocessableEntity %s", 422, payload)
}

func (o *UpdateCubeSatPowerSystemUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_power_system/{id}][%d] updateCubeSatPowerSystemUnprocessableEntity %s", 422, payload)
}

func (o *UpdateCubeSatPowerSystemUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatPowerSystemUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatPowerSystemInternalServerError creates a UpdateCubeSatPowerSystemInternalServerError with default headers values
func NewUpdateCubeSatPowerSystemInternalServerError() *UpdateCubeSatPowerSystemInternalServerError {
	return &UpdateCubeSatPowerSystemInternalServerError{}
}

/*
UpdateCubeSatPowerSystemInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type UpdateCubeSatPowerSystemInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat power system internal server error response has a 2xx status code
func (o *UpdateCubeSatPowerSystemInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat power system internal server error response has a 3xx status code
func (o *UpdateCubeSatPowerSystemInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat power system internal server error response has a 4xx status code
func (o *UpdateCubeSatPowerSystemInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update cube sat power system internal server error response has a 5xx status code
func (o *UpdateCubeSatPowerSystemInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update cube sat power system internal server error response a status code equal to that given
func (o *UpdateCubeSatPowerSystemInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update cube sat power system internal server error response
func (o *UpdateCubeSatPowerSystemInternalServerError) Code() int {
	return 500
}

func (o *UpdateCubeSatPowerSystemInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_power_system/{id}][%d] updateCubeSatPowerSystemInternalServerError %s", 500, payload)
}

func (o *UpdateCubeSatPowerSystemInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_power_system/{id}][%d] updateCubeSatPowerSystemInternalServerError %s", 500, payload)
}

func (o *UpdateCubeSatPowerSystemInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatPowerSystemInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
