// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	models "github.com/Maksim646/space_vpx_satellite/internal/api/definition"
)

// UpdateCubeSatFrameReader is a Reader for the UpdateCubeSatFrame structure.
type UpdateCubeSatFrameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateCubeSatFrameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateCubeSatFrameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateCubeSatFrameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateCubeSatFrameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateCubeSatFrameUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateCubeSatFrameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PATCH /cube_sat_frame/{id}] UpdateCubeSatFrame", response, response.Code())
	}
}

// NewUpdateCubeSatFrameOK creates a UpdateCubeSatFrameOK with default headers values
func NewUpdateCubeSatFrameOK() *UpdateCubeSatFrameOK {
	return &UpdateCubeSatFrameOK{}
}

/*
UpdateCubeSatFrameOK describes a response with status code 200, with default header values.

Update CubeSat Frame Response
*/
type UpdateCubeSatFrameOK struct {
	Payload *models.CubeSatFrame
}

// IsSuccess returns true when this update cube sat frame o k response has a 2xx status code
func (o *UpdateCubeSatFrameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update cube sat frame o k response has a 3xx status code
func (o *UpdateCubeSatFrameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat frame o k response has a 4xx status code
func (o *UpdateCubeSatFrameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update cube sat frame o k response has a 5xx status code
func (o *UpdateCubeSatFrameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat frame o k response a status code equal to that given
func (o *UpdateCubeSatFrameOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update cube sat frame o k response
func (o *UpdateCubeSatFrameOK) Code() int {
	return 200
}

func (o *UpdateCubeSatFrameOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_frame/{id}][%d] updateCubeSatFrameOK %s", 200, payload)
}

func (o *UpdateCubeSatFrameOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_frame/{id}][%d] updateCubeSatFrameOK %s", 200, payload)
}

func (o *UpdateCubeSatFrameOK) GetPayload() *models.CubeSatFrame {
	return o.Payload
}

func (o *UpdateCubeSatFrameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CubeSatFrame)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatFrameBadRequest creates a UpdateCubeSatFrameBadRequest with default headers values
func NewUpdateCubeSatFrameBadRequest() *UpdateCubeSatFrameBadRequest {
	return &UpdateCubeSatFrameBadRequest{}
}

/*
UpdateCubeSatFrameBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpdateCubeSatFrameBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat frame bad request response has a 2xx status code
func (o *UpdateCubeSatFrameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat frame bad request response has a 3xx status code
func (o *UpdateCubeSatFrameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat frame bad request response has a 4xx status code
func (o *UpdateCubeSatFrameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cube sat frame bad request response has a 5xx status code
func (o *UpdateCubeSatFrameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat frame bad request response a status code equal to that given
func (o *UpdateCubeSatFrameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update cube sat frame bad request response
func (o *UpdateCubeSatFrameBadRequest) Code() int {
	return 400
}

func (o *UpdateCubeSatFrameBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_frame/{id}][%d] updateCubeSatFrameBadRequest %s", 400, payload)
}

func (o *UpdateCubeSatFrameBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_frame/{id}][%d] updateCubeSatFrameBadRequest %s", 400, payload)
}

func (o *UpdateCubeSatFrameBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatFrameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatFrameForbidden creates a UpdateCubeSatFrameForbidden with default headers values
func NewUpdateCubeSatFrameForbidden() *UpdateCubeSatFrameForbidden {
	return &UpdateCubeSatFrameForbidden{}
}

/*
UpdateCubeSatFrameForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateCubeSatFrameForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat frame forbidden response has a 2xx status code
func (o *UpdateCubeSatFrameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat frame forbidden response has a 3xx status code
func (o *UpdateCubeSatFrameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat frame forbidden response has a 4xx status code
func (o *UpdateCubeSatFrameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cube sat frame forbidden response has a 5xx status code
func (o *UpdateCubeSatFrameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat frame forbidden response a status code equal to that given
func (o *UpdateCubeSatFrameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update cube sat frame forbidden response
func (o *UpdateCubeSatFrameForbidden) Code() int {
	return 403
}

func (o *UpdateCubeSatFrameForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_frame/{id}][%d] updateCubeSatFrameForbidden %s", 403, payload)
}

func (o *UpdateCubeSatFrameForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_frame/{id}][%d] updateCubeSatFrameForbidden %s", 403, payload)
}

func (o *UpdateCubeSatFrameForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatFrameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatFrameUnprocessableEntity creates a UpdateCubeSatFrameUnprocessableEntity with default headers values
func NewUpdateCubeSatFrameUnprocessableEntity() *UpdateCubeSatFrameUnprocessableEntity {
	return &UpdateCubeSatFrameUnprocessableEntity{}
}

/*
UpdateCubeSatFrameUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type UpdateCubeSatFrameUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat frame unprocessable entity response has a 2xx status code
func (o *UpdateCubeSatFrameUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat frame unprocessable entity response has a 3xx status code
func (o *UpdateCubeSatFrameUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat frame unprocessable entity response has a 4xx status code
func (o *UpdateCubeSatFrameUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cube sat frame unprocessable entity response has a 5xx status code
func (o *UpdateCubeSatFrameUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat frame unprocessable entity response a status code equal to that given
func (o *UpdateCubeSatFrameUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the update cube sat frame unprocessable entity response
func (o *UpdateCubeSatFrameUnprocessableEntity) Code() int {
	return 422
}

func (o *UpdateCubeSatFrameUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_frame/{id}][%d] updateCubeSatFrameUnprocessableEntity %s", 422, payload)
}

func (o *UpdateCubeSatFrameUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_frame/{id}][%d] updateCubeSatFrameUnprocessableEntity %s", 422, payload)
}

func (o *UpdateCubeSatFrameUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatFrameUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatFrameInternalServerError creates a UpdateCubeSatFrameInternalServerError with default headers values
func NewUpdateCubeSatFrameInternalServerError() *UpdateCubeSatFrameInternalServerError {
	return &UpdateCubeSatFrameInternalServerError{}
}

/*
UpdateCubeSatFrameInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type UpdateCubeSatFrameInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat frame internal server error response has a 2xx status code
func (o *UpdateCubeSatFrameInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat frame internal server error response has a 3xx status code
func (o *UpdateCubeSatFrameInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat frame internal server error response has a 4xx status code
func (o *UpdateCubeSatFrameInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update cube sat frame internal server error response has a 5xx status code
func (o *UpdateCubeSatFrameInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update cube sat frame internal server error response a status code equal to that given
func (o *UpdateCubeSatFrameInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update cube sat frame internal server error response
func (o *UpdateCubeSatFrameInternalServerError) Code() int {
	return 500
}

func (o *UpdateCubeSatFrameInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_frame/{id}][%d] updateCubeSatFrameInternalServerError %s", 500, payload)
}

func (o *UpdateCubeSatFrameInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cube_sat_frame/{id}][%d] updateCubeSatFrameInternalServerError %s", 500, payload)
}

func (o *UpdateCubeSatFrameInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatFrameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
