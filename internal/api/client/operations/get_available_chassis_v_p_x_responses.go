// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	models "github.com/Maksim646/space_vpx_satellite/internal/api/definition"
)

// GetAvailableChassisVPXReader is a Reader for the GetAvailableChassisVPX structure.
type GetAvailableChassisVPXReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAvailableChassisVPXReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAvailableChassisVPXOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAvailableChassisVPXBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAvailableChassisVPXForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetAvailableChassisVPXUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAvailableChassisVPXInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /chassis_vpx/available_chassis] GetAvailableChassisVPX", response, response.Code())
	}
}

// NewGetAvailableChassisVPXOK creates a GetAvailableChassisVPXOK with default headers values
func NewGetAvailableChassisVPXOK() *GetAvailableChassisVPXOK {
	return &GetAvailableChassisVPXOK{}
}

/*
GetAvailableChassisVPXOK describes a response with status code 200, with default header values.

Get Available Chassis VPX Response
*/
type GetAvailableChassisVPXOK struct {
	Payload *models.ChassisesVPX
}

// IsSuccess returns true when this get available chassis v p x o k response has a 2xx status code
func (o *GetAvailableChassisVPXOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get available chassis v p x o k response has a 3xx status code
func (o *GetAvailableChassisVPXOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get available chassis v p x o k response has a 4xx status code
func (o *GetAvailableChassisVPXOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get available chassis v p x o k response has a 5xx status code
func (o *GetAvailableChassisVPXOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get available chassis v p x o k response a status code equal to that given
func (o *GetAvailableChassisVPXOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get available chassis v p x o k response
func (o *GetAvailableChassisVPXOK) Code() int {
	return 200
}

func (o *GetAvailableChassisVPXOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chassis_vpx/available_chassis][%d] getAvailableChassisVPXOK %s", 200, payload)
}

func (o *GetAvailableChassisVPXOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chassis_vpx/available_chassis][%d] getAvailableChassisVPXOK %s", 200, payload)
}

func (o *GetAvailableChassisVPXOK) GetPayload() *models.ChassisesVPX {
	return o.Payload
}

func (o *GetAvailableChassisVPXOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChassisesVPX)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAvailableChassisVPXBadRequest creates a GetAvailableChassisVPXBadRequest with default headers values
func NewGetAvailableChassisVPXBadRequest() *GetAvailableChassisVPXBadRequest {
	return &GetAvailableChassisVPXBadRequest{}
}

/*
GetAvailableChassisVPXBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetAvailableChassisVPXBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get available chassis v p x bad request response has a 2xx status code
func (o *GetAvailableChassisVPXBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get available chassis v p x bad request response has a 3xx status code
func (o *GetAvailableChassisVPXBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get available chassis v p x bad request response has a 4xx status code
func (o *GetAvailableChassisVPXBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get available chassis v p x bad request response has a 5xx status code
func (o *GetAvailableChassisVPXBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get available chassis v p x bad request response a status code equal to that given
func (o *GetAvailableChassisVPXBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get available chassis v p x bad request response
func (o *GetAvailableChassisVPXBadRequest) Code() int {
	return 400
}

func (o *GetAvailableChassisVPXBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chassis_vpx/available_chassis][%d] getAvailableChassisVPXBadRequest %s", 400, payload)
}

func (o *GetAvailableChassisVPXBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chassis_vpx/available_chassis][%d] getAvailableChassisVPXBadRequest %s", 400, payload)
}

func (o *GetAvailableChassisVPXBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAvailableChassisVPXBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAvailableChassisVPXForbidden creates a GetAvailableChassisVPXForbidden with default headers values
func NewGetAvailableChassisVPXForbidden() *GetAvailableChassisVPXForbidden {
	return &GetAvailableChassisVPXForbidden{}
}

/*
GetAvailableChassisVPXForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAvailableChassisVPXForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get available chassis v p x forbidden response has a 2xx status code
func (o *GetAvailableChassisVPXForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get available chassis v p x forbidden response has a 3xx status code
func (o *GetAvailableChassisVPXForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get available chassis v p x forbidden response has a 4xx status code
func (o *GetAvailableChassisVPXForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get available chassis v p x forbidden response has a 5xx status code
func (o *GetAvailableChassisVPXForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get available chassis v p x forbidden response a status code equal to that given
func (o *GetAvailableChassisVPXForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get available chassis v p x forbidden response
func (o *GetAvailableChassisVPXForbidden) Code() int {
	return 403
}

func (o *GetAvailableChassisVPXForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chassis_vpx/available_chassis][%d] getAvailableChassisVPXForbidden %s", 403, payload)
}

func (o *GetAvailableChassisVPXForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chassis_vpx/available_chassis][%d] getAvailableChassisVPXForbidden %s", 403, payload)
}

func (o *GetAvailableChassisVPXForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAvailableChassisVPXForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAvailableChassisVPXUnprocessableEntity creates a GetAvailableChassisVPXUnprocessableEntity with default headers values
func NewGetAvailableChassisVPXUnprocessableEntity() *GetAvailableChassisVPXUnprocessableEntity {
	return &GetAvailableChassisVPXUnprocessableEntity{}
}

/*
GetAvailableChassisVPXUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type GetAvailableChassisVPXUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this get available chassis v p x unprocessable entity response has a 2xx status code
func (o *GetAvailableChassisVPXUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get available chassis v p x unprocessable entity response has a 3xx status code
func (o *GetAvailableChassisVPXUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get available chassis v p x unprocessable entity response has a 4xx status code
func (o *GetAvailableChassisVPXUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get available chassis v p x unprocessable entity response has a 5xx status code
func (o *GetAvailableChassisVPXUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get available chassis v p x unprocessable entity response a status code equal to that given
func (o *GetAvailableChassisVPXUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get available chassis v p x unprocessable entity response
func (o *GetAvailableChassisVPXUnprocessableEntity) Code() int {
	return 422
}

func (o *GetAvailableChassisVPXUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chassis_vpx/available_chassis][%d] getAvailableChassisVPXUnprocessableEntity %s", 422, payload)
}

func (o *GetAvailableChassisVPXUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chassis_vpx/available_chassis][%d] getAvailableChassisVPXUnprocessableEntity %s", 422, payload)
}

func (o *GetAvailableChassisVPXUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAvailableChassisVPXUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAvailableChassisVPXInternalServerError creates a GetAvailableChassisVPXInternalServerError with default headers values
func NewGetAvailableChassisVPXInternalServerError() *GetAvailableChassisVPXInternalServerError {
	return &GetAvailableChassisVPXInternalServerError{}
}

/*
GetAvailableChassisVPXInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetAvailableChassisVPXInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get available chassis v p x internal server error response has a 2xx status code
func (o *GetAvailableChassisVPXInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get available chassis v p x internal server error response has a 3xx status code
func (o *GetAvailableChassisVPXInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get available chassis v p x internal server error response has a 4xx status code
func (o *GetAvailableChassisVPXInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get available chassis v p x internal server error response has a 5xx status code
func (o *GetAvailableChassisVPXInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get available chassis v p x internal server error response a status code equal to that given
func (o *GetAvailableChassisVPXInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get available chassis v p x internal server error response
func (o *GetAvailableChassisVPXInternalServerError) Code() int {
	return 500
}

func (o *GetAvailableChassisVPXInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chassis_vpx/available_chassis][%d] getAvailableChassisVPXInternalServerError %s", 500, payload)
}

func (o *GetAvailableChassisVPXInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chassis_vpx/available_chassis][%d] getAvailableChassisVPXInternalServerError %s", 500, payload)
}

func (o *GetAvailableChassisVPXInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAvailableChassisVPXInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
