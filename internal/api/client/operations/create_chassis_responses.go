// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	models "github.com/Maksim646/space_vpx_satellite/internal/api/definition"
)

// CreateChassisReader is a Reader for the CreateChassis structure.
type CreateChassisReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateChassisReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateChassisOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateChassisBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateChassisForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateChassisUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateChassisInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /chassis] CreateChassis", response, response.Code())
	}
}

// NewCreateChassisOK creates a CreateChassisOK with default headers values
func NewCreateChassisOK() *CreateChassisOK {
	return &CreateChassisOK{}
}

/*
CreateChassisOK describes a response with status code 200, with default header values.

Create Chassis Response
*/
type CreateChassisOK struct {
	Payload *models.CreateChassisResponse
}

// IsSuccess returns true when this create chassis o k response has a 2xx status code
func (o *CreateChassisOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create chassis o k response has a 3xx status code
func (o *CreateChassisOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create chassis o k response has a 4xx status code
func (o *CreateChassisOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create chassis o k response has a 5xx status code
func (o *CreateChassisOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create chassis o k response a status code equal to that given
func (o *CreateChassisOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create chassis o k response
func (o *CreateChassisOK) Code() int {
	return 200
}

func (o *CreateChassisOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chassis][%d] createChassisOK %s", 200, payload)
}

func (o *CreateChassisOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chassis][%d] createChassisOK %s", 200, payload)
}

func (o *CreateChassisOK) GetPayload() *models.CreateChassisResponse {
	return o.Payload
}

func (o *CreateChassisOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreateChassisResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateChassisBadRequest creates a CreateChassisBadRequest with default headers values
func NewCreateChassisBadRequest() *CreateChassisBadRequest {
	return &CreateChassisBadRequest{}
}

/*
CreateChassisBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CreateChassisBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this create chassis bad request response has a 2xx status code
func (o *CreateChassisBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create chassis bad request response has a 3xx status code
func (o *CreateChassisBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create chassis bad request response has a 4xx status code
func (o *CreateChassisBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create chassis bad request response has a 5xx status code
func (o *CreateChassisBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create chassis bad request response a status code equal to that given
func (o *CreateChassisBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create chassis bad request response
func (o *CreateChassisBadRequest) Code() int {
	return 400
}

func (o *CreateChassisBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chassis][%d] createChassisBadRequest %s", 400, payload)
}

func (o *CreateChassisBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chassis][%d] createChassisBadRequest %s", 400, payload)
}

func (o *CreateChassisBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateChassisBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateChassisForbidden creates a CreateChassisForbidden with default headers values
func NewCreateChassisForbidden() *CreateChassisForbidden {
	return &CreateChassisForbidden{}
}

/*
CreateChassisForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateChassisForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this create chassis forbidden response has a 2xx status code
func (o *CreateChassisForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create chassis forbidden response has a 3xx status code
func (o *CreateChassisForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create chassis forbidden response has a 4xx status code
func (o *CreateChassisForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create chassis forbidden response has a 5xx status code
func (o *CreateChassisForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create chassis forbidden response a status code equal to that given
func (o *CreateChassisForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create chassis forbidden response
func (o *CreateChassisForbidden) Code() int {
	return 403
}

func (o *CreateChassisForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chassis][%d] createChassisForbidden %s", 403, payload)
}

func (o *CreateChassisForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chassis][%d] createChassisForbidden %s", 403, payload)
}

func (o *CreateChassisForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateChassisForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateChassisUnprocessableEntity creates a CreateChassisUnprocessableEntity with default headers values
func NewCreateChassisUnprocessableEntity() *CreateChassisUnprocessableEntity {
	return &CreateChassisUnprocessableEntity{}
}

/*
CreateChassisUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type CreateChassisUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this create chassis unprocessable entity response has a 2xx status code
func (o *CreateChassisUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create chassis unprocessable entity response has a 3xx status code
func (o *CreateChassisUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create chassis unprocessable entity response has a 4xx status code
func (o *CreateChassisUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create chassis unprocessable entity response has a 5xx status code
func (o *CreateChassisUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create chassis unprocessable entity response a status code equal to that given
func (o *CreateChassisUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the create chassis unprocessable entity response
func (o *CreateChassisUnprocessableEntity) Code() int {
	return 422
}

func (o *CreateChassisUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chassis][%d] createChassisUnprocessableEntity %s", 422, payload)
}

func (o *CreateChassisUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chassis][%d] createChassisUnprocessableEntity %s", 422, payload)
}

func (o *CreateChassisUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateChassisUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateChassisInternalServerError creates a CreateChassisInternalServerError with default headers values
func NewCreateChassisInternalServerError() *CreateChassisInternalServerError {
	return &CreateChassisInternalServerError{}
}

/*
CreateChassisInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type CreateChassisInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this create chassis internal server error response has a 2xx status code
func (o *CreateChassisInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create chassis internal server error response has a 3xx status code
func (o *CreateChassisInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create chassis internal server error response has a 4xx status code
func (o *CreateChassisInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create chassis internal server error response has a 5xx status code
func (o *CreateChassisInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create chassis internal server error response a status code equal to that given
func (o *CreateChassisInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create chassis internal server error response
func (o *CreateChassisInternalServerError) Code() int {
	return 500
}

func (o *CreateChassisInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chassis][%d] createChassisInternalServerError %s", 500, payload)
}

func (o *CreateChassisInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chassis][%d] createChassisInternalServerError %s", 500, payload)
}

func (o *CreateChassisInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateChassisInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
