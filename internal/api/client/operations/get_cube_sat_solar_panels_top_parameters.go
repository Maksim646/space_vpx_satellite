// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetCubeSatSolarPanelsTopParams creates a new GetCubeSatSolarPanelsTopParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetCubeSatSolarPanelsTopParams() *GetCubeSatSolarPanelsTopParams {
	return &GetCubeSatSolarPanelsTopParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetCubeSatSolarPanelsTopParamsWithTimeout creates a new GetCubeSatSolarPanelsTopParams object
// with the ability to set a timeout on a request.
func NewGetCubeSatSolarPanelsTopParamsWithTimeout(timeout time.Duration) *GetCubeSatSolarPanelsTopParams {
	return &GetCubeSatSolarPanelsTopParams{
		timeout: timeout,
	}
}

// NewGetCubeSatSolarPanelsTopParamsWithContext creates a new GetCubeSatSolarPanelsTopParams object
// with the ability to set a context for a request.
func NewGetCubeSatSolarPanelsTopParamsWithContext(ctx context.Context) *GetCubeSatSolarPanelsTopParams {
	return &GetCubeSatSolarPanelsTopParams{
		Context: ctx,
	}
}

// NewGetCubeSatSolarPanelsTopParamsWithHTTPClient creates a new GetCubeSatSolarPanelsTopParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetCubeSatSolarPanelsTopParamsWithHTTPClient(client *http.Client) *GetCubeSatSolarPanelsTopParams {
	return &GetCubeSatSolarPanelsTopParams{
		HTTPClient: client,
	}
}

/*
GetCubeSatSolarPanelsTopParams contains all the parameters to send to the API endpoint

	for the get cube sat solar panels top operation.

	Typically these are written to a http.Request.
*/
type GetCubeSatSolarPanelsTopParams struct {

	/* FilterCubeSatSolarPanelByLengthMax.

	   Filter By Max Length
	*/
	FilterCubeSatSolarPanelByLengthMax *float64

	/* FilterCubeSatSolarPanelByLengthMin.

	   Filter By Min Length
	*/
	FilterCubeSatSolarPanelByLengthMin *float64

	/* Limit.

	   Offset Configs
	*/
	Limit int64

	/* Offset.

	   Offset Configs
	*/
	Offset int64

	/* SortField.

	   sort parameters
	*/
	SortField *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get cube sat solar panels top params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetCubeSatSolarPanelsTopParams) WithDefaults() *GetCubeSatSolarPanelsTopParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get cube sat solar panels top params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetCubeSatSolarPanelsTopParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get cube sat solar panels top params
func (o *GetCubeSatSolarPanelsTopParams) WithTimeout(timeout time.Duration) *GetCubeSatSolarPanelsTopParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get cube sat solar panels top params
func (o *GetCubeSatSolarPanelsTopParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get cube sat solar panels top params
func (o *GetCubeSatSolarPanelsTopParams) WithContext(ctx context.Context) *GetCubeSatSolarPanelsTopParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get cube sat solar panels top params
func (o *GetCubeSatSolarPanelsTopParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get cube sat solar panels top params
func (o *GetCubeSatSolarPanelsTopParams) WithHTTPClient(client *http.Client) *GetCubeSatSolarPanelsTopParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get cube sat solar panels top params
func (o *GetCubeSatSolarPanelsTopParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFilterCubeSatSolarPanelByLengthMax adds the filterCubeSatSolarPanelByLengthMax to the get cube sat solar panels top params
func (o *GetCubeSatSolarPanelsTopParams) WithFilterCubeSatSolarPanelByLengthMax(filterCubeSatSolarPanelByLengthMax *float64) *GetCubeSatSolarPanelsTopParams {
	o.SetFilterCubeSatSolarPanelByLengthMax(filterCubeSatSolarPanelByLengthMax)
	return o
}

// SetFilterCubeSatSolarPanelByLengthMax adds the filterCubeSatSolarPanelByLengthMax to the get cube sat solar panels top params
func (o *GetCubeSatSolarPanelsTopParams) SetFilterCubeSatSolarPanelByLengthMax(filterCubeSatSolarPanelByLengthMax *float64) {
	o.FilterCubeSatSolarPanelByLengthMax = filterCubeSatSolarPanelByLengthMax
}

// WithFilterCubeSatSolarPanelByLengthMin adds the filterCubeSatSolarPanelByLengthMin to the get cube sat solar panels top params
func (o *GetCubeSatSolarPanelsTopParams) WithFilterCubeSatSolarPanelByLengthMin(filterCubeSatSolarPanelByLengthMin *float64) *GetCubeSatSolarPanelsTopParams {
	o.SetFilterCubeSatSolarPanelByLengthMin(filterCubeSatSolarPanelByLengthMin)
	return o
}

// SetFilterCubeSatSolarPanelByLengthMin adds the filterCubeSatSolarPanelByLengthMin to the get cube sat solar panels top params
func (o *GetCubeSatSolarPanelsTopParams) SetFilterCubeSatSolarPanelByLengthMin(filterCubeSatSolarPanelByLengthMin *float64) {
	o.FilterCubeSatSolarPanelByLengthMin = filterCubeSatSolarPanelByLengthMin
}

// WithLimit adds the limit to the get cube sat solar panels top params
func (o *GetCubeSatSolarPanelsTopParams) WithLimit(limit int64) *GetCubeSatSolarPanelsTopParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the get cube sat solar panels top params
func (o *GetCubeSatSolarPanelsTopParams) SetLimit(limit int64) {
	o.Limit = limit
}

// WithOffset adds the offset to the get cube sat solar panels top params
func (o *GetCubeSatSolarPanelsTopParams) WithOffset(offset int64) *GetCubeSatSolarPanelsTopParams {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the get cube sat solar panels top params
func (o *GetCubeSatSolarPanelsTopParams) SetOffset(offset int64) {
	o.Offset = offset
}

// WithSortField adds the sortField to the get cube sat solar panels top params
func (o *GetCubeSatSolarPanelsTopParams) WithSortField(sortField *string) *GetCubeSatSolarPanelsTopParams {
	o.SetSortField(sortField)
	return o
}

// SetSortField adds the sortField to the get cube sat solar panels top params
func (o *GetCubeSatSolarPanelsTopParams) SetSortField(sortField *string) {
	o.SortField = sortField
}

// WriteToRequest writes these params to a swagger request
func (o *GetCubeSatSolarPanelsTopParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.FilterCubeSatSolarPanelByLengthMax != nil {

		// query param FilterCubeSatSolarPanelByLength[max]
		var qrFilterCubeSatSolarPanelByLengthMax float64

		if o.FilterCubeSatSolarPanelByLengthMax != nil {
			qrFilterCubeSatSolarPanelByLengthMax = *o.FilterCubeSatSolarPanelByLengthMax
		}
		qFilterCubeSatSolarPanelByLengthMax := swag.FormatFloat64(qrFilterCubeSatSolarPanelByLengthMax)
		if qFilterCubeSatSolarPanelByLengthMax != "" {

			if err := r.SetQueryParam("FilterCubeSatSolarPanelByLength[max]", qFilterCubeSatSolarPanelByLengthMax); err != nil {
				return err
			}
		}
	}

	if o.FilterCubeSatSolarPanelByLengthMin != nil {

		// query param FilterCubeSatSolarPanelByLength[min]
		var qrFilterCubeSatSolarPanelByLengthMin float64

		if o.FilterCubeSatSolarPanelByLengthMin != nil {
			qrFilterCubeSatSolarPanelByLengthMin = *o.FilterCubeSatSolarPanelByLengthMin
		}
		qFilterCubeSatSolarPanelByLengthMin := swag.FormatFloat64(qrFilterCubeSatSolarPanelByLengthMin)
		if qFilterCubeSatSolarPanelByLengthMin != "" {

			if err := r.SetQueryParam("FilterCubeSatSolarPanelByLength[min]", qFilterCubeSatSolarPanelByLengthMin); err != nil {
				return err
			}
		}
	}

	// query param limit
	qrLimit := o.Limit
	qLimit := swag.FormatInt64(qrLimit)
	if qLimit != "" {

		if err := r.SetQueryParam("limit", qLimit); err != nil {
			return err
		}
	}

	// query param offset
	qrOffset := o.Offset
	qOffset := swag.FormatInt64(qrOffset)
	if qOffset != "" {

		if err := r.SetQueryParam("offset", qOffset); err != nil {
			return err
		}
	}

	if o.SortField != nil {

		// query param sort[field]
		var qrSortField string

		if o.SortField != nil {
			qrSortField = *o.SortField
		}
		qSortField := qrSortField
		if qSortField != "" {

			if err := r.SetQueryParam("sort[field]", qSortField); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
