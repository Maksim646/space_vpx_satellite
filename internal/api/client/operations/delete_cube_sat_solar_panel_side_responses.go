// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	models "github.com/Maksim646/space_vpx_satellite/internal/api/definition"
)

// DeleteCubeSatSolarPanelSideReader is a Reader for the DeleteCubeSatSolarPanelSide structure.
type DeleteCubeSatSolarPanelSideReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteCubeSatSolarPanelSideReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteCubeSatSolarPanelSideOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteCubeSatSolarPanelSideBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteCubeSatSolarPanelSideForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewDeleteCubeSatSolarPanelSideUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteCubeSatSolarPanelSideInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /solar_panel_side/{id}] DeleteCubeSatSolarPanelSide", response, response.Code())
	}
}

// NewDeleteCubeSatSolarPanelSideOK creates a DeleteCubeSatSolarPanelSideOK with default headers values
func NewDeleteCubeSatSolarPanelSideOK() *DeleteCubeSatSolarPanelSideOK {
	return &DeleteCubeSatSolarPanelSideOK{}
}

/*
DeleteCubeSatSolarPanelSideOK describes a response with status code 200, with default header values.

Delete Cube Sat Solar Panel Side Response
*/
type DeleteCubeSatSolarPanelSideOK struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete cube sat solar panel side o k response has a 2xx status code
func (o *DeleteCubeSatSolarPanelSideOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete cube sat solar panel side o k response has a 3xx status code
func (o *DeleteCubeSatSolarPanelSideOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete cube sat solar panel side o k response has a 4xx status code
func (o *DeleteCubeSatSolarPanelSideOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete cube sat solar panel side o k response has a 5xx status code
func (o *DeleteCubeSatSolarPanelSideOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete cube sat solar panel side o k response a status code equal to that given
func (o *DeleteCubeSatSolarPanelSideOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete cube sat solar panel side o k response
func (o *DeleteCubeSatSolarPanelSideOK) Code() int {
	return 200
}

func (o *DeleteCubeSatSolarPanelSideOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /solar_panel_side/{id}][%d] deleteCubeSatSolarPanelSideOK %s", 200, payload)
}

func (o *DeleteCubeSatSolarPanelSideOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /solar_panel_side/{id}][%d] deleteCubeSatSolarPanelSideOK %s", 200, payload)
}

func (o *DeleteCubeSatSolarPanelSideOK) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteCubeSatSolarPanelSideOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCubeSatSolarPanelSideBadRequest creates a DeleteCubeSatSolarPanelSideBadRequest with default headers values
func NewDeleteCubeSatSolarPanelSideBadRequest() *DeleteCubeSatSolarPanelSideBadRequest {
	return &DeleteCubeSatSolarPanelSideBadRequest{}
}

/*
DeleteCubeSatSolarPanelSideBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type DeleteCubeSatSolarPanelSideBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete cube sat solar panel side bad request response has a 2xx status code
func (o *DeleteCubeSatSolarPanelSideBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete cube sat solar panel side bad request response has a 3xx status code
func (o *DeleteCubeSatSolarPanelSideBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete cube sat solar panel side bad request response has a 4xx status code
func (o *DeleteCubeSatSolarPanelSideBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete cube sat solar panel side bad request response has a 5xx status code
func (o *DeleteCubeSatSolarPanelSideBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete cube sat solar panel side bad request response a status code equal to that given
func (o *DeleteCubeSatSolarPanelSideBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete cube sat solar panel side bad request response
func (o *DeleteCubeSatSolarPanelSideBadRequest) Code() int {
	return 400
}

func (o *DeleteCubeSatSolarPanelSideBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /solar_panel_side/{id}][%d] deleteCubeSatSolarPanelSideBadRequest %s", 400, payload)
}

func (o *DeleteCubeSatSolarPanelSideBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /solar_panel_side/{id}][%d] deleteCubeSatSolarPanelSideBadRequest %s", 400, payload)
}

func (o *DeleteCubeSatSolarPanelSideBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteCubeSatSolarPanelSideBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCubeSatSolarPanelSideForbidden creates a DeleteCubeSatSolarPanelSideForbidden with default headers values
func NewDeleteCubeSatSolarPanelSideForbidden() *DeleteCubeSatSolarPanelSideForbidden {
	return &DeleteCubeSatSolarPanelSideForbidden{}
}

/*
DeleteCubeSatSolarPanelSideForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteCubeSatSolarPanelSideForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete cube sat solar panel side forbidden response has a 2xx status code
func (o *DeleteCubeSatSolarPanelSideForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete cube sat solar panel side forbidden response has a 3xx status code
func (o *DeleteCubeSatSolarPanelSideForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete cube sat solar panel side forbidden response has a 4xx status code
func (o *DeleteCubeSatSolarPanelSideForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete cube sat solar panel side forbidden response has a 5xx status code
func (o *DeleteCubeSatSolarPanelSideForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete cube sat solar panel side forbidden response a status code equal to that given
func (o *DeleteCubeSatSolarPanelSideForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete cube sat solar panel side forbidden response
func (o *DeleteCubeSatSolarPanelSideForbidden) Code() int {
	return 403
}

func (o *DeleteCubeSatSolarPanelSideForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /solar_panel_side/{id}][%d] deleteCubeSatSolarPanelSideForbidden %s", 403, payload)
}

func (o *DeleteCubeSatSolarPanelSideForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /solar_panel_side/{id}][%d] deleteCubeSatSolarPanelSideForbidden %s", 403, payload)
}

func (o *DeleteCubeSatSolarPanelSideForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteCubeSatSolarPanelSideForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCubeSatSolarPanelSideUnprocessableEntity creates a DeleteCubeSatSolarPanelSideUnprocessableEntity with default headers values
func NewDeleteCubeSatSolarPanelSideUnprocessableEntity() *DeleteCubeSatSolarPanelSideUnprocessableEntity {
	return &DeleteCubeSatSolarPanelSideUnprocessableEntity{}
}

/*
DeleteCubeSatSolarPanelSideUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type DeleteCubeSatSolarPanelSideUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete cube sat solar panel side unprocessable entity response has a 2xx status code
func (o *DeleteCubeSatSolarPanelSideUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete cube sat solar panel side unprocessable entity response has a 3xx status code
func (o *DeleteCubeSatSolarPanelSideUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete cube sat solar panel side unprocessable entity response has a 4xx status code
func (o *DeleteCubeSatSolarPanelSideUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete cube sat solar panel side unprocessable entity response has a 5xx status code
func (o *DeleteCubeSatSolarPanelSideUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this delete cube sat solar panel side unprocessable entity response a status code equal to that given
func (o *DeleteCubeSatSolarPanelSideUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the delete cube sat solar panel side unprocessable entity response
func (o *DeleteCubeSatSolarPanelSideUnprocessableEntity) Code() int {
	return 422
}

func (o *DeleteCubeSatSolarPanelSideUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /solar_panel_side/{id}][%d] deleteCubeSatSolarPanelSideUnprocessableEntity %s", 422, payload)
}

func (o *DeleteCubeSatSolarPanelSideUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /solar_panel_side/{id}][%d] deleteCubeSatSolarPanelSideUnprocessableEntity %s", 422, payload)
}

func (o *DeleteCubeSatSolarPanelSideUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteCubeSatSolarPanelSideUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCubeSatSolarPanelSideInternalServerError creates a DeleteCubeSatSolarPanelSideInternalServerError with default headers values
func NewDeleteCubeSatSolarPanelSideInternalServerError() *DeleteCubeSatSolarPanelSideInternalServerError {
	return &DeleteCubeSatSolarPanelSideInternalServerError{}
}

/*
DeleteCubeSatSolarPanelSideInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type DeleteCubeSatSolarPanelSideInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete cube sat solar panel side internal server error response has a 2xx status code
func (o *DeleteCubeSatSolarPanelSideInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete cube sat solar panel side internal server error response has a 3xx status code
func (o *DeleteCubeSatSolarPanelSideInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete cube sat solar panel side internal server error response has a 4xx status code
func (o *DeleteCubeSatSolarPanelSideInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete cube sat solar panel side internal server error response has a 5xx status code
func (o *DeleteCubeSatSolarPanelSideInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete cube sat solar panel side internal server error response a status code equal to that given
func (o *DeleteCubeSatSolarPanelSideInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete cube sat solar panel side internal server error response
func (o *DeleteCubeSatSolarPanelSideInternalServerError) Code() int {
	return 500
}

func (o *DeleteCubeSatSolarPanelSideInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /solar_panel_side/{id}][%d] deleteCubeSatSolarPanelSideInternalServerError %s", 500, payload)
}

func (o *DeleteCubeSatSolarPanelSideInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /solar_panel_side/{id}][%d] deleteCubeSatSolarPanelSideInternalServerError %s", 500, payload)
}

func (o *DeleteCubeSatSolarPanelSideInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteCubeSatSolarPanelSideInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
