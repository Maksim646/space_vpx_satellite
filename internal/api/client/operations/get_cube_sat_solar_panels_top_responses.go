// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	models "github.com/Maksim646/space_vpx_satellite/internal/api/definition"
)

// GetCubeSatSolarPanelsTopReader is a Reader for the GetCubeSatSolarPanelsTop structure.
type GetCubeSatSolarPanelsTopReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCubeSatSolarPanelsTopReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCubeSatSolarPanelsTopOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCubeSatSolarPanelsTopBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCubeSatSolarPanelsTopForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetCubeSatSolarPanelsTopUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCubeSatSolarPanelsTopInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /solar_panel_top/available_solar_panel_top] GetCubeSatSolarPanelsTop", response, response.Code())
	}
}

// NewGetCubeSatSolarPanelsTopOK creates a GetCubeSatSolarPanelsTopOK with default headers values
func NewGetCubeSatSolarPanelsTopOK() *GetCubeSatSolarPanelsTopOK {
	return &GetCubeSatSolarPanelsTopOK{}
}

/*
GetCubeSatSolarPanelsTopOK describes a response with status code 200, with default header values.

Get CubeSat Solar Panels Top Response
*/
type GetCubeSatSolarPanelsTopOK struct {
	Payload *models.CubeSatSolarPanelsTop
}

// IsSuccess returns true when this get cube sat solar panels top o k response has a 2xx status code
func (o *GetCubeSatSolarPanelsTopOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get cube sat solar panels top o k response has a 3xx status code
func (o *GetCubeSatSolarPanelsTopOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cube sat solar panels top o k response has a 4xx status code
func (o *GetCubeSatSolarPanelsTopOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get cube sat solar panels top o k response has a 5xx status code
func (o *GetCubeSatSolarPanelsTopOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get cube sat solar panels top o k response a status code equal to that given
func (o *GetCubeSatSolarPanelsTopOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get cube sat solar panels top o k response
func (o *GetCubeSatSolarPanelsTopOK) Code() int {
	return 200
}

func (o *GetCubeSatSolarPanelsTopOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /solar_panel_top/available_solar_panel_top][%d] getCubeSatSolarPanelsTopOK %s", 200, payload)
}

func (o *GetCubeSatSolarPanelsTopOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /solar_panel_top/available_solar_panel_top][%d] getCubeSatSolarPanelsTopOK %s", 200, payload)
}

func (o *GetCubeSatSolarPanelsTopOK) GetPayload() *models.CubeSatSolarPanelsTop {
	return o.Payload
}

func (o *GetCubeSatSolarPanelsTopOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CubeSatSolarPanelsTop)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCubeSatSolarPanelsTopBadRequest creates a GetCubeSatSolarPanelsTopBadRequest with default headers values
func NewGetCubeSatSolarPanelsTopBadRequest() *GetCubeSatSolarPanelsTopBadRequest {
	return &GetCubeSatSolarPanelsTopBadRequest{}
}

/*
GetCubeSatSolarPanelsTopBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetCubeSatSolarPanelsTopBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get cube sat solar panels top bad request response has a 2xx status code
func (o *GetCubeSatSolarPanelsTopBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cube sat solar panels top bad request response has a 3xx status code
func (o *GetCubeSatSolarPanelsTopBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cube sat solar panels top bad request response has a 4xx status code
func (o *GetCubeSatSolarPanelsTopBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cube sat solar panels top bad request response has a 5xx status code
func (o *GetCubeSatSolarPanelsTopBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get cube sat solar panels top bad request response a status code equal to that given
func (o *GetCubeSatSolarPanelsTopBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get cube sat solar panels top bad request response
func (o *GetCubeSatSolarPanelsTopBadRequest) Code() int {
	return 400
}

func (o *GetCubeSatSolarPanelsTopBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /solar_panel_top/available_solar_panel_top][%d] getCubeSatSolarPanelsTopBadRequest %s", 400, payload)
}

func (o *GetCubeSatSolarPanelsTopBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /solar_panel_top/available_solar_panel_top][%d] getCubeSatSolarPanelsTopBadRequest %s", 400, payload)
}

func (o *GetCubeSatSolarPanelsTopBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCubeSatSolarPanelsTopBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCubeSatSolarPanelsTopForbidden creates a GetCubeSatSolarPanelsTopForbidden with default headers values
func NewGetCubeSatSolarPanelsTopForbidden() *GetCubeSatSolarPanelsTopForbidden {
	return &GetCubeSatSolarPanelsTopForbidden{}
}

/*
GetCubeSatSolarPanelsTopForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCubeSatSolarPanelsTopForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get cube sat solar panels top forbidden response has a 2xx status code
func (o *GetCubeSatSolarPanelsTopForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cube sat solar panels top forbidden response has a 3xx status code
func (o *GetCubeSatSolarPanelsTopForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cube sat solar panels top forbidden response has a 4xx status code
func (o *GetCubeSatSolarPanelsTopForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cube sat solar panels top forbidden response has a 5xx status code
func (o *GetCubeSatSolarPanelsTopForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get cube sat solar panels top forbidden response a status code equal to that given
func (o *GetCubeSatSolarPanelsTopForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get cube sat solar panels top forbidden response
func (o *GetCubeSatSolarPanelsTopForbidden) Code() int {
	return 403
}

func (o *GetCubeSatSolarPanelsTopForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /solar_panel_top/available_solar_panel_top][%d] getCubeSatSolarPanelsTopForbidden %s", 403, payload)
}

func (o *GetCubeSatSolarPanelsTopForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /solar_panel_top/available_solar_panel_top][%d] getCubeSatSolarPanelsTopForbidden %s", 403, payload)
}

func (o *GetCubeSatSolarPanelsTopForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCubeSatSolarPanelsTopForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCubeSatSolarPanelsTopUnprocessableEntity creates a GetCubeSatSolarPanelsTopUnprocessableEntity with default headers values
func NewGetCubeSatSolarPanelsTopUnprocessableEntity() *GetCubeSatSolarPanelsTopUnprocessableEntity {
	return &GetCubeSatSolarPanelsTopUnprocessableEntity{}
}

/*
GetCubeSatSolarPanelsTopUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type GetCubeSatSolarPanelsTopUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this get cube sat solar panels top unprocessable entity response has a 2xx status code
func (o *GetCubeSatSolarPanelsTopUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cube sat solar panels top unprocessable entity response has a 3xx status code
func (o *GetCubeSatSolarPanelsTopUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cube sat solar panels top unprocessable entity response has a 4xx status code
func (o *GetCubeSatSolarPanelsTopUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cube sat solar panels top unprocessable entity response has a 5xx status code
func (o *GetCubeSatSolarPanelsTopUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get cube sat solar panels top unprocessable entity response a status code equal to that given
func (o *GetCubeSatSolarPanelsTopUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get cube sat solar panels top unprocessable entity response
func (o *GetCubeSatSolarPanelsTopUnprocessableEntity) Code() int {
	return 422
}

func (o *GetCubeSatSolarPanelsTopUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /solar_panel_top/available_solar_panel_top][%d] getCubeSatSolarPanelsTopUnprocessableEntity %s", 422, payload)
}

func (o *GetCubeSatSolarPanelsTopUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /solar_panel_top/available_solar_panel_top][%d] getCubeSatSolarPanelsTopUnprocessableEntity %s", 422, payload)
}

func (o *GetCubeSatSolarPanelsTopUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCubeSatSolarPanelsTopUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCubeSatSolarPanelsTopInternalServerError creates a GetCubeSatSolarPanelsTopInternalServerError with default headers values
func NewGetCubeSatSolarPanelsTopInternalServerError() *GetCubeSatSolarPanelsTopInternalServerError {
	return &GetCubeSatSolarPanelsTopInternalServerError{}
}

/*
GetCubeSatSolarPanelsTopInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetCubeSatSolarPanelsTopInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get cube sat solar panels top internal server error response has a 2xx status code
func (o *GetCubeSatSolarPanelsTopInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cube sat solar panels top internal server error response has a 3xx status code
func (o *GetCubeSatSolarPanelsTopInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cube sat solar panels top internal server error response has a 4xx status code
func (o *GetCubeSatSolarPanelsTopInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get cube sat solar panels top internal server error response has a 5xx status code
func (o *GetCubeSatSolarPanelsTopInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get cube sat solar panels top internal server error response a status code equal to that given
func (o *GetCubeSatSolarPanelsTopInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get cube sat solar panels top internal server error response
func (o *GetCubeSatSolarPanelsTopInternalServerError) Code() int {
	return 500
}

func (o *GetCubeSatSolarPanelsTopInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /solar_panel_top/available_solar_panel_top][%d] getCubeSatSolarPanelsTopInternalServerError %s", 500, payload)
}

func (o *GetCubeSatSolarPanelsTopInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /solar_panel_top/available_solar_panel_top][%d] getCubeSatSolarPanelsTopInternalServerError %s", 500, payload)
}

func (o *GetCubeSatSolarPanelsTopInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCubeSatSolarPanelsTopInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
