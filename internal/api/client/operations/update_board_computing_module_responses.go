// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	models "github.com/Maksim646/space_vpx_satellite/internal/api/definition"
)

// UpdateBoardComputingModuleReader is a Reader for the UpdateBoardComputingModule structure.
type UpdateBoardComputingModuleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateBoardComputingModuleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateBoardComputingModuleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateBoardComputingModuleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateBoardComputingModuleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateBoardComputingModuleForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateBoardComputingModuleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateBoardComputingModuleUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateBoardComputingModuleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PATCH /board_computing_module/{id}] UpdateBoardComputingModule", response, response.Code())
	}
}

// NewUpdateBoardComputingModuleOK creates a UpdateBoardComputingModuleOK with default headers values
func NewUpdateBoardComputingModuleOK() *UpdateBoardComputingModuleOK {
	return &UpdateBoardComputingModuleOK{}
}

/*
UpdateBoardComputingModuleOK describes a response with status code 200, with default header values.

Successfully updated Board Computing Module
*/
type UpdateBoardComputingModuleOK struct {
	Payload *models.BoardComputingModule
}

// IsSuccess returns true when this update board computing module o k response has a 2xx status code
func (o *UpdateBoardComputingModuleOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update board computing module o k response has a 3xx status code
func (o *UpdateBoardComputingModuleOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update board computing module o k response has a 4xx status code
func (o *UpdateBoardComputingModuleOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update board computing module o k response has a 5xx status code
func (o *UpdateBoardComputingModuleOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update board computing module o k response a status code equal to that given
func (o *UpdateBoardComputingModuleOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update board computing module o k response
func (o *UpdateBoardComputingModuleOK) Code() int {
	return 200
}

func (o *UpdateBoardComputingModuleOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /board_computing_module/{id}][%d] updateBoardComputingModuleOK %s", 200, payload)
}

func (o *UpdateBoardComputingModuleOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /board_computing_module/{id}][%d] updateBoardComputingModuleOK %s", 200, payload)
}

func (o *UpdateBoardComputingModuleOK) GetPayload() *models.BoardComputingModule {
	return o.Payload
}

func (o *UpdateBoardComputingModuleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BoardComputingModule)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBoardComputingModuleBadRequest creates a UpdateBoardComputingModuleBadRequest with default headers values
func NewUpdateBoardComputingModuleBadRequest() *UpdateBoardComputingModuleBadRequest {
	return &UpdateBoardComputingModuleBadRequest{}
}

/*
UpdateBoardComputingModuleBadRequest describes a response with status code 400, with default header values.

Bad request (e.g., invalid input)
*/
type UpdateBoardComputingModuleBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this update board computing module bad request response has a 2xx status code
func (o *UpdateBoardComputingModuleBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update board computing module bad request response has a 3xx status code
func (o *UpdateBoardComputingModuleBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update board computing module bad request response has a 4xx status code
func (o *UpdateBoardComputingModuleBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update board computing module bad request response has a 5xx status code
func (o *UpdateBoardComputingModuleBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update board computing module bad request response a status code equal to that given
func (o *UpdateBoardComputingModuleBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update board computing module bad request response
func (o *UpdateBoardComputingModuleBadRequest) Code() int {
	return 400
}

func (o *UpdateBoardComputingModuleBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /board_computing_module/{id}][%d] updateBoardComputingModuleBadRequest %s", 400, payload)
}

func (o *UpdateBoardComputingModuleBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /board_computing_module/{id}][%d] updateBoardComputingModuleBadRequest %s", 400, payload)
}

func (o *UpdateBoardComputingModuleBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateBoardComputingModuleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBoardComputingModuleUnauthorized creates a UpdateBoardComputingModuleUnauthorized with default headers values
func NewUpdateBoardComputingModuleUnauthorized() *UpdateBoardComputingModuleUnauthorized {
	return &UpdateBoardComputingModuleUnauthorized{}
}

/*
UpdateBoardComputingModuleUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateBoardComputingModuleUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this update board computing module unauthorized response has a 2xx status code
func (o *UpdateBoardComputingModuleUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update board computing module unauthorized response has a 3xx status code
func (o *UpdateBoardComputingModuleUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update board computing module unauthorized response has a 4xx status code
func (o *UpdateBoardComputingModuleUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update board computing module unauthorized response has a 5xx status code
func (o *UpdateBoardComputingModuleUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update board computing module unauthorized response a status code equal to that given
func (o *UpdateBoardComputingModuleUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update board computing module unauthorized response
func (o *UpdateBoardComputingModuleUnauthorized) Code() int {
	return 401
}

func (o *UpdateBoardComputingModuleUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /board_computing_module/{id}][%d] updateBoardComputingModuleUnauthorized %s", 401, payload)
}

func (o *UpdateBoardComputingModuleUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /board_computing_module/{id}][%d] updateBoardComputingModuleUnauthorized %s", 401, payload)
}

func (o *UpdateBoardComputingModuleUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateBoardComputingModuleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBoardComputingModuleForbidden creates a UpdateBoardComputingModuleForbidden with default headers values
func NewUpdateBoardComputingModuleForbidden() *UpdateBoardComputingModuleForbidden {
	return &UpdateBoardComputingModuleForbidden{}
}

/*
UpdateBoardComputingModuleForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateBoardComputingModuleForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this update board computing module forbidden response has a 2xx status code
func (o *UpdateBoardComputingModuleForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update board computing module forbidden response has a 3xx status code
func (o *UpdateBoardComputingModuleForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update board computing module forbidden response has a 4xx status code
func (o *UpdateBoardComputingModuleForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update board computing module forbidden response has a 5xx status code
func (o *UpdateBoardComputingModuleForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update board computing module forbidden response a status code equal to that given
func (o *UpdateBoardComputingModuleForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update board computing module forbidden response
func (o *UpdateBoardComputingModuleForbidden) Code() int {
	return 403
}

func (o *UpdateBoardComputingModuleForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /board_computing_module/{id}][%d] updateBoardComputingModuleForbidden %s", 403, payload)
}

func (o *UpdateBoardComputingModuleForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /board_computing_module/{id}][%d] updateBoardComputingModuleForbidden %s", 403, payload)
}

func (o *UpdateBoardComputingModuleForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateBoardComputingModuleForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBoardComputingModuleNotFound creates a UpdateBoardComputingModuleNotFound with default headers values
func NewUpdateBoardComputingModuleNotFound() *UpdateBoardComputingModuleNotFound {
	return &UpdateBoardComputingModuleNotFound{}
}

/*
UpdateBoardComputingModuleNotFound describes a response with status code 404, with default header values.

Board Computing Module not found
*/
type UpdateBoardComputingModuleNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this update board computing module not found response has a 2xx status code
func (o *UpdateBoardComputingModuleNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update board computing module not found response has a 3xx status code
func (o *UpdateBoardComputingModuleNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update board computing module not found response has a 4xx status code
func (o *UpdateBoardComputingModuleNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update board computing module not found response has a 5xx status code
func (o *UpdateBoardComputingModuleNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update board computing module not found response a status code equal to that given
func (o *UpdateBoardComputingModuleNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update board computing module not found response
func (o *UpdateBoardComputingModuleNotFound) Code() int {
	return 404
}

func (o *UpdateBoardComputingModuleNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /board_computing_module/{id}][%d] updateBoardComputingModuleNotFound %s", 404, payload)
}

func (o *UpdateBoardComputingModuleNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /board_computing_module/{id}][%d] updateBoardComputingModuleNotFound %s", 404, payload)
}

func (o *UpdateBoardComputingModuleNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateBoardComputingModuleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBoardComputingModuleUnprocessableEntity creates a UpdateBoardComputingModuleUnprocessableEntity with default headers values
func NewUpdateBoardComputingModuleUnprocessableEntity() *UpdateBoardComputingModuleUnprocessableEntity {
	return &UpdateBoardComputingModuleUnprocessableEntity{}
}

/*
UpdateBoardComputingModuleUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity (e.g., validation errors)
*/
type UpdateBoardComputingModuleUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this update board computing module unprocessable entity response has a 2xx status code
func (o *UpdateBoardComputingModuleUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update board computing module unprocessable entity response has a 3xx status code
func (o *UpdateBoardComputingModuleUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update board computing module unprocessable entity response has a 4xx status code
func (o *UpdateBoardComputingModuleUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this update board computing module unprocessable entity response has a 5xx status code
func (o *UpdateBoardComputingModuleUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this update board computing module unprocessable entity response a status code equal to that given
func (o *UpdateBoardComputingModuleUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the update board computing module unprocessable entity response
func (o *UpdateBoardComputingModuleUnprocessableEntity) Code() int {
	return 422
}

func (o *UpdateBoardComputingModuleUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /board_computing_module/{id}][%d] updateBoardComputingModuleUnprocessableEntity %s", 422, payload)
}

func (o *UpdateBoardComputingModuleUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /board_computing_module/{id}][%d] updateBoardComputingModuleUnprocessableEntity %s", 422, payload)
}

func (o *UpdateBoardComputingModuleUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateBoardComputingModuleUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBoardComputingModuleInternalServerError creates a UpdateBoardComputingModuleInternalServerError with default headers values
func NewUpdateBoardComputingModuleInternalServerError() *UpdateBoardComputingModuleInternalServerError {
	return &UpdateBoardComputingModuleInternalServerError{}
}

/*
UpdateBoardComputingModuleInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type UpdateBoardComputingModuleInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this update board computing module internal server error response has a 2xx status code
func (o *UpdateBoardComputingModuleInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update board computing module internal server error response has a 3xx status code
func (o *UpdateBoardComputingModuleInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update board computing module internal server error response has a 4xx status code
func (o *UpdateBoardComputingModuleInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update board computing module internal server error response has a 5xx status code
func (o *UpdateBoardComputingModuleInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update board computing module internal server error response a status code equal to that given
func (o *UpdateBoardComputingModuleInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update board computing module internal server error response
func (o *UpdateBoardComputingModuleInternalServerError) Code() int {
	return 500
}

func (o *UpdateBoardComputingModuleInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /board_computing_module/{id}][%d] updateBoardComputingModuleInternalServerError %s", 500, payload)
}

func (o *UpdateBoardComputingModuleInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /board_computing_module/{id}][%d] updateBoardComputingModuleInternalServerError %s", 500, payload)
}

func (o *UpdateBoardComputingModuleInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateBoardComputingModuleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
