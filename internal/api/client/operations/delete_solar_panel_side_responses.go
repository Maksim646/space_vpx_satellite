// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	models "github.com/Maksim646/space_vpx_satellite/internal/api/definition"
)

// DeleteSolarPanelSideReader is a Reader for the DeleteSolarPanelSide structure.
type DeleteSolarPanelSideReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteSolarPanelSideReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteSolarPanelSideOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteSolarPanelSideBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteSolarPanelSideForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewDeleteSolarPanelSideUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteSolarPanelSideInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /solar_panel_side/{id}] DeleteSolarPanelSide", response, response.Code())
	}
}

// NewDeleteSolarPanelSideOK creates a DeleteSolarPanelSideOK with default headers values
func NewDeleteSolarPanelSideOK() *DeleteSolarPanelSideOK {
	return &DeleteSolarPanelSideOK{}
}

/*
DeleteSolarPanelSideOK describes a response with status code 200, with default header values.

Delete Solar Panel Side Response
*/
type DeleteSolarPanelSideOK struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete solar panel side o k response has a 2xx status code
func (o *DeleteSolarPanelSideOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete solar panel side o k response has a 3xx status code
func (o *DeleteSolarPanelSideOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete solar panel side o k response has a 4xx status code
func (o *DeleteSolarPanelSideOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete solar panel side o k response has a 5xx status code
func (o *DeleteSolarPanelSideOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete solar panel side o k response a status code equal to that given
func (o *DeleteSolarPanelSideOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete solar panel side o k response
func (o *DeleteSolarPanelSideOK) Code() int {
	return 200
}

func (o *DeleteSolarPanelSideOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /solar_panel_side/{id}][%d] deleteSolarPanelSideOK %s", 200, payload)
}

func (o *DeleteSolarPanelSideOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /solar_panel_side/{id}][%d] deleteSolarPanelSideOK %s", 200, payload)
}

func (o *DeleteSolarPanelSideOK) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteSolarPanelSideOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSolarPanelSideBadRequest creates a DeleteSolarPanelSideBadRequest with default headers values
func NewDeleteSolarPanelSideBadRequest() *DeleteSolarPanelSideBadRequest {
	return &DeleteSolarPanelSideBadRequest{}
}

/*
DeleteSolarPanelSideBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type DeleteSolarPanelSideBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete solar panel side bad request response has a 2xx status code
func (o *DeleteSolarPanelSideBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete solar panel side bad request response has a 3xx status code
func (o *DeleteSolarPanelSideBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete solar panel side bad request response has a 4xx status code
func (o *DeleteSolarPanelSideBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete solar panel side bad request response has a 5xx status code
func (o *DeleteSolarPanelSideBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete solar panel side bad request response a status code equal to that given
func (o *DeleteSolarPanelSideBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete solar panel side bad request response
func (o *DeleteSolarPanelSideBadRequest) Code() int {
	return 400
}

func (o *DeleteSolarPanelSideBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /solar_panel_side/{id}][%d] deleteSolarPanelSideBadRequest %s", 400, payload)
}

func (o *DeleteSolarPanelSideBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /solar_panel_side/{id}][%d] deleteSolarPanelSideBadRequest %s", 400, payload)
}

func (o *DeleteSolarPanelSideBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteSolarPanelSideBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSolarPanelSideForbidden creates a DeleteSolarPanelSideForbidden with default headers values
func NewDeleteSolarPanelSideForbidden() *DeleteSolarPanelSideForbidden {
	return &DeleteSolarPanelSideForbidden{}
}

/*
DeleteSolarPanelSideForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteSolarPanelSideForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete solar panel side forbidden response has a 2xx status code
func (o *DeleteSolarPanelSideForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete solar panel side forbidden response has a 3xx status code
func (o *DeleteSolarPanelSideForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete solar panel side forbidden response has a 4xx status code
func (o *DeleteSolarPanelSideForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete solar panel side forbidden response has a 5xx status code
func (o *DeleteSolarPanelSideForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete solar panel side forbidden response a status code equal to that given
func (o *DeleteSolarPanelSideForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete solar panel side forbidden response
func (o *DeleteSolarPanelSideForbidden) Code() int {
	return 403
}

func (o *DeleteSolarPanelSideForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /solar_panel_side/{id}][%d] deleteSolarPanelSideForbidden %s", 403, payload)
}

func (o *DeleteSolarPanelSideForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /solar_panel_side/{id}][%d] deleteSolarPanelSideForbidden %s", 403, payload)
}

func (o *DeleteSolarPanelSideForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteSolarPanelSideForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSolarPanelSideUnprocessableEntity creates a DeleteSolarPanelSideUnprocessableEntity with default headers values
func NewDeleteSolarPanelSideUnprocessableEntity() *DeleteSolarPanelSideUnprocessableEntity {
	return &DeleteSolarPanelSideUnprocessableEntity{}
}

/*
DeleteSolarPanelSideUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type DeleteSolarPanelSideUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete solar panel side unprocessable entity response has a 2xx status code
func (o *DeleteSolarPanelSideUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete solar panel side unprocessable entity response has a 3xx status code
func (o *DeleteSolarPanelSideUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete solar panel side unprocessable entity response has a 4xx status code
func (o *DeleteSolarPanelSideUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete solar panel side unprocessable entity response has a 5xx status code
func (o *DeleteSolarPanelSideUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this delete solar panel side unprocessable entity response a status code equal to that given
func (o *DeleteSolarPanelSideUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the delete solar panel side unprocessable entity response
func (o *DeleteSolarPanelSideUnprocessableEntity) Code() int {
	return 422
}

func (o *DeleteSolarPanelSideUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /solar_panel_side/{id}][%d] deleteSolarPanelSideUnprocessableEntity %s", 422, payload)
}

func (o *DeleteSolarPanelSideUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /solar_panel_side/{id}][%d] deleteSolarPanelSideUnprocessableEntity %s", 422, payload)
}

func (o *DeleteSolarPanelSideUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteSolarPanelSideUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSolarPanelSideInternalServerError creates a DeleteSolarPanelSideInternalServerError with default headers values
func NewDeleteSolarPanelSideInternalServerError() *DeleteSolarPanelSideInternalServerError {
	return &DeleteSolarPanelSideInternalServerError{}
}

/*
DeleteSolarPanelSideInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type DeleteSolarPanelSideInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete solar panel side internal server error response has a 2xx status code
func (o *DeleteSolarPanelSideInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete solar panel side internal server error response has a 3xx status code
func (o *DeleteSolarPanelSideInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete solar panel side internal server error response has a 4xx status code
func (o *DeleteSolarPanelSideInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete solar panel side internal server error response has a 5xx status code
func (o *DeleteSolarPanelSideInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete solar panel side internal server error response a status code equal to that given
func (o *DeleteSolarPanelSideInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete solar panel side internal server error response
func (o *DeleteSolarPanelSideInternalServerError) Code() int {
	return 500
}

func (o *DeleteSolarPanelSideInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /solar_panel_side/{id}][%d] deleteSolarPanelSideInternalServerError %s", 500, payload)
}

func (o *DeleteSolarPanelSideInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /solar_panel_side/{id}][%d] deleteSolarPanelSideInternalServerError %s", 500, payload)
}

func (o *DeleteSolarPanelSideInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteSolarPanelSideInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
