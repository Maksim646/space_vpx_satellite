// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	models "github.com/Maksim646/space_vpx_satellite/internal/api/definition"
)

// GetUserProjectsReader is a Reader for the GetUserProjects structure.
type GetUserProjectsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserProjectsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserProjectsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUserProjectsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUserProjectsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetUserProjectsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUserProjectsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /projects/user_projects] GetUserProjects", response, response.Code())
	}
}

// NewGetUserProjectsOK creates a GetUserProjectsOK with default headers values
func NewGetUserProjectsOK() *GetUserProjectsOK {
	return &GetUserProjectsOK{}
}

/*
GetUserProjectsOK describes a response with status code 200, with default header values.

Get User Project Response
*/
type GetUserProjectsOK struct {
	Payload *models.Projects
}

// IsSuccess returns true when this get user projects o k response has a 2xx status code
func (o *GetUserProjectsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get user projects o k response has a 3xx status code
func (o *GetUserProjectsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user projects o k response has a 4xx status code
func (o *GetUserProjectsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user projects o k response has a 5xx status code
func (o *GetUserProjectsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get user projects o k response a status code equal to that given
func (o *GetUserProjectsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get user projects o k response
func (o *GetUserProjectsOK) Code() int {
	return 200
}

func (o *GetUserProjectsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/user_projects][%d] getUserProjectsOK %s", 200, payload)
}

func (o *GetUserProjectsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/user_projects][%d] getUserProjectsOK %s", 200, payload)
}

func (o *GetUserProjectsOK) GetPayload() *models.Projects {
	return o.Payload
}

func (o *GetUserProjectsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Projects)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserProjectsBadRequest creates a GetUserProjectsBadRequest with default headers values
func NewGetUserProjectsBadRequest() *GetUserProjectsBadRequest {
	return &GetUserProjectsBadRequest{}
}

/*
GetUserProjectsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetUserProjectsBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get user projects bad request response has a 2xx status code
func (o *GetUserProjectsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user projects bad request response has a 3xx status code
func (o *GetUserProjectsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user projects bad request response has a 4xx status code
func (o *GetUserProjectsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user projects bad request response has a 5xx status code
func (o *GetUserProjectsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get user projects bad request response a status code equal to that given
func (o *GetUserProjectsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get user projects bad request response
func (o *GetUserProjectsBadRequest) Code() int {
	return 400
}

func (o *GetUserProjectsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/user_projects][%d] getUserProjectsBadRequest %s", 400, payload)
}

func (o *GetUserProjectsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/user_projects][%d] getUserProjectsBadRequest %s", 400, payload)
}

func (o *GetUserProjectsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetUserProjectsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserProjectsForbidden creates a GetUserProjectsForbidden with default headers values
func NewGetUserProjectsForbidden() *GetUserProjectsForbidden {
	return &GetUserProjectsForbidden{}
}

/*
GetUserProjectsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetUserProjectsForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get user projects forbidden response has a 2xx status code
func (o *GetUserProjectsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user projects forbidden response has a 3xx status code
func (o *GetUserProjectsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user projects forbidden response has a 4xx status code
func (o *GetUserProjectsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user projects forbidden response has a 5xx status code
func (o *GetUserProjectsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get user projects forbidden response a status code equal to that given
func (o *GetUserProjectsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get user projects forbidden response
func (o *GetUserProjectsForbidden) Code() int {
	return 403
}

func (o *GetUserProjectsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/user_projects][%d] getUserProjectsForbidden %s", 403, payload)
}

func (o *GetUserProjectsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/user_projects][%d] getUserProjectsForbidden %s", 403, payload)
}

func (o *GetUserProjectsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetUserProjectsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserProjectsUnprocessableEntity creates a GetUserProjectsUnprocessableEntity with default headers values
func NewGetUserProjectsUnprocessableEntity() *GetUserProjectsUnprocessableEntity {
	return &GetUserProjectsUnprocessableEntity{}
}

/*
GetUserProjectsUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type GetUserProjectsUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this get user projects unprocessable entity response has a 2xx status code
func (o *GetUserProjectsUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user projects unprocessable entity response has a 3xx status code
func (o *GetUserProjectsUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user projects unprocessable entity response has a 4xx status code
func (o *GetUserProjectsUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user projects unprocessable entity response has a 5xx status code
func (o *GetUserProjectsUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get user projects unprocessable entity response a status code equal to that given
func (o *GetUserProjectsUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get user projects unprocessable entity response
func (o *GetUserProjectsUnprocessableEntity) Code() int {
	return 422
}

func (o *GetUserProjectsUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/user_projects][%d] getUserProjectsUnprocessableEntity %s", 422, payload)
}

func (o *GetUserProjectsUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/user_projects][%d] getUserProjectsUnprocessableEntity %s", 422, payload)
}

func (o *GetUserProjectsUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetUserProjectsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserProjectsInternalServerError creates a GetUserProjectsInternalServerError with default headers values
func NewGetUserProjectsInternalServerError() *GetUserProjectsInternalServerError {
	return &GetUserProjectsInternalServerError{}
}

/*
GetUserProjectsInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetUserProjectsInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get user projects internal server error response has a 2xx status code
func (o *GetUserProjectsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user projects internal server error response has a 3xx status code
func (o *GetUserProjectsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user projects internal server error response has a 4xx status code
func (o *GetUserProjectsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user projects internal server error response has a 5xx status code
func (o *GetUserProjectsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get user projects internal server error response a status code equal to that given
func (o *GetUserProjectsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get user projects internal server error response
func (o *GetUserProjectsInternalServerError) Code() int {
	return 500
}

func (o *GetUserProjectsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/user_projects][%d] getUserProjectsInternalServerError %s", 500, payload)
}

func (o *GetUserProjectsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/user_projects][%d] getUserProjectsInternalServerError %s", 500, payload)
}

func (o *GetUserProjectsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetUserProjectsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
