// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	models "github.com/Maksim646/space_vpx_satellite/internal/api/definition"
)

// UpdateCubeSatPowerSystemByProjectReader is a Reader for the UpdateCubeSatPowerSystemByProject structure.
type UpdateCubeSatPowerSystemByProjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateCubeSatPowerSystemByProjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateCubeSatPowerSystemByProjectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateCubeSatPowerSystemByProjectBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateCubeSatPowerSystemByProjectUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateCubeSatPowerSystemByProjectForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateCubeSatPowerSystemByProjectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateCubeSatPowerSystemByProjectUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateCubeSatPowerSystemByProjectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /projects/{project_id}/power_system] UpdateCubeSatPowerSystemByProject", response, response.Code())
	}
}

// NewUpdateCubeSatPowerSystemByProjectOK creates a UpdateCubeSatPowerSystemByProjectOK with default headers values
func NewUpdateCubeSatPowerSystemByProjectOK() *UpdateCubeSatPowerSystemByProjectOK {
	return &UpdateCubeSatPowerSystemByProjectOK{}
}

/*
UpdateCubeSatPowerSystemByProjectOK describes a response with status code 200, with default header values.

Successfully updated Power System
*/
type UpdateCubeSatPowerSystemByProjectOK struct {
	Payload *models.CubeSatProject
}

// IsSuccess returns true when this update cube sat power system by project o k response has a 2xx status code
func (o *UpdateCubeSatPowerSystemByProjectOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update cube sat power system by project o k response has a 3xx status code
func (o *UpdateCubeSatPowerSystemByProjectOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat power system by project o k response has a 4xx status code
func (o *UpdateCubeSatPowerSystemByProjectOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update cube sat power system by project o k response has a 5xx status code
func (o *UpdateCubeSatPowerSystemByProjectOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat power system by project o k response a status code equal to that given
func (o *UpdateCubeSatPowerSystemByProjectOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update cube sat power system by project o k response
func (o *UpdateCubeSatPowerSystemByProjectOK) Code() int {
	return 200
}

func (o *UpdateCubeSatPowerSystemByProjectOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/power_system][%d] updateCubeSatPowerSystemByProjectOK %s", 200, payload)
}

func (o *UpdateCubeSatPowerSystemByProjectOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/power_system][%d] updateCubeSatPowerSystemByProjectOK %s", 200, payload)
}

func (o *UpdateCubeSatPowerSystemByProjectOK) GetPayload() *models.CubeSatProject {
	return o.Payload
}

func (o *UpdateCubeSatPowerSystemByProjectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CubeSatProject)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatPowerSystemByProjectBadRequest creates a UpdateCubeSatPowerSystemByProjectBadRequest with default headers values
func NewUpdateCubeSatPowerSystemByProjectBadRequest() *UpdateCubeSatPowerSystemByProjectBadRequest {
	return &UpdateCubeSatPowerSystemByProjectBadRequest{}
}

/*
UpdateCubeSatPowerSystemByProjectBadRequest describes a response with status code 400, with default header values.

Bad request (e.g., invalid input)
*/
type UpdateCubeSatPowerSystemByProjectBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat power system by project bad request response has a 2xx status code
func (o *UpdateCubeSatPowerSystemByProjectBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat power system by project bad request response has a 3xx status code
func (o *UpdateCubeSatPowerSystemByProjectBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat power system by project bad request response has a 4xx status code
func (o *UpdateCubeSatPowerSystemByProjectBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cube sat power system by project bad request response has a 5xx status code
func (o *UpdateCubeSatPowerSystemByProjectBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat power system by project bad request response a status code equal to that given
func (o *UpdateCubeSatPowerSystemByProjectBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update cube sat power system by project bad request response
func (o *UpdateCubeSatPowerSystemByProjectBadRequest) Code() int {
	return 400
}

func (o *UpdateCubeSatPowerSystemByProjectBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/power_system][%d] updateCubeSatPowerSystemByProjectBadRequest %s", 400, payload)
}

func (o *UpdateCubeSatPowerSystemByProjectBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/power_system][%d] updateCubeSatPowerSystemByProjectBadRequest %s", 400, payload)
}

func (o *UpdateCubeSatPowerSystemByProjectBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatPowerSystemByProjectBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatPowerSystemByProjectUnauthorized creates a UpdateCubeSatPowerSystemByProjectUnauthorized with default headers values
func NewUpdateCubeSatPowerSystemByProjectUnauthorized() *UpdateCubeSatPowerSystemByProjectUnauthorized {
	return &UpdateCubeSatPowerSystemByProjectUnauthorized{}
}

/*
UpdateCubeSatPowerSystemByProjectUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateCubeSatPowerSystemByProjectUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat power system by project unauthorized response has a 2xx status code
func (o *UpdateCubeSatPowerSystemByProjectUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat power system by project unauthorized response has a 3xx status code
func (o *UpdateCubeSatPowerSystemByProjectUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat power system by project unauthorized response has a 4xx status code
func (o *UpdateCubeSatPowerSystemByProjectUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cube sat power system by project unauthorized response has a 5xx status code
func (o *UpdateCubeSatPowerSystemByProjectUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat power system by project unauthorized response a status code equal to that given
func (o *UpdateCubeSatPowerSystemByProjectUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update cube sat power system by project unauthorized response
func (o *UpdateCubeSatPowerSystemByProjectUnauthorized) Code() int {
	return 401
}

func (o *UpdateCubeSatPowerSystemByProjectUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/power_system][%d] updateCubeSatPowerSystemByProjectUnauthorized %s", 401, payload)
}

func (o *UpdateCubeSatPowerSystemByProjectUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/power_system][%d] updateCubeSatPowerSystemByProjectUnauthorized %s", 401, payload)
}

func (o *UpdateCubeSatPowerSystemByProjectUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatPowerSystemByProjectUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatPowerSystemByProjectForbidden creates a UpdateCubeSatPowerSystemByProjectForbidden with default headers values
func NewUpdateCubeSatPowerSystemByProjectForbidden() *UpdateCubeSatPowerSystemByProjectForbidden {
	return &UpdateCubeSatPowerSystemByProjectForbidden{}
}

/*
UpdateCubeSatPowerSystemByProjectForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateCubeSatPowerSystemByProjectForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat power system by project forbidden response has a 2xx status code
func (o *UpdateCubeSatPowerSystemByProjectForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat power system by project forbidden response has a 3xx status code
func (o *UpdateCubeSatPowerSystemByProjectForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat power system by project forbidden response has a 4xx status code
func (o *UpdateCubeSatPowerSystemByProjectForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cube sat power system by project forbidden response has a 5xx status code
func (o *UpdateCubeSatPowerSystemByProjectForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat power system by project forbidden response a status code equal to that given
func (o *UpdateCubeSatPowerSystemByProjectForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update cube sat power system by project forbidden response
func (o *UpdateCubeSatPowerSystemByProjectForbidden) Code() int {
	return 403
}

func (o *UpdateCubeSatPowerSystemByProjectForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/power_system][%d] updateCubeSatPowerSystemByProjectForbidden %s", 403, payload)
}

func (o *UpdateCubeSatPowerSystemByProjectForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/power_system][%d] updateCubeSatPowerSystemByProjectForbidden %s", 403, payload)
}

func (o *UpdateCubeSatPowerSystemByProjectForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatPowerSystemByProjectForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatPowerSystemByProjectNotFound creates a UpdateCubeSatPowerSystemByProjectNotFound with default headers values
func NewUpdateCubeSatPowerSystemByProjectNotFound() *UpdateCubeSatPowerSystemByProjectNotFound {
	return &UpdateCubeSatPowerSystemByProjectNotFound{}
}

/*
UpdateCubeSatPowerSystemByProjectNotFound describes a response with status code 404, with default header values.

Project not found
*/
type UpdateCubeSatPowerSystemByProjectNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat power system by project not found response has a 2xx status code
func (o *UpdateCubeSatPowerSystemByProjectNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat power system by project not found response has a 3xx status code
func (o *UpdateCubeSatPowerSystemByProjectNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat power system by project not found response has a 4xx status code
func (o *UpdateCubeSatPowerSystemByProjectNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cube sat power system by project not found response has a 5xx status code
func (o *UpdateCubeSatPowerSystemByProjectNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat power system by project not found response a status code equal to that given
func (o *UpdateCubeSatPowerSystemByProjectNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update cube sat power system by project not found response
func (o *UpdateCubeSatPowerSystemByProjectNotFound) Code() int {
	return 404
}

func (o *UpdateCubeSatPowerSystemByProjectNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/power_system][%d] updateCubeSatPowerSystemByProjectNotFound %s", 404, payload)
}

func (o *UpdateCubeSatPowerSystemByProjectNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/power_system][%d] updateCubeSatPowerSystemByProjectNotFound %s", 404, payload)
}

func (o *UpdateCubeSatPowerSystemByProjectNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatPowerSystemByProjectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatPowerSystemByProjectUnprocessableEntity creates a UpdateCubeSatPowerSystemByProjectUnprocessableEntity with default headers values
func NewUpdateCubeSatPowerSystemByProjectUnprocessableEntity() *UpdateCubeSatPowerSystemByProjectUnprocessableEntity {
	return &UpdateCubeSatPowerSystemByProjectUnprocessableEntity{}
}

/*
UpdateCubeSatPowerSystemByProjectUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity (e.g., validation errors)
*/
type UpdateCubeSatPowerSystemByProjectUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat power system by project unprocessable entity response has a 2xx status code
func (o *UpdateCubeSatPowerSystemByProjectUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat power system by project unprocessable entity response has a 3xx status code
func (o *UpdateCubeSatPowerSystemByProjectUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat power system by project unprocessable entity response has a 4xx status code
func (o *UpdateCubeSatPowerSystemByProjectUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cube sat power system by project unprocessable entity response has a 5xx status code
func (o *UpdateCubeSatPowerSystemByProjectUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat power system by project unprocessable entity response a status code equal to that given
func (o *UpdateCubeSatPowerSystemByProjectUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the update cube sat power system by project unprocessable entity response
func (o *UpdateCubeSatPowerSystemByProjectUnprocessableEntity) Code() int {
	return 422
}

func (o *UpdateCubeSatPowerSystemByProjectUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/power_system][%d] updateCubeSatPowerSystemByProjectUnprocessableEntity %s", 422, payload)
}

func (o *UpdateCubeSatPowerSystemByProjectUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/power_system][%d] updateCubeSatPowerSystemByProjectUnprocessableEntity %s", 422, payload)
}

func (o *UpdateCubeSatPowerSystemByProjectUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatPowerSystemByProjectUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatPowerSystemByProjectInternalServerError creates a UpdateCubeSatPowerSystemByProjectInternalServerError with default headers values
func NewUpdateCubeSatPowerSystemByProjectInternalServerError() *UpdateCubeSatPowerSystemByProjectInternalServerError {
	return &UpdateCubeSatPowerSystemByProjectInternalServerError{}
}

/*
UpdateCubeSatPowerSystemByProjectInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type UpdateCubeSatPowerSystemByProjectInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat power system by project internal server error response has a 2xx status code
func (o *UpdateCubeSatPowerSystemByProjectInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat power system by project internal server error response has a 3xx status code
func (o *UpdateCubeSatPowerSystemByProjectInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat power system by project internal server error response has a 4xx status code
func (o *UpdateCubeSatPowerSystemByProjectInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update cube sat power system by project internal server error response has a 5xx status code
func (o *UpdateCubeSatPowerSystemByProjectInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update cube sat power system by project internal server error response a status code equal to that given
func (o *UpdateCubeSatPowerSystemByProjectInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update cube sat power system by project internal server error response
func (o *UpdateCubeSatPowerSystemByProjectInternalServerError) Code() int {
	return 500
}

func (o *UpdateCubeSatPowerSystemByProjectInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/power_system][%d] updateCubeSatPowerSystemByProjectInternalServerError %s", 500, payload)
}

func (o *UpdateCubeSatPowerSystemByProjectInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/power_system][%d] updateCubeSatPowerSystemByProjectInternalServerError %s", 500, payload)
}

func (o *UpdateCubeSatPowerSystemByProjectInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatPowerSystemByProjectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
