// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	models "github.com/Maksim646/space_vpx_satellite/internal/api/definition"
)

// UpdateCubeSatProjectReader is a Reader for the UpdateCubeSatProject structure.
type UpdateCubeSatProjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateCubeSatProjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateCubeSatProjectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateCubeSatProjectBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateCubeSatProjectForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateCubeSatProjectUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateCubeSatProjectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PATCH /project/{id}] UpdateCubeSatProject", response, response.Code())
	}
}

// NewUpdateCubeSatProjectOK creates a UpdateCubeSatProjectOK with default headers values
func NewUpdateCubeSatProjectOK() *UpdateCubeSatProjectOK {
	return &UpdateCubeSatProjectOK{}
}

/*
UpdateCubeSatProjectOK describes a response with status code 200, with default header values.

Update CubeSat Project Response
*/
type UpdateCubeSatProjectOK struct {
	Payload *models.CubeSatProject
}

// IsSuccess returns true when this update cube sat project o k response has a 2xx status code
func (o *UpdateCubeSatProjectOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update cube sat project o k response has a 3xx status code
func (o *UpdateCubeSatProjectOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat project o k response has a 4xx status code
func (o *UpdateCubeSatProjectOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update cube sat project o k response has a 5xx status code
func (o *UpdateCubeSatProjectOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat project o k response a status code equal to that given
func (o *UpdateCubeSatProjectOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update cube sat project o k response
func (o *UpdateCubeSatProjectOK) Code() int {
	return 200
}

func (o *UpdateCubeSatProjectOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /project/{id}][%d] updateCubeSatProjectOK %s", 200, payload)
}

func (o *UpdateCubeSatProjectOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /project/{id}][%d] updateCubeSatProjectOK %s", 200, payload)
}

func (o *UpdateCubeSatProjectOK) GetPayload() *models.CubeSatProject {
	return o.Payload
}

func (o *UpdateCubeSatProjectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CubeSatProject)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatProjectBadRequest creates a UpdateCubeSatProjectBadRequest with default headers values
func NewUpdateCubeSatProjectBadRequest() *UpdateCubeSatProjectBadRequest {
	return &UpdateCubeSatProjectBadRequest{}
}

/*
UpdateCubeSatProjectBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpdateCubeSatProjectBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat project bad request response has a 2xx status code
func (o *UpdateCubeSatProjectBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat project bad request response has a 3xx status code
func (o *UpdateCubeSatProjectBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat project bad request response has a 4xx status code
func (o *UpdateCubeSatProjectBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cube sat project bad request response has a 5xx status code
func (o *UpdateCubeSatProjectBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat project bad request response a status code equal to that given
func (o *UpdateCubeSatProjectBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update cube sat project bad request response
func (o *UpdateCubeSatProjectBadRequest) Code() int {
	return 400
}

func (o *UpdateCubeSatProjectBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /project/{id}][%d] updateCubeSatProjectBadRequest %s", 400, payload)
}

func (o *UpdateCubeSatProjectBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /project/{id}][%d] updateCubeSatProjectBadRequest %s", 400, payload)
}

func (o *UpdateCubeSatProjectBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatProjectBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatProjectForbidden creates a UpdateCubeSatProjectForbidden with default headers values
func NewUpdateCubeSatProjectForbidden() *UpdateCubeSatProjectForbidden {
	return &UpdateCubeSatProjectForbidden{}
}

/*
UpdateCubeSatProjectForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateCubeSatProjectForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat project forbidden response has a 2xx status code
func (o *UpdateCubeSatProjectForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat project forbidden response has a 3xx status code
func (o *UpdateCubeSatProjectForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat project forbidden response has a 4xx status code
func (o *UpdateCubeSatProjectForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cube sat project forbidden response has a 5xx status code
func (o *UpdateCubeSatProjectForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat project forbidden response a status code equal to that given
func (o *UpdateCubeSatProjectForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update cube sat project forbidden response
func (o *UpdateCubeSatProjectForbidden) Code() int {
	return 403
}

func (o *UpdateCubeSatProjectForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /project/{id}][%d] updateCubeSatProjectForbidden %s", 403, payload)
}

func (o *UpdateCubeSatProjectForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /project/{id}][%d] updateCubeSatProjectForbidden %s", 403, payload)
}

func (o *UpdateCubeSatProjectForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatProjectForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatProjectUnprocessableEntity creates a UpdateCubeSatProjectUnprocessableEntity with default headers values
func NewUpdateCubeSatProjectUnprocessableEntity() *UpdateCubeSatProjectUnprocessableEntity {
	return &UpdateCubeSatProjectUnprocessableEntity{}
}

/*
UpdateCubeSatProjectUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type UpdateCubeSatProjectUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat project unprocessable entity response has a 2xx status code
func (o *UpdateCubeSatProjectUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat project unprocessable entity response has a 3xx status code
func (o *UpdateCubeSatProjectUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat project unprocessable entity response has a 4xx status code
func (o *UpdateCubeSatProjectUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cube sat project unprocessable entity response has a 5xx status code
func (o *UpdateCubeSatProjectUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat project unprocessable entity response a status code equal to that given
func (o *UpdateCubeSatProjectUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the update cube sat project unprocessable entity response
func (o *UpdateCubeSatProjectUnprocessableEntity) Code() int {
	return 422
}

func (o *UpdateCubeSatProjectUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /project/{id}][%d] updateCubeSatProjectUnprocessableEntity %s", 422, payload)
}

func (o *UpdateCubeSatProjectUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /project/{id}][%d] updateCubeSatProjectUnprocessableEntity %s", 422, payload)
}

func (o *UpdateCubeSatProjectUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatProjectUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatProjectInternalServerError creates a UpdateCubeSatProjectInternalServerError with default headers values
func NewUpdateCubeSatProjectInternalServerError() *UpdateCubeSatProjectInternalServerError {
	return &UpdateCubeSatProjectInternalServerError{}
}

/*
UpdateCubeSatProjectInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type UpdateCubeSatProjectInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat project internal server error response has a 2xx status code
func (o *UpdateCubeSatProjectInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat project internal server error response has a 3xx status code
func (o *UpdateCubeSatProjectInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat project internal server error response has a 4xx status code
func (o *UpdateCubeSatProjectInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update cube sat project internal server error response has a 5xx status code
func (o *UpdateCubeSatProjectInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update cube sat project internal server error response a status code equal to that given
func (o *UpdateCubeSatProjectInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update cube sat project internal server error response
func (o *UpdateCubeSatProjectInternalServerError) Code() int {
	return 500
}

func (o *UpdateCubeSatProjectInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /project/{id}][%d] updateCubeSatProjectInternalServerError %s", 500, payload)
}

func (o *UpdateCubeSatProjectInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /project/{id}][%d] updateCubeSatProjectInternalServerError %s", 500, payload)
}

func (o *UpdateCubeSatProjectInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatProjectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
