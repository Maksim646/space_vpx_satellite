// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	models "github.com/Maksim646/space_vpx_satellite/internal/api/definition"
)

// LoginAdminReader is a Reader for the LoginAdmin structure.
type LoginAdminReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LoginAdminReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLoginAdminOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewLoginAdminBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewLoginAdminForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewLoginAdminUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLoginAdminInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /auth/admin_login] LoginAdmin", response, response.Code())
	}
}

// NewLoginAdminOK creates a LoginAdminOK with default headers values
func NewLoginAdminOK() *LoginAdminOK {
	return &LoginAdminOK{}
}

/*
LoginAdminOK describes a response with status code 200, with default header values.

Login Admin Response
*/
type LoginAdminOK struct {
	Payload *models.LoginResponse
}

// IsSuccess returns true when this login admin o k response has a 2xx status code
func (o *LoginAdminOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this login admin o k response has a 3xx status code
func (o *LoginAdminOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this login admin o k response has a 4xx status code
func (o *LoginAdminOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this login admin o k response has a 5xx status code
func (o *LoginAdminOK) IsServerError() bool {
	return false
}

// IsCode returns true when this login admin o k response a status code equal to that given
func (o *LoginAdminOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the login admin o k response
func (o *LoginAdminOK) Code() int {
	return 200
}

func (o *LoginAdminOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/admin_login][%d] loginAdminOK %s", 200, payload)
}

func (o *LoginAdminOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/admin_login][%d] loginAdminOK %s", 200, payload)
}

func (o *LoginAdminOK) GetPayload() *models.LoginResponse {
	return o.Payload
}

func (o *LoginAdminOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LoginResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoginAdminBadRequest creates a LoginAdminBadRequest with default headers values
func NewLoginAdminBadRequest() *LoginAdminBadRequest {
	return &LoginAdminBadRequest{}
}

/*
LoginAdminBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type LoginAdminBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this login admin bad request response has a 2xx status code
func (o *LoginAdminBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this login admin bad request response has a 3xx status code
func (o *LoginAdminBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this login admin bad request response has a 4xx status code
func (o *LoginAdminBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this login admin bad request response has a 5xx status code
func (o *LoginAdminBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this login admin bad request response a status code equal to that given
func (o *LoginAdminBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the login admin bad request response
func (o *LoginAdminBadRequest) Code() int {
	return 400
}

func (o *LoginAdminBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/admin_login][%d] loginAdminBadRequest %s", 400, payload)
}

func (o *LoginAdminBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/admin_login][%d] loginAdminBadRequest %s", 400, payload)
}

func (o *LoginAdminBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *LoginAdminBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoginAdminForbidden creates a LoginAdminForbidden with default headers values
func NewLoginAdminForbidden() *LoginAdminForbidden {
	return &LoginAdminForbidden{}
}

/*
LoginAdminForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type LoginAdminForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this login admin forbidden response has a 2xx status code
func (o *LoginAdminForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this login admin forbidden response has a 3xx status code
func (o *LoginAdminForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this login admin forbidden response has a 4xx status code
func (o *LoginAdminForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this login admin forbidden response has a 5xx status code
func (o *LoginAdminForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this login admin forbidden response a status code equal to that given
func (o *LoginAdminForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the login admin forbidden response
func (o *LoginAdminForbidden) Code() int {
	return 403
}

func (o *LoginAdminForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/admin_login][%d] loginAdminForbidden %s", 403, payload)
}

func (o *LoginAdminForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/admin_login][%d] loginAdminForbidden %s", 403, payload)
}

func (o *LoginAdminForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *LoginAdminForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoginAdminUnprocessableEntity creates a LoginAdminUnprocessableEntity with default headers values
func NewLoginAdminUnprocessableEntity() *LoginAdminUnprocessableEntity {
	return &LoginAdminUnprocessableEntity{}
}

/*
LoginAdminUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type LoginAdminUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this login admin unprocessable entity response has a 2xx status code
func (o *LoginAdminUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this login admin unprocessable entity response has a 3xx status code
func (o *LoginAdminUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this login admin unprocessable entity response has a 4xx status code
func (o *LoginAdminUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this login admin unprocessable entity response has a 5xx status code
func (o *LoginAdminUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this login admin unprocessable entity response a status code equal to that given
func (o *LoginAdminUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the login admin unprocessable entity response
func (o *LoginAdminUnprocessableEntity) Code() int {
	return 422
}

func (o *LoginAdminUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/admin_login][%d] loginAdminUnprocessableEntity %s", 422, payload)
}

func (o *LoginAdminUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/admin_login][%d] loginAdminUnprocessableEntity %s", 422, payload)
}

func (o *LoginAdminUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *LoginAdminUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoginAdminInternalServerError creates a LoginAdminInternalServerError with default headers values
func NewLoginAdminInternalServerError() *LoginAdminInternalServerError {
	return &LoginAdminInternalServerError{}
}

/*
LoginAdminInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type LoginAdminInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this login admin internal server error response has a 2xx status code
func (o *LoginAdminInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this login admin internal server error response has a 3xx status code
func (o *LoginAdminInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this login admin internal server error response has a 4xx status code
func (o *LoginAdminInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this login admin internal server error response has a 5xx status code
func (o *LoginAdminInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this login admin internal server error response a status code equal to that given
func (o *LoginAdminInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the login admin internal server error response
func (o *LoginAdminInternalServerError) Code() int {
	return 500
}

func (o *LoginAdminInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/admin_login][%d] loginAdminInternalServerError %s", 500, payload)
}

func (o *LoginAdminInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /auth/admin_login][%d] loginAdminInternalServerError %s", 500, payload)
}

func (o *LoginAdminInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *LoginAdminInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
