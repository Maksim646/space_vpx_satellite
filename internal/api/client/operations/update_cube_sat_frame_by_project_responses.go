// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	models "github.com/Maksim646/space_vpx_satellite/internal/api/definition"
)

// UpdateCubeSatFrameByProjectReader is a Reader for the UpdateCubeSatFrameByProject structure.
type UpdateCubeSatFrameByProjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateCubeSatFrameByProjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateCubeSatFrameByProjectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateCubeSatFrameByProjectBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateCubeSatFrameByProjectUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateCubeSatFrameByProjectForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateCubeSatFrameByProjectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateCubeSatFrameByProjectUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateCubeSatFrameByProjectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /projects/{project_id}/frame] UpdateCubeSatFrameByProject", response, response.Code())
	}
}

// NewUpdateCubeSatFrameByProjectOK creates a UpdateCubeSatFrameByProjectOK with default headers values
func NewUpdateCubeSatFrameByProjectOK() *UpdateCubeSatFrameByProjectOK {
	return &UpdateCubeSatFrameByProjectOK{}
}

/*
UpdateCubeSatFrameByProjectOK describes a response with status code 200, with default header values.

Successfully updated Frame
*/
type UpdateCubeSatFrameByProjectOK struct {
	Payload *models.CubeSatProject
}

// IsSuccess returns true when this update cube sat frame by project o k response has a 2xx status code
func (o *UpdateCubeSatFrameByProjectOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update cube sat frame by project o k response has a 3xx status code
func (o *UpdateCubeSatFrameByProjectOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat frame by project o k response has a 4xx status code
func (o *UpdateCubeSatFrameByProjectOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update cube sat frame by project o k response has a 5xx status code
func (o *UpdateCubeSatFrameByProjectOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat frame by project o k response a status code equal to that given
func (o *UpdateCubeSatFrameByProjectOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update cube sat frame by project o k response
func (o *UpdateCubeSatFrameByProjectOK) Code() int {
	return 200
}

func (o *UpdateCubeSatFrameByProjectOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/frame][%d] updateCubeSatFrameByProjectOK %s", 200, payload)
}

func (o *UpdateCubeSatFrameByProjectOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/frame][%d] updateCubeSatFrameByProjectOK %s", 200, payload)
}

func (o *UpdateCubeSatFrameByProjectOK) GetPayload() *models.CubeSatProject {
	return o.Payload
}

func (o *UpdateCubeSatFrameByProjectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CubeSatProject)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatFrameByProjectBadRequest creates a UpdateCubeSatFrameByProjectBadRequest with default headers values
func NewUpdateCubeSatFrameByProjectBadRequest() *UpdateCubeSatFrameByProjectBadRequest {
	return &UpdateCubeSatFrameByProjectBadRequest{}
}

/*
UpdateCubeSatFrameByProjectBadRequest describes a response with status code 400, with default header values.

Bad request (e.g., invalid input)
*/
type UpdateCubeSatFrameByProjectBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat frame by project bad request response has a 2xx status code
func (o *UpdateCubeSatFrameByProjectBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat frame by project bad request response has a 3xx status code
func (o *UpdateCubeSatFrameByProjectBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat frame by project bad request response has a 4xx status code
func (o *UpdateCubeSatFrameByProjectBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cube sat frame by project bad request response has a 5xx status code
func (o *UpdateCubeSatFrameByProjectBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat frame by project bad request response a status code equal to that given
func (o *UpdateCubeSatFrameByProjectBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update cube sat frame by project bad request response
func (o *UpdateCubeSatFrameByProjectBadRequest) Code() int {
	return 400
}

func (o *UpdateCubeSatFrameByProjectBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/frame][%d] updateCubeSatFrameByProjectBadRequest %s", 400, payload)
}

func (o *UpdateCubeSatFrameByProjectBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/frame][%d] updateCubeSatFrameByProjectBadRequest %s", 400, payload)
}

func (o *UpdateCubeSatFrameByProjectBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatFrameByProjectBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatFrameByProjectUnauthorized creates a UpdateCubeSatFrameByProjectUnauthorized with default headers values
func NewUpdateCubeSatFrameByProjectUnauthorized() *UpdateCubeSatFrameByProjectUnauthorized {
	return &UpdateCubeSatFrameByProjectUnauthorized{}
}

/*
UpdateCubeSatFrameByProjectUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateCubeSatFrameByProjectUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat frame by project unauthorized response has a 2xx status code
func (o *UpdateCubeSatFrameByProjectUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat frame by project unauthorized response has a 3xx status code
func (o *UpdateCubeSatFrameByProjectUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat frame by project unauthorized response has a 4xx status code
func (o *UpdateCubeSatFrameByProjectUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cube sat frame by project unauthorized response has a 5xx status code
func (o *UpdateCubeSatFrameByProjectUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat frame by project unauthorized response a status code equal to that given
func (o *UpdateCubeSatFrameByProjectUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update cube sat frame by project unauthorized response
func (o *UpdateCubeSatFrameByProjectUnauthorized) Code() int {
	return 401
}

func (o *UpdateCubeSatFrameByProjectUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/frame][%d] updateCubeSatFrameByProjectUnauthorized %s", 401, payload)
}

func (o *UpdateCubeSatFrameByProjectUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/frame][%d] updateCubeSatFrameByProjectUnauthorized %s", 401, payload)
}

func (o *UpdateCubeSatFrameByProjectUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatFrameByProjectUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatFrameByProjectForbidden creates a UpdateCubeSatFrameByProjectForbidden with default headers values
func NewUpdateCubeSatFrameByProjectForbidden() *UpdateCubeSatFrameByProjectForbidden {
	return &UpdateCubeSatFrameByProjectForbidden{}
}

/*
UpdateCubeSatFrameByProjectForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateCubeSatFrameByProjectForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat frame by project forbidden response has a 2xx status code
func (o *UpdateCubeSatFrameByProjectForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat frame by project forbidden response has a 3xx status code
func (o *UpdateCubeSatFrameByProjectForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat frame by project forbidden response has a 4xx status code
func (o *UpdateCubeSatFrameByProjectForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cube sat frame by project forbidden response has a 5xx status code
func (o *UpdateCubeSatFrameByProjectForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat frame by project forbidden response a status code equal to that given
func (o *UpdateCubeSatFrameByProjectForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update cube sat frame by project forbidden response
func (o *UpdateCubeSatFrameByProjectForbidden) Code() int {
	return 403
}

func (o *UpdateCubeSatFrameByProjectForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/frame][%d] updateCubeSatFrameByProjectForbidden %s", 403, payload)
}

func (o *UpdateCubeSatFrameByProjectForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/frame][%d] updateCubeSatFrameByProjectForbidden %s", 403, payload)
}

func (o *UpdateCubeSatFrameByProjectForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatFrameByProjectForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatFrameByProjectNotFound creates a UpdateCubeSatFrameByProjectNotFound with default headers values
func NewUpdateCubeSatFrameByProjectNotFound() *UpdateCubeSatFrameByProjectNotFound {
	return &UpdateCubeSatFrameByProjectNotFound{}
}

/*
UpdateCubeSatFrameByProjectNotFound describes a response with status code 404, with default header values.

Project not found
*/
type UpdateCubeSatFrameByProjectNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat frame by project not found response has a 2xx status code
func (o *UpdateCubeSatFrameByProjectNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat frame by project not found response has a 3xx status code
func (o *UpdateCubeSatFrameByProjectNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat frame by project not found response has a 4xx status code
func (o *UpdateCubeSatFrameByProjectNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cube sat frame by project not found response has a 5xx status code
func (o *UpdateCubeSatFrameByProjectNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat frame by project not found response a status code equal to that given
func (o *UpdateCubeSatFrameByProjectNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update cube sat frame by project not found response
func (o *UpdateCubeSatFrameByProjectNotFound) Code() int {
	return 404
}

func (o *UpdateCubeSatFrameByProjectNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/frame][%d] updateCubeSatFrameByProjectNotFound %s", 404, payload)
}

func (o *UpdateCubeSatFrameByProjectNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/frame][%d] updateCubeSatFrameByProjectNotFound %s", 404, payload)
}

func (o *UpdateCubeSatFrameByProjectNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatFrameByProjectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatFrameByProjectUnprocessableEntity creates a UpdateCubeSatFrameByProjectUnprocessableEntity with default headers values
func NewUpdateCubeSatFrameByProjectUnprocessableEntity() *UpdateCubeSatFrameByProjectUnprocessableEntity {
	return &UpdateCubeSatFrameByProjectUnprocessableEntity{}
}

/*
UpdateCubeSatFrameByProjectUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity (e.g., validation errors)
*/
type UpdateCubeSatFrameByProjectUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat frame by project unprocessable entity response has a 2xx status code
func (o *UpdateCubeSatFrameByProjectUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat frame by project unprocessable entity response has a 3xx status code
func (o *UpdateCubeSatFrameByProjectUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat frame by project unprocessable entity response has a 4xx status code
func (o *UpdateCubeSatFrameByProjectUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cube sat frame by project unprocessable entity response has a 5xx status code
func (o *UpdateCubeSatFrameByProjectUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this update cube sat frame by project unprocessable entity response a status code equal to that given
func (o *UpdateCubeSatFrameByProjectUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the update cube sat frame by project unprocessable entity response
func (o *UpdateCubeSatFrameByProjectUnprocessableEntity) Code() int {
	return 422
}

func (o *UpdateCubeSatFrameByProjectUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/frame][%d] updateCubeSatFrameByProjectUnprocessableEntity %s", 422, payload)
}

func (o *UpdateCubeSatFrameByProjectUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/frame][%d] updateCubeSatFrameByProjectUnprocessableEntity %s", 422, payload)
}

func (o *UpdateCubeSatFrameByProjectUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatFrameByProjectUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCubeSatFrameByProjectInternalServerError creates a UpdateCubeSatFrameByProjectInternalServerError with default headers values
func NewUpdateCubeSatFrameByProjectInternalServerError() *UpdateCubeSatFrameByProjectInternalServerError {
	return &UpdateCubeSatFrameByProjectInternalServerError{}
}

/*
UpdateCubeSatFrameByProjectInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type UpdateCubeSatFrameByProjectInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cube sat frame by project internal server error response has a 2xx status code
func (o *UpdateCubeSatFrameByProjectInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cube sat frame by project internal server error response has a 3xx status code
func (o *UpdateCubeSatFrameByProjectInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cube sat frame by project internal server error response has a 4xx status code
func (o *UpdateCubeSatFrameByProjectInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update cube sat frame by project internal server error response has a 5xx status code
func (o *UpdateCubeSatFrameByProjectInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update cube sat frame by project internal server error response a status code equal to that given
func (o *UpdateCubeSatFrameByProjectInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update cube sat frame by project internal server error response
func (o *UpdateCubeSatFrameByProjectInternalServerError) Code() int {
	return 500
}

func (o *UpdateCubeSatFrameByProjectInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/frame][%d] updateCubeSatFrameByProjectInternalServerError %s", 500, payload)
}

func (o *UpdateCubeSatFrameByProjectInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /projects/{project_id}/frame][%d] updateCubeSatFrameByProjectInternalServerError %s", 500, payload)
}

func (o *UpdateCubeSatFrameByProjectInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCubeSatFrameByProjectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
