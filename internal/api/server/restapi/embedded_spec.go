// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Space VPX WebSite Backend Service",
    "title": "Space VPX Backend Service",
    "version": "development"
  },
  "paths": {
    "/auth/admin_login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login Admin",
        "operationId": "LoginAdmin",
        "parameters": [
          {
            "description": "Login Admin Body",
            "name": "LoginAdmin",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginAdmin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login Admin Response",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login User",
        "operationId": "LoginUser",
        "parameters": [
          {
            "description": "Login User Body",
            "name": "LoginUser",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login Response",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register User",
        "operationId": "RegisterUser",
        "parameters": [
          {
            "description": "Register User Body",
            "name": "RegisterUser",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Register Response",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/board_computing_module": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "BoardComputingModule"
        ],
        "summary": "Create a new Board Computing Module",
        "operationId": "CreateBoardComputingModule",
        "parameters": [
          {
            "description": "Board Computing Module object to be created",
            "name": "boardComputingModule",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateBoardComputingModuleBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created Board Computing Module",
            "schema": {
              "$ref": "#/definitions/BoardComputingModule"
            }
          },
          "400": {
            "description": "Bad request (e.g., invalid input)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity (e.g., validation errors)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/board_computing_module/available_board_computing_module": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "BoardComputingModule"
        ],
        "summary": "Get a list of available Board Computing Modules with filtering and pagination",
        "operationId": "GetAvailableBoardComputingModules",
        "parameters": [
          {
            "type": "integer",
            "description": "Offset for pagination",
            "name": "offset",
            "in": "query",
            "required": true
          },
          {
            "minimum": 1,
            "type": "integer",
            "description": "Limit for pagination",
            "name": "limit",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "created_at",
              "name",
              "length",
              "width",
              "height",
              "weight",
              "supply_voltage",
              "power_consumption",
              "max_operating_temperature",
              "min_operating_temperature"
            ],
            "type": "string",
            "description": "Field to sort by",
            "name": "sort[field]",
            "in": "query"
          },
          {
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string",
            "description": "Sort direction",
            "name": "sort[direction]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Minimum length to filter by",
            "name": "FilterBoardComputingModuleByLength[min]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Maximum length to filter by",
            "name": "FilterBoardComputingModuleByLength[max]",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filter Board Computing Module By Name",
            "name": "FilterBoardComputingModuleByName",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of Board Computing Modules",
            "schema": {
              "$ref": "#/definitions/BoardComputingModuleList"
            }
          },
          "400": {
            "description": "Bad request (e.g., invalid input)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/board_computing_module/{id}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "BoardComputingModule"
        ],
        "summary": "Get a Board Computing Module by ID",
        "operationId": "GetBoardComputingModuleByID",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "ID of the Board Computing Module to retrieve",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved Board Computing Module",
            "schema": {
              "$ref": "#/definitions/BoardComputingModule"
            }
          },
          "400": {
            "description": "Bad request (e.g., invalid input)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Board Computing Module not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "BoardComputingModule"
        ],
        "summary": "Delete a Board Computing Module by ID",
        "operationId": "DeleteBoardComputingModule",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "ID of the Board Computing Module to delete",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted Board Computing Module"
          },
          "400": {
            "description": "Bad request (e.g., invalid input)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Board Computing Module not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "BoardComputingModule"
        ],
        "summary": "Update a Board Computing Module by ID",
        "operationId": "UpdateBoardComputingModule",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "ID of the Board Computing Module to update",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Board Computing Module object to update",
            "name": "boardComputingModule",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateBoardComputingModuleBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated Board Computing Module",
            "schema": {
              "$ref": "#/definitions/BoardComputingModule"
            }
          },
          "400": {
            "description": "Bad request (e.g., invalid input)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Board Computing Module not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity (e.g., validation errors)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/chassis_vpx": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "ChassisVPX"
        ],
        "summary": "Create chasis",
        "operationId": "CreateChassisVPX",
        "parameters": [
          {
            "description": "Create Chassis VPX Body",
            "name": "CreateChassisVPXBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateChassisVPXBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create Chassis VPX Response",
            "schema": {
              "$ref": "#/definitions/CreateChassisVPXResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/chassis_vpx/available_chassis": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "ChassisVPX"
        ],
        "summary": "Get available chassis VPX",
        "operationId": "GetAvailableChassisVPX",
        "parameters": [
          {
            "type": "integer",
            "description": "Offset Configs",
            "name": "offset",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "Offset Configs",
            "name": "limit",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "description": "Filter By Max Lenghth",
            "name": "FilterChassisVPXByMaxLength[from]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Min Length",
            "name": "FilterChassisVPXByMinLength[to]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Max Width",
            "name": "FilterChassisVPXByMaxWidth[from]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Min Width",
            "name": "FilterChassisVPXByMinWidth[to]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Max Height",
            "name": "FilterChassisVPXByMaxHeight[from]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Min Height",
            "name": "FilterChassisVPXByMinHeight[to]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Max Weight",
            "name": "FilterChassisVPXByMaxWeight[from]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Min Weight",
            "name": "FilterChassisVPXByMinWeight[to]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Max Power Handling Capability Per Board",
            "name": "FilterChassisVPXByMaxPowerHandlingCapabilityPerBoard[from]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Min Power Handling Capability Per Board",
            "name": "FilterChassisVPXByMinPowerHandlingCapabilityPerBoard[to]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Max Temperature Per Board",
            "name": "FilterChassisVPXByMaxTemperaturePerBoard[from]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Min Temperature Per Board",
            "name": "FilterChassisVPXByMinTemperaturePerBoard[to]",
            "in": "query"
          },
          {
            "enum": [
              "created_at",
              "weight"
            ],
            "type": "string",
            "description": "sort parametrs",
            "name": "sort[field]",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Available Chassis VPX Response",
            "schema": {
              "$ref": "#/definitions/ChassisesVPX"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/chassis_vpx/{id}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "ChassisVPX"
        ],
        "summary": "Get chassis VPX by ID",
        "operationId": "GetChassisVPXByID",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of the chassis  VPX",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Chassis VPX Response",
            "schema": {
              "$ref": "#/definitions/ChassisVPX"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Chassis VPX not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "ChassisVPX"
        ],
        "summary": "Delete chassis VPX by ID",
        "operationId": "DeleteChassisVPX",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of the chassis VPX",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Chassis VPX deleted successfully",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Chassis VPX not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "ChassisVPX"
        ],
        "summary": "Update chassis VPX",
        "operationId": "UpdateChassisVPX",
        "parameters": [
          {
            "description": "Update Chassis VPX Body",
            "name": "CreateChassisVPXBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateChassisVPXBody"
            }
          },
          {
            "type": "integer",
            "description": "The ID of the chassis VPX",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Update Chassis VPX Response",
            "schema": {
              "$ref": "#/definitions/ChassisVPX"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cube_sat_frame": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSateFrame"
        ],
        "summary": "Create Cube Sat Frame",
        "operationId": "CreateCubeSatFrame",
        "parameters": [
          {
            "description": "Create Cube Sat Frame Body",
            "name": "CreateCubeSatFrameBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCubeSatFrameBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create Cube Sat Frame Response",
            "schema": {
              "$ref": "#/definitions/CubeSatFrame"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cube_sat_frame/available_cube_sat_frame": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSateFrame"
        ],
        "summary": "Get Cube Sat frames",
        "operationId": "GetCubeSatFrames",
        "parameters": [
          {
            "type": "integer",
            "description": "Offset Configs",
            "name": "offset",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "Offset Configs",
            "name": "limit",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "created_at"
            ],
            "type": "string",
            "description": "sort parametrs",
            "name": "sort[field]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Min Length",
            "name": "FilterCubeSatFrameByMinLength[min]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Max Length",
            "name": "FilterCubeSatFrameByMinLength[max]",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Get User Project Response",
            "schema": {
              "$ref": "#/definitions/CubeSatFrames"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cube_sat_frame/{id}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSateFrame"
        ],
        "summary": "Get Cube Sat Frame",
        "operationId": "GetCubeSatFrame",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of cube sat frame",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get CubeSat Frame Response",
            "schema": {
              "$ref": "#/definitions/CubeSatFrame"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSateFrame"
        ],
        "summary": "Delete Cube Sat Frame",
        "operationId": "DeleteCubeSatFrame",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of cube sat frame",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete CubeSat Frame Response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSateFrame"
        ],
        "summary": "Update Cube Sat Frame",
        "operationId": "UpdateCubeSatFrame",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of cube sat frame",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Create Cube Sat Frame Body",
            "name": "CreateCubeSatFrameBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCubeSatFrameBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update CubeSat Frame Response",
            "schema": {
              "$ref": "#/definitions/CubeSatFrame"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cube_sat_power_system": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "PowerSystem"
        ],
        "summary": "Create Power System",
        "operationId": "CreatePowerSystem",
        "parameters": [
          {
            "description": "Create Power System Body",
            "name": "CreatePowerSystemBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreatePowerSystemBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create Power System Response",
            "schema": {
              "$ref": "#/definitions/CubeSatPowerSystem"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cube_sat_power_system/available_power_systems": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "PowerSystem"
        ],
        "summary": "Get Cube Sat Power Systems",
        "operationId": "GetCubeSatPowerSystems",
        "parameters": [
          {
            "type": "integer",
            "description": "Offset Configs",
            "name": "offset",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "Offset Configs",
            "name": "limit",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "created_at"
            ],
            "type": "string",
            "description": "sort parameters",
            "name": "sort[field]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Min Length",
            "name": "FilterCubeSatPowerSystemByLength[min]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Max Length",
            "name": "FilterCubeSatPowerSystemByLength[max]",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Get CubeSat Power Systems Response",
            "schema": {
              "$ref": "#/definitions/CubeSatPowerSystems"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cube_sat_power_system/{id}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "PowerSystem"
        ],
        "summary": "Get power system",
        "operationId": "GetPowerSystem",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of the power system",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get Power System Response",
            "schema": {
              "$ref": "#/definitions/CubeSatPowerSystem"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "PowerSystem"
        ],
        "summary": "Delete Cube Sat Power System",
        "operationId": "DeleteCubeSatPowerSystem",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of the cube sat power system",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Cube Sat Power System Response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "PowerSystem"
        ],
        "summary": "Update Cube Sat Power System",
        "operationId": "UpdateCubeSatPowerSystem",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of the cube sat power system",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Update Power System Body",
            "name": "UpdatePowerSystemBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePowerSystemBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update Power System Response",
            "schema": {
              "$ref": "#/definitions/CubeSatPowerSystem"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cube_sat_project": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSatProject"
        ],
        "summary": "Create CubeSat project",
        "operationId": "CreateCubeSatProject",
        "parameters": [
          {
            "description": "Create CubeSat Project Body",
            "name": "CreateCubeSatProject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCubeSatProjectBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create CubeSat Project Response",
            "schema": {
              "$ref": "#/definitions/CreateCubeSatProjectResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cube_sat_vhf_transceiver": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSatVHFTransceiver"
        ],
        "summary": "Create CubeSat VHF Transceiver",
        "operationId": "CreateCubeSatVHFTransceiver",
        "parameters": [
          {
            "description": "Create VHF Transceiver Body",
            "name": "CreateVHFTransceiverBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateVHFTransceiverBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create CubeSat VHF Transceiver Response",
            "schema": {
              "$ref": "#/definitions/VHFTransceiver"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cube_sat_vhf_transceiver/available": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSatVHFTransceiver"
        ],
        "summary": "Get Available CubeSat VHF Transceivers",
        "operationId": "GetAvailableCubeSatVHFTransceivers",
        "parameters": [
          {
            "type": "integer",
            "description": "Offset for pagination",
            "name": "offset",
            "in": "query",
            "required": true
          },
          {
            "minimum": 1,
            "type": "integer",
            "description": "Limit for pagination",
            "name": "limit",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "created_at"
            ],
            "type": "string",
            "description": "Sort parameters",
            "name": "sort[field]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter by minimum operating frequency",
            "name": "FilterCubeSatVHFTransceiverByMinFrequency",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter by maximum operating frequency",
            "name": "FilterCubeSatVHFTransceiverByMaxFrequency",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Available CubeSat VHF Transceivers Response",
            "schema": {
              "$ref": "#/definitions/CubeSatVHFTransceivers"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cube_sat_vhf_transceiver/{id}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSatVHFTransceiver"
        ],
        "summary": "Get CubeSat VHF Transceiver",
        "operationId": "GetCubeSatVHFTransceiver",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of the CubeSat VHF transceiver",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get CubeSat VHF Transceiver Response",
            "schema": {
              "$ref": "#/definitions/VHFTransceiver"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSatVHFTransceiver"
        ],
        "summary": "Delete CubeSat VHF Transceiver",
        "operationId": "DeleteCubeSatVHFTransceiver",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of the CubeSat VHF transceiver",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete CubeSat VHF Transceiver Response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSatVHFTransceiver"
        ],
        "summary": "Update CubeSat VHF Transceiver",
        "operationId": "UpdateCubeSatVHFTransceiver",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of the CubeSat VHF transceiver",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Update VHF Transceiver Body",
            "name": "UpdateVHFTransceiverBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateVHFTransceiverBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update CubeSat VHF Transceiver Response",
            "schema": {
              "$ref": "#/definitions/VHFTransceiver"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/project/{id}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSatProject"
        ],
        "summary": "Get CubeSat project",
        "operationId": "Get CubeSat Project",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the project to retrieve",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get CubeSat Project Response",
            "schema": {
              "$ref": "#/definitions/CubeSatProject"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSatProject"
        ],
        "summary": "Delete CubeSat project",
        "operationId": "DeleteCubeSatProject",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the project to retrieve",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete CubeSat Project Response",
            "schema": {
              "$ref": "#/definitions/CreateCubeSatProjectResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSatProject"
        ],
        "summary": "Update CubeSat project",
        "operationId": "UpdateCubeSatProject",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the project to retrieve",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Update CubeSat Project Body",
            "name": "UpdateCubeSatProjectBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCubeSatProjectBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update CubeSat Project Response",
            "schema": {
              "$ref": "#/definitions/CubeSatProject"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/projects/user_projects": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSatProject"
        ],
        "summary": "Get user CubeSat projects",
        "operationId": "GetUserCubeSatProjects",
        "parameters": [
          {
            "type": "integer",
            "description": "Offset Configs",
            "name": "offset",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "Offset Configs",
            "name": "limit",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "created_at",
              "updated_at"
            ],
            "type": "string",
            "description": "sort parametrs",
            "name": "sort[field]",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Get User CubeSat Project Response",
            "schema": {
              "$ref": "#/definitions/CubeSatProjects"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/projects/{project_id}/board_computing_module": {
      "put": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSatProject"
        ],
        "summary": "Update the Board Computing Module of a CubeSat Project",
        "operationId": "UpdateCubeSatBoardComputingModuleByProject",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the project to update",
            "name": "project_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Board Computing Module object to update",
            "name": "AddCubeSatBoardComputingModule",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddCubeSatBoardComputingModule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated Board Computing Module",
            "schema": {
              "$ref": "#/definitions/CubeSatProject"
            }
          },
          "400": {
            "description": "Bad request (e.g., invalid input)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Project not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity (e.g., validation errors)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/projects/{project_id}/frame": {
      "put": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSatProject"
        ],
        "summary": "Update the Frame of a CubeSat Project",
        "operationId": "UpdateCubeSatFrameByProject",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the project to update",
            "name": "project_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Frame object to update",
            "name": "AddCubeSatFrame",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddCubeSatFrame"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated Frame",
            "schema": {
              "$ref": "#/definitions/CubeSatProject"
            }
          },
          "400": {
            "description": "Bad request (e.g., invalid input)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Project not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity (e.g., validation errors)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/projects/{project_id}/power_system": {
      "put": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSatProject"
        ],
        "summary": "Update the Power System of a CubeSat Project",
        "operationId": "UpdateCubeSatPowerSystemByProject",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the project to update",
            "name": "project_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Power System object to update",
            "name": "AddCubeSatPowerSystem",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddCubeSatPowerSystem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated Power System",
            "schema": {
              "$ref": "#/definitions/CubeSatProject"
            }
          },
          "400": {
            "description": "Bad request (e.g., invalid input)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Project not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity (e.g., validation errors)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/projects/{project_id}/solar_panel_side": {
      "put": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSatProject"
        ],
        "summary": "Update the Solar Panel Side of a CubeSat Project",
        "operationId": "UpdateCubeSatSolarPanelSideByProject",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the project to update",
            "name": "project_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Solar Panel Side object to update",
            "name": "AddCubeSatSolarPanelSide",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddCubeSatSolarPanelSide"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated Solar Panel Side",
            "schema": {
              "$ref": "#/definitions/CubeSatProject"
            }
          },
          "400": {
            "description": "Bad request (e.g., invalid input)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Project not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity (e.g., validation errors)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/projects/{project_id}/solar_panel_top": {
      "put": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSatProject"
        ],
        "summary": "Update the Solar Panel Top of a CubeSat Project",
        "operationId": "UpdateCubeSatSolarPanelTopByProject",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the project to update",
            "name": "project_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Solar Panel Top object to update",
            "name": "AddCubeSatSolarPanelTop",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddCubeSatSolarPanelTop"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated Solar Panel Top",
            "schema": {
              "$ref": "#/definitions/CubeSatProject"
            }
          },
          "400": {
            "description": "Bad request (e.g., invalid input)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Project not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity (e.g., validation errors)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/projects/{project_id}/validate": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSatProject"
        ],
        "summary": "Validate the compatibility of a CubeSat Project",
        "operationId": "ValidateCubeSatProjectByProject",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the project to validate",
            "name": "project_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully validated CubeSat Project",
            "schema": {
              "$ref": "#/definitions/CubeSatProjectValidationResult"
            }
          },
          "400": {
            "description": "Bad request (e.g., invalid input)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Project not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/projects/{project_id}/vhf_antenna_system": {
      "put": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSatProject"
        ],
        "summary": "Update the VHF Antenna System of a CubeSat Project",
        "operationId": "UpdateCubeSatVhfAntennaSystemByProject",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the project to update",
            "name": "project_id",
            "in": "path",
            "required": true
          },
          {
            "description": "VHF Antenna System object to update",
            "name": "AddCubeSatVhfAntennaSystem",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddCubeSatVhfAntennaSystem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated VHF Antenna System",
            "schema": {
              "$ref": "#/definitions/CubeSatProject"
            }
          },
          "400": {
            "description": "Bad request (e.g., invalid input)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Project not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity (e.g., validation errors)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/projects/{project_id}/vhf_transceiver": {
      "put": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSatProject"
        ],
        "summary": "Update the VHF Transceiver of a CubeSat Project",
        "operationId": "UpdateCubeSatVhfTransceiverByProject",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the project to update",
            "name": "project_id",
            "in": "path",
            "required": true
          },
          {
            "description": "VHF Transceiver object to update",
            "name": "AddCubeSatVhfTransceiver",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddCubeSatVhfTransceiver"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated VHF Transceiver",
            "schema": {
              "$ref": "#/definitions/CubeSatProject"
            }
          },
          "400": {
            "description": "Bad request (e.g., invalid input)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Project not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity (e.g., validation errors)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/solar_panel_side": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "SolarPanelSide"
        ],
        "summary": "Create Solar Panel Side",
        "operationId": "CreateSolarPanelSide",
        "parameters": [
          {
            "description": "Create Solar Panel Side Body",
            "name": "CreateSolarPanelSideBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateSolarPanelSideBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create Solar Panel Side Response",
            "schema": {
              "$ref": "#/definitions/SolarPanelSide"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/solar_panel_side/available_solar_panel_side": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "SolarPanelSide"
        ],
        "summary": "Get Cube Sat Solar Panels Side",
        "operationId": "GetCubeSatSolarPanelsSide",
        "parameters": [
          {
            "type": "integer",
            "description": "Offset Configs",
            "name": "offset",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "Offset Configs",
            "name": "limit",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "created_at"
            ],
            "type": "string",
            "description": "sort parametrs",
            "name": "sort[field]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Min Length",
            "name": "FilterCubeSatSolarPanelByLength[min]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Max Length",
            "name": "FilterCubeSatSolarPanelByLength[max]",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Get CubeSat Solar Panels Side Response",
            "schema": {
              "$ref": "#/definitions/CubeSatSolarPanelsSide"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/solar_panel_side/{id}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "SolarPanelSide"
        ],
        "summary": "Get solar panel side",
        "operationId": "GetSolarPanelSide",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of solar panel side",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get Solar Panel Side Response",
            "schema": {
              "$ref": "#/definitions/SolarPanelSide"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "SolarPanelSide"
        ],
        "summary": "Delete Cube Sat Solar Panel Side",
        "operationId": "DeleteCubeSatSolarPanelSide",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of cube sat solar panel side",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Cube Sat Solar Panel Side Response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "SolarPanelSide"
        ],
        "summary": "Update Cube Sat Solar Panel Side",
        "operationId": "UpdateCubeSatSolarPanelSide",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of cube sat solar panel side",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Update Solar Panel Side Body",
            "name": "UpdateSolarPanelSideBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateSolarPanelSideBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update Solar Panel Side Response",
            "schema": {
              "$ref": "#/definitions/SolarPanelSide"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/solar_panel_top": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "SolarPanelTop"
        ],
        "summary": "Create Solar Panel Top",
        "operationId": "CreateSolarPanelTop",
        "parameters": [
          {
            "description": "Create Solar Panel Top Body",
            "name": "CreateSolarPanelTopBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateSolarPanelTopBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create Solar Panel Top Response",
            "schema": {
              "$ref": "#/definitions/SolarPanelTop"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/solar_panel_top/available_solar_panel_top": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "SolarPanelTop"
        ],
        "summary": "Get Cube Sat Solar Panels Top",
        "operationId": "GetCubeSatSolarPanelsTop",
        "parameters": [
          {
            "type": "integer",
            "description": "Offset Configs",
            "name": "offset",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "Offset Configs",
            "name": "limit",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "created_at"
            ],
            "type": "string",
            "description": "sort parameters",
            "name": "sort[field]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Min Length",
            "name": "FilterCubeSatSolarPanelByLength[min]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Max Length",
            "name": "FilterCubeSatSolarPanelByLength[max]",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Get CubeSat Solar Panels Top Response",
            "schema": {
              "$ref": "#/definitions/CubeSatSolarPanelsTop"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/solar_panel_top/{id}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "SolarPanelTop"
        ],
        "summary": "Get solar panel top",
        "operationId": "GetSolarPanelTop",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of solar panel top",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get Solar Panel Top Response",
            "schema": {
              "$ref": "#/definitions/SolarPanelTop"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "SolarPanelTop"
        ],
        "summary": "Delete Cube Sat Solar Panel Top",
        "operationId": "DeleteCubeSatSolarPanelTop",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of cube sat solar panel top",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Cube Sat Solar Panel Top Response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "SolarPanelTop"
        ],
        "summary": "Update Cube Sat Solar Panel Top",
        "operationId": "UpdateCubeSatSolarPanelTop",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of cube sat solar panel top",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Update Solar Panel Top Body",
            "name": "UpdateSolarPanelTopBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateSolarPanelTopBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update Solar Panel Top Response",
            "schema": {
              "$ref": "#/definitions/SolarPanelTop"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/test_data_load": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "TestData"
        ],
        "summary": "Load Test Data",
        "operationId": "LoadTestData",
        "responses": {
          "200": {
            "description": "Load Test Data response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/get_me": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "User"
        ],
        "summary": "Get user me",
        "operationId": "GetUserMe",
        "responses": {
          "200": {
            "description": "Get User Me Response",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vhf_antenna_system": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "VHFAntennaSystem"
        ],
        "summary": "Create VHF Antenna System",
        "operationId": "CreateVHFAntennaSystem",
        "parameters": [
          {
            "description": "Create VHF Antenna System Body",
            "name": "CreateVHFAntennaSystemBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateVHFAntennaSystemBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create VHF Antenna System Response",
            "schema": {
              "$ref": "#/definitions/VHFAntennaSystem"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vhf_antenna_system/available_vhf_antenna_systems": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "VHFAntennaSystem"
        ],
        "summary": "Get Available VHF Antenna Systems",
        "operationId": "GetAvailableVHFAntennaSystems",
        "parameters": [
          {
            "type": "integer",
            "description": "Offset for pagination",
            "name": "offset",
            "in": "query",
            "required": true
          },
          {
            "minimum": 1,
            "type": "integer",
            "description": "Limit for pagination",
            "name": "limit",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "created_at",
              "id"
            ],
            "type": "string",
            "description": "Sort parameters",
            "name": "sort[field]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter by minimum frequency",
            "name": "FilterVHFAntennaSystemByMinFrequency",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter by maximum frequency",
            "name": "FilterVHFAntennaSystemByMaxFrequency",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Available VHF Antenna Systems Response",
            "schema": {
              "$ref": "#/definitions/VHFAntennaSystems"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vhf_antenna_system/{id}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "VHFAntennaSystem"
        ],
        "summary": "Get VHF Antenna System",
        "operationId": "GetVHFAntennaSystem",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of the VHF antenna system",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get VHF Antenna System Response",
            "schema": {
              "$ref": "#/definitions/VHFAntennaSystem"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "VHFAntennaSystem"
        ],
        "summary": "Delete VHF Antenna System",
        "operationId": "DeleteVHFAntennaSystem",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of the VHF antenna system",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete VHF Antenna System Response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "VHFAntennaSystem"
        ],
        "summary": "Update VHF Antenna System",
        "operationId": "UpdateVHFAntennaSystem",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of the VHF antenna system",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Update VHF Antenna System Body",
            "name": "UpdateVHFAntennaSystemBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateVHFAntennaSystemBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update VHF Antenna System Response",
            "schema": {
              "$ref": "#/definitions/VHFAntennaSystem"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AddCubeSatBoardComputingModule": {
      "type": "object",
      "required": [
        "board_computing_module_name"
      ],
      "properties": {
        "board_computing_module_name": {
          "type": "string"
        }
      }
    },
    "AddCubeSatFrame": {
      "type": "object",
      "required": [
        "frame_name"
      ],
      "properties": {
        "frame_name": {
          "type": "string"
        }
      }
    },
    "AddCubeSatPowerSystem": {
      "type": "object",
      "required": [
        "board_computing_module_name"
      ],
      "properties": {
        "board_computing_module_name": {
          "type": "string"
        }
      }
    },
    "AddCubeSatSolarPanelSide": {
      "type": "object",
      "required": [
        "solar_panel_side_name"
      ],
      "properties": {
        "solar_panel_side_name": {
          "type": "string"
        }
      }
    },
    "AddCubeSatSolarPanelTop": {
      "type": "object",
      "required": [
        "solar_panel_top_name"
      ],
      "properties": {
        "solar_panel_top_name": {
          "type": "string"
        }
      }
    },
    "AddCubeSatVhfAntennaSystem": {
      "type": "object",
      "required": [
        "vhf_antenna_system_name"
      ],
      "properties": {
        "vhf_antenna_system_name": {
          "type": "string"
        }
      }
    },
    "AddCubeSatVhfTransceiver": {
      "type": "object",
      "required": [
        "vhf_transceiver_name"
      ],
      "properties": {
        "vhf_transceiver_name": {
          "type": "string"
        }
      }
    },
    "BoardComputingModule": {
      "type": "object",
      "properties": {
        "created_at": {
          "description": "Creation timestamp",
          "type": "integer"
        },
        "data_bus": {
          "type": "string"
        },
        "height": {
          "description": "Height in meters",
          "type": "number"
        },
        "id": {
          "description": "Unique identifier for the Board Computing Module",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "interface": {
          "description": "Communication interface",
          "type": "string"
        },
        "length": {
          "description": "Length in meters",
          "type": "number"
        },
        "max_operating_temperature": {
          "description": "Maximum operating temperature in Celsius",
          "type": "number"
        },
        "max_supply_voltage": {
          "description": "Supply voltage in volts",
          "type": "number"
        },
        "mechanical_shock": {
          "description": "Mechanical shock rating",
          "type": "integer",
          "format": "int64"
        },
        "mechanical_vibration": {
          "description": "Mechanical vibration rating",
          "type": "integer",
          "format": "int64"
        },
        "min_operating_temperature": {
          "description": "Minimum operating temperature in Celsius",
          "type": "number"
        },
        "min_supply_voltage": {
          "description": "Supply voltage in volts",
          "type": "number"
        },
        "name": {
          "description": "Name of the Board Computing Module",
          "type": "string"
        },
        "power_consumption": {
          "description": "Power consumption in watts",
          "type": "number"
        },
        "updated_at": {
          "description": "Last update timestamp",
          "type": "integer"
        },
        "weight": {
          "description": "Weight in kilograms",
          "type": "number"
        },
        "width": {
          "description": "Width in meters",
          "type": "number"
        }
      }
    },
    "BoardComputingModuleList": {
      "type": "object",
      "required": [
        "count"
      ],
      "properties": {
        "board_computing_modules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BoardComputingModule"
          }
        },
        "count": {
          "type": "integer"
        }
      }
    },
    "ChassisVPX": {
      "type": "object",
      "required": [
        "name",
        "slots",
        "size",
        "max_operating_temperature",
        "min_operating_temperature",
        "max_non_operating_temperature",
        "min_non_operating_temperature",
        "overload",
        "max_vibration_sine",
        "min_vibration_sine",
        "max_vibration_random",
        "min_vibration_random",
        "axes",
        "shock_response_spectrum",
        "peak_overload_spectrum_1",
        "peak_overload_spectrum_2",
        "peak_frequency_spectrum_1",
        "peak_frequency_spectrum_2",
        "length",
        "width",
        "height",
        "weight",
        "power_handling_capability_per_board",
        "temperature_per_board"
      ],
      "properties": {
        "axes": {
          "description": "Number of axes",
          "type": "integer"
        },
        "created_at": {
          "description": "Timestamp of creation",
          "type": "integer"
        },
        "height": {
          "description": "Height of the chassis",
          "type": "number"
        },
        "id": {
          "description": "Unique identifier for the chassis (auto-generated)",
          "type": "integer",
          "format": "int64"
        },
        "length": {
          "description": "Length of the chassis",
          "type": "number"
        },
        "max_non_operating_temperature": {
          "description": "Maximum non-operating temperature in degrees Celsius",
          "type": "number"
        },
        "max_operating_temperature": {
          "description": "Maximum operating temperature in degrees Celsius",
          "type": "number"
        },
        "max_vibration_random": {
          "description": "Maximum random vibration",
          "type": "number"
        },
        "max_vibration_sine": {
          "description": "Maximum sine vibration",
          "type": "number"
        },
        "min_non_operating_temperature": {
          "description": "Minimum non-operating temperature in degrees Celsius",
          "type": "number"
        },
        "min_operating_temperature": {
          "description": "Minimum operating temperature in degrees Celsius",
          "type": "number"
        },
        "min_vibration_random": {
          "description": "Minimum random vibration",
          "type": "number"
        },
        "min_vibration_sine": {
          "description": "Minimum sine vibration",
          "type": "number"
        },
        "name": {
          "description": "Name of the chassis",
          "type": "string"
        },
        "overload": {
          "description": "Overload capacity",
          "type": "number"
        },
        "peak_frequency_spectrum_1": {
          "description": "Peak frequency spectrum value 1",
          "type": "number"
        },
        "peak_frequency_spectrum_2": {
          "description": "Peak frequency spectrum value 2",
          "type": "number"
        },
        "peak_overload_spectrum_1": {
          "description": "Peak overload spectrum value 1",
          "type": "number"
        },
        "peak_overload_spectrum_2": {
          "description": "Peak overload spectrum value 2",
          "type": "number"
        },
        "power_handling_capability_per_board": {
          "description": "Power handling capability per board",
          "type": "number"
        },
        "shock_response_spectrum": {
          "description": "Shock response spectrum value",
          "type": "number"
        },
        "size": {
          "description": "Size of the chassis",
          "type": "string"
        },
        "slots": {
          "description": "Number of slots in the chassis",
          "type": "integer"
        },
        "temperature_per_board": {
          "description": "Temperature per board",
          "type": "number"
        },
        "updated_at": {
          "description": "Timestamp of the last update",
          "type": "integer"
        },
        "weight": {
          "description": "Weight of the chassis",
          "type": "number"
        },
        "width": {
          "description": "Width of the chassis",
          "type": "number"
        }
      }
    },
    "ChassisesVPX": {
      "type": "object",
      "required": [
        "count"
      ],
      "properties": {
        "chassises": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChassisVPX"
          }
        },
        "count": {
          "type": "integer"
        }
      }
    },
    "CreateBoardComputingModuleBody": {
      "type": "object",
      "properties": {
        "data_bus": {
          "type": "string"
        },
        "height": {
          "description": "Height in meters",
          "type": "number"
        },
        "interface": {
          "description": "Communication interface",
          "type": "string"
        },
        "length": {
          "description": "Length in meters",
          "type": "number"
        },
        "max_operating_temperature": {
          "description": "Maximum operating temperature in Celsius",
          "type": "number"
        },
        "max_supply_voltage": {
          "description": "Supply voltage in volts",
          "type": "number"
        },
        "mechanical_shock": {
          "description": "Mechanical shock rating",
          "type": "integer",
          "format": "int64"
        },
        "mechanical_vibration": {
          "description": "Mechanical vibration rating",
          "type": "integer",
          "format": "int64"
        },
        "min_operating_temperature": {
          "description": "Minimum operating temperature in Celsius",
          "type": "number"
        },
        "min_supply_voltage": {
          "description": "Supply voltage in volts",
          "type": "number"
        },
        "name": {
          "description": "Name of the Board Computing Module",
          "type": "string"
        },
        "power_consumption": {
          "description": "Power consumption in watts",
          "type": "number"
        },
        "weight": {
          "description": "Weight in kilograms",
          "type": "number"
        },
        "width": {
          "description": "Width in meters",
          "type": "number"
        }
      }
    },
    "CreateChassisVPXBody": {
      "type": "object",
      "required": [
        "name",
        "slots",
        "size",
        "max_operating_temperature",
        "min_operating_temperature",
        "max_non_operating_temperature",
        "min_non_operating_temperature",
        "overload",
        "max_vibration_sine",
        "min_vibration_sine",
        "max_vibration_random",
        "min_vibration_random",
        "axes",
        "shock_response_spectrum",
        "peak_overload_spectrum_1",
        "peak_overload_spectrum_2",
        "peak_frequency_spectrum_1",
        "peak_frequency_spectrum_2",
        "length",
        "width",
        "height",
        "weight",
        "power_handling_capability_per_board",
        "temperature_per_board"
      ],
      "properties": {
        "axes": {
          "description": "Number of axes",
          "type": "integer"
        },
        "height": {
          "description": "Height of the chassis VPX",
          "type": "number"
        },
        "length": {
          "description": "Length of the chassis VPX",
          "type": "number"
        },
        "max_non_operating_temperature": {
          "description": "Maximum non-operating temperature in degrees Celsius",
          "type": "number"
        },
        "max_operating_temperature": {
          "description": "Maximum operating temperature in degrees Celsius",
          "type": "number"
        },
        "max_vibration_random": {
          "description": "Maximum random vibration",
          "type": "number"
        },
        "max_vibration_sine": {
          "description": "Maximum sine vibration",
          "type": "number"
        },
        "min_non_operating_temperature": {
          "description": "Minimum non-operating temperature in degrees Celsius",
          "type": "number"
        },
        "min_operating_temperature": {
          "description": "Minimum operating temperature in degrees Celsius",
          "type": "number"
        },
        "min_vibration_random": {
          "description": "Minimum random vibration",
          "type": "number"
        },
        "min_vibration_sine": {
          "description": "Minimum sine vibration",
          "type": "number"
        },
        "name": {
          "description": "Name of the chassis",
          "type": "string"
        },
        "overload": {
          "description": "Overload capacity",
          "type": "number"
        },
        "peak_frequency_spectrum_1": {
          "description": "Peak frequency spectrum value 1",
          "type": "number"
        },
        "peak_frequency_spectrum_2": {
          "description": "Peak frequency spectrum value 2",
          "type": "number"
        },
        "peak_overload_spectrum_1": {
          "description": "Peak overload spectrum value 1",
          "type": "number"
        },
        "peak_overload_spectrum_2": {
          "description": "Peak overload spectrum value 2",
          "type": "number"
        },
        "power_handling_capability_per_board": {
          "description": "Power handling capability per board",
          "type": "number"
        },
        "shock_response_spectrum": {
          "description": "Shock response spectrum value",
          "type": "number"
        },
        "size": {
          "description": "Size of the chassis",
          "type": "string"
        },
        "slots": {
          "description": "Number of slots in the chassis",
          "type": "integer"
        },
        "temperature_per_board": {
          "description": "Temperature per board",
          "type": "number"
        },
        "weight": {
          "description": "Weight of the chassis VPX",
          "type": "number"
        },
        "width": {
          "description": "Width of the chassis VPX",
          "type": "number"
        }
      }
    },
    "CreateChassisVPXResponse": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "description": "Unique identifier for the chassis (auto-generated)",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CreateCubeSatFrameBody": {
      "type": "object",
      "required": [
        "length",
        "width",
        "height",
        "weight",
        "operating_temperature_min",
        "operating_temperature_max",
        "mechanical_vibration",
        "mechanical_shock",
        "link"
      ],
      "properties": {
        "height": {
          "type": "number"
        },
        "interface": {
          "type": "string"
        },
        "length": {
          "type": "number"
        },
        "link": {
          "type": "string"
        },
        "mechanical_shock": {
          "type": "integer"
        },
        "mechanical_vibration": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "operating_temperature_max": {
          "type": "integer"
        },
        "operating_temperature_min": {
          "type": "integer"
        },
        "size": {
          "type": "integer"
        },
        "weight": {
          "type": "number"
        },
        "width": {
          "type": "number"
        }
      }
    },
    "CreateCubeSatProjectBody": {
      "type": "object",
      "required": [
        "project_name"
      ],
      "properties": {
        "board_computing_module_name": {
          "type": "string"
        },
        "frame_name": {
          "type": "string"
        },
        "power_system_name": {
          "type": "string"
        },
        "project_name": {
          "type": "string"
        },
        "size": {
          "type": "integer"
        },
        "solar_panel_side_name": {
          "type": "string"
        },
        "solar_panel_top_name": {
          "type": "string"
        },
        "vhf_antenna_system_name": {
          "type": "string"
        },
        "vhf_transceiver_name": {
          "type": "string"
        }
      }
    },
    "CreateCubeSatProjectResponse": {
      "type": "object",
      "required": [
        "project_id"
      ],
      "properties": {
        "project_id": {
          "type": "string"
        },
        "project_name": {
          "type": "string"
        }
      }
    },
    "CreatePowerSystemBody": {
      "type": "object",
      "required": [
        "length",
        "width",
        "height"
      ],
      "properties": {
        "current_output_channels_max": {
          "type": "number"
        },
        "data_interface": {
          "type": "string"
        },
        "height": {
          "type": "number"
        },
        "length": {
          "type": "number"
        },
        "max_operating_temperature": {
          "type": "number"
        },
        "max_system_bus_voltage_output_channels": {
          "description": "System bus voltage for output channels",
          "type": "number"
        },
        "mechanical_shock": {
          "type": "integer"
        },
        "mechanical_vibration": {
          "type": "integer"
        },
        "min_operating_temperature": {
          "type": "number"
        },
        "min_system_bus_voltage_output_channels": {
          "description": "System bus voltage for output channels",
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "output_channels": {
          "type": "integer"
        },
        "solar_panel_channels": {
          "type": "integer"
        },
        "solar_panel_current_per_channel_max": {
          "type": "number"
        },
        "solar_panel_voltage_max": {
          "type": "number"
        },
        "solar_panel_voltage_min": {
          "type": "number"
        },
        "solar_panels_type": {
          "type": "string"
        },
        "system_bus_voltage_solar_panels": {
          "type": "number"
        },
        "total_current_of_solar_panels_max": {
          "type": "number"
        },
        "total_output_current": {
          "type": "number"
        },
        "weight": {
          "type": "number"
        },
        "width": {
          "type": "number"
        }
      }
    },
    "CreateSolarPanelSideBody": {
      "type": "object",
      "required": [
        "length",
        "width",
        "height"
      ],
      "properties": {
        "coil_area": {
          "type": "number"
        },
        "coil_resistance": {
          "type": "integer"
        },
        "efficiency": {
          "type": "integer"
        },
        "height": {
          "type": "number"
        },
        "imp": {
          "type": "number"
        },
        "interface": {
          "type": "string"
        },
        "isc": {
          "type": "number"
        },
        "length": {
          "type": "number"
        },
        "max_operating_temperature": {
          "type": "number"
        },
        "mechanical_shock": {
          "type": "integer"
        },
        "mechanical_vibration": {
          "type": "integer"
        },
        "min_operating_temperature": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "vmp": {
          "type": "number"
        },
        "voc": {
          "type": "number"
        },
        "weight": {
          "type": "number"
        },
        "width": {
          "type": "number"
        }
      }
    },
    "CreateSolarPanelTopBody": {
      "type": "object",
      "required": [
        "length",
        "width",
        "height"
      ],
      "properties": {
        "coil_area": {
          "type": "number"
        },
        "coil_resistance": {
          "type": "number"
        },
        "efficiency": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "imp": {
          "type": "number"
        },
        "interface": {
          "type": "string"
        },
        "isc": {
          "type": "number"
        },
        "length": {
          "type": "number"
        },
        "max_operating_temperature": {
          "type": "number"
        },
        "mechanical_shock": {
          "type": "number"
        },
        "mechanical_vibration": {
          "type": "number"
        },
        "min_operating_temperature": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "vmp": {
          "type": "number"
        },
        "voc": {
          "type": "number"
        },
        "weight": {
          "type": "number"
        },
        "width": {
          "type": "number"
        }
      }
    },
    "CreateVHFAntennaSystemBody": {
      "type": "object",
      "properties": {
        "frequency": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "interface": {
          "type": "string"
        },
        "length": {
          "type": "number"
        },
        "max_operating_temperature": {
          "type": "number"
        },
        "mechanical_shock": {
          "type": "integer"
        },
        "mechanical_vibration": {
          "type": "integer"
        },
        "min_operating_temperature": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "weight": {
          "type": "number"
        },
        "width": {
          "type": "number"
        }
      }
    },
    "CreateVHFTransceiverBody": {
      "type": "object",
      "properties": {
        "height": {
          "type": "number"
        },
        "interface": {
          "type": "string"
        },
        "length": {
          "type": "number"
        },
        "max_operating_temperature": {
          "type": "number"
        },
        "mechanical_shock": {
          "type": "integer"
        },
        "mechanical_vibration": {
          "type": "integer"
        },
        "min_operating_temperature": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "operating_frequency": {
          "type": "number"
        },
        "output_power": {
          "type": "number"
        },
        "power_consumption": {
          "type": "number"
        },
        "sensitivity_receiver": {
          "type": "number"
        },
        "supply_voltage": {
          "type": "number"
        },
        "weight": {
          "type": "number"
        },
        "width": {
          "type": "number"
        }
      }
    },
    "CubeSatFrame": {
      "type": "object",
      "required": [
        "id",
        "length",
        "width",
        "height",
        "weight",
        "operating_temperature_min",
        "operating_temperature_max",
        "mechanical_vibration",
        "mechanical_shock",
        "link"
      ],
      "properties": {
        "created_at": {
          "description": "Timestamp of creation",
          "type": "integer"
        },
        "height": {
          "type": "number"
        },
        "id": {
          "type": "integer"
        },
        "interface": {
          "type": "string"
        },
        "length": {
          "type": "number"
        },
        "link": {
          "type": "string"
        },
        "mechanical_shock": {
          "type": "integer"
        },
        "mechanical_vibration": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "operating_temperature_max": {
          "type": "integer"
        },
        "operating_temperature_min": {
          "type": "integer"
        },
        "size": {
          "type": "integer"
        },
        "updated_at": {
          "description": "Timestamp of the last update",
          "type": "integer"
        },
        "weight": {
          "type": "number"
        },
        "width": {
          "type": "number"
        }
      }
    },
    "CubeSatFrames": {
      "type": "object",
      "required": [
        "count"
      ],
      "properties": {
        "count": {
          "type": "integer"
        },
        "cube_sat_frames": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CubeSatFrame"
          }
        }
      }
    },
    "CubeSatPowerSystem": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "created_at": {
          "description": "Timestamp of creation",
          "type": "integer"
        },
        "current_output_channels_max": {
          "description": "Maximum current for output channels",
          "type": "number"
        },
        "data_interface": {
          "description": "Data interface type",
          "type": "string"
        },
        "height": {
          "description": "Height of the power system",
          "type": "number"
        },
        "id": {
          "description": "Unique identifier for the power system (auto-generated)",
          "type": "integer",
          "format": "int64"
        },
        "length": {
          "description": "Length of the power system",
          "type": "number"
        },
        "max_operating_temperature": {
          "description": "Maximum operating temperature in degrees Celsius",
          "type": "number"
        },
        "max_system_bus_voltage_output_channels": {
          "description": "System bus voltage for output channels",
          "type": "number"
        },
        "mechanical_shock": {
          "description": "Mechanical shock value",
          "type": "integer"
        },
        "mechanical_vibration": {
          "description": "Mechanical vibration value",
          "type": "integer"
        },
        "min_operating_temperature": {
          "description": "Minimum operating temperature in degrees Celsius",
          "type": "number"
        },
        "min_system_bus_voltage_output_channels": {
          "description": "System bus voltage for output channels",
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "output_channels": {
          "description": "Number of output channels",
          "type": "integer"
        },
        "solar_panel_channels": {
          "description": "Number of solar panel channels",
          "type": "integer"
        },
        "solar_panel_current_per_channel_max": {
          "description": "Maximum current per solar panel channel",
          "type": "number"
        },
        "solar_panel_voltage_max": {
          "description": "Maximum voltage of the solar panels",
          "type": "number"
        },
        "solar_panel_voltage_min": {
          "description": "Minimum voltage of the solar panels",
          "type": "number"
        },
        "solar_panels_type": {
          "description": "Type of solar panels used",
          "type": "string"
        },
        "system_bus_voltage_solar_panels": {
          "description": "System bus voltage for solar panels",
          "type": "number"
        },
        "total_current_of_solar_panels_max": {
          "description": "Maximum total current of solar panels",
          "type": "number"
        },
        "total_output_current": {
          "description": "Total output current",
          "type": "number"
        },
        "updated_at": {
          "description": "Timestamp of the last update",
          "type": "integer"
        },
        "weight": {
          "description": "Weight of the power system",
          "type": "number"
        },
        "width": {
          "description": "Width of the power system",
          "type": "number"
        }
      }
    },
    "CubeSatPowerSystems": {
      "type": "object",
      "required": [
        "count"
      ],
      "properties": {
        "count": {
          "type": "integer"
        },
        "cube_sat_power_systems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CubeSatPowerSystem"
          }
        }
      }
    },
    "CubeSatProject": {
      "type": "object",
      "required": [
        "project_name"
      ],
      "properties": {
        "board_computing_module_name": {
          "type": "string"
        },
        "created_at": {
          "type": "integer"
        },
        "frame_name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "power_system_name": {
          "type": "string"
        },
        "project_name": {
          "type": "string"
        },
        "solar_panel_side_name": {
          "type": "string"
        },
        "solar_panel_top_name": {
          "type": "string"
        },
        "updated_at": {
          "type": "integer"
        },
        "user_id": {
          "type": "string"
        },
        "vhf_antenna_system_name": {
          "type": "string"
        },
        "vhf_transceiver_name": {
          "type": "string"
        }
      }
    },
    "CubeSatProjectValidationResult": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationError"
          }
        },
        "is_compatible": {
          "description": "Indicates if the project is compatible",
          "type": "boolean"
        }
      }
    },
    "CubeSatProjects": {
      "type": "object",
      "required": [
        "count"
      ],
      "properties": {
        "count": {
          "type": "integer"
        },
        "projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CubeSatProject"
          }
        }
      }
    },
    "CubeSatSolarPanelsSide": {
      "type": "object",
      "required": [
        "count"
      ],
      "properties": {
        "count": {
          "type": "integer"
        },
        "cube_sat_solar_panels_side": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarPanelSide"
          }
        }
      }
    },
    "CubeSatSolarPanelsTop": {
      "type": "object",
      "required": [
        "count"
      ],
      "properties": {
        "count": {
          "type": "integer"
        },
        "cube_sat_solar_panels_top": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarPanelTop"
          }
        }
      }
    },
    "CubeSatVHFTransceivers": {
      "type": "object",
      "required": [
        "count"
      ],
      "properties": {
        "count": {
          "type": "integer"
        },
        "vhf_transceivers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VHFTransceiver"
          }
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "LoginAdmin": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "LoginResponse": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string"
        }
      }
    },
    "LoginUser": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Principal": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "role": {
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "RegisterUser": {
      "type": "object",
      "required": [
        "email",
        "name",
        "password",
        "again_password"
      ],
      "properties": {
        "again_password": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "ResponseMsg": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "SolarPanelSide": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "coil_area": {
          "description": "Number of axes",
          "type": "number"
        },
        "coil_resistance": {
          "description": "Shock response spectrum value",
          "type": "integer"
        },
        "created_at": {
          "description": "Timestamp of creation",
          "type": "integer"
        },
        "efficiency": {
          "description": "Minimum random vibration",
          "type": "integer"
        },
        "height": {
          "description": "Size of the chassis",
          "type": "number"
        },
        "id": {
          "description": "Unique identifier for the chassis (auto-generated)",
          "type": "integer",
          "format": "int64"
        },
        "imp": {
          "description": "Maximum random vibration",
          "type": "number"
        },
        "interface": {
          "description": "Minimum non-operating temperature in degrees Celsius",
          "type": "string"
        },
        "isc": {
          "description": "Maximum sine vibration",
          "type": "number"
        },
        "length": {
          "description": "Name of the chassis",
          "type": "number"
        },
        "max_operating_temperature": {
          "description": "Maximum operating temperature in degrees Celsius",
          "type": "number"
        },
        "mechanical_shock": {
          "description": "Peak overload spectrum value 2",
          "type": "integer"
        },
        "mechanical_vibration": {
          "description": "Peak overload spectrum value 1",
          "type": "integer"
        },
        "min_operating_temperature": {
          "description": "Minimum operating temperature in degrees Celsius",
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "updated_at": {
          "description": "Timestamp of the last update",
          "type": "integer"
        },
        "vmp": {
          "description": "Minimum sine vibration",
          "type": "number"
        },
        "voc": {
          "description": "Overload capacity",
          "type": "number"
        },
        "weight": {
          "description": "Maximum non-operating temperature in degrees Celsius",
          "type": "number"
        },
        "width": {
          "description": "Number of slots in the chassis",
          "type": "number"
        }
      }
    },
    "SolarPanelTop": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "coil_area": {
          "description": "Area of the coil",
          "type": "number"
        },
        "coil_resistance": {
          "description": "Coil resistance value",
          "type": "number"
        },
        "created_at": {
          "description": "Timestamp of creation",
          "type": "integer"
        },
        "efficiency": {
          "description": "Efficiency percentage",
          "type": "number"
        },
        "height": {
          "description": "Height of the solar panel top",
          "type": "number"
        },
        "id": {
          "description": "Unique identifier for the solar panel top (auto-generated)",
          "type": "integer",
          "format": "int64"
        },
        "imp": {
          "description": "Current at maximum power",
          "type": "number"
        },
        "interface": {
          "description": "Interface type of the solar panel top",
          "type": "string"
        },
        "isc": {
          "description": "Short circuit current",
          "type": "number"
        },
        "length": {
          "description": "Length of the solar panel top",
          "type": "number"
        },
        "max_operating_temperature": {
          "description": "Maximum operating temperature in degrees Celsius",
          "type": "number"
        },
        "mechanical_shock": {
          "description": "Mechanical shock value",
          "type": "number"
        },
        "mechanical_vibration": {
          "description": "Mechanical vibration value",
          "type": "number"
        },
        "min_operating_temperature": {
          "description": "Minimum operating temperature in degrees Celsius",
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "updated_at": {
          "description": "Timestamp of the last update",
          "type": "integer"
        },
        "vmp": {
          "description": "Voltage at maximum power",
          "type": "number"
        },
        "voc": {
          "description": "Open circuit voltage",
          "type": "number"
        },
        "weight": {
          "description": "Weight of the solar panel top",
          "type": "number"
        },
        "width": {
          "description": "Width of the solar panel top",
          "type": "number"
        }
      }
    },
    "UpdateBoardComputingModuleBody": {
      "type": "object",
      "properties": {
        "data_bus": {
          "type": "string"
        },
        "height": {
          "description": "Height in meters",
          "type": "number"
        },
        "interface": {
          "description": "Communication interface",
          "type": "string"
        },
        "length": {
          "description": "Length in meters",
          "type": "number"
        },
        "max_operating_temperature": {
          "description": "Maximum operating temperature in Celsius",
          "type": "number"
        },
        "max_supply_voltage": {
          "description": "Supply voltage in volts",
          "type": "number"
        },
        "mechanical_shock": {
          "description": "Mechanical shock rating",
          "type": "integer",
          "format": "int64"
        },
        "mechanical_vibration": {
          "description": "Mechanical vibration rating",
          "type": "integer",
          "format": "int64"
        },
        "min_operating_temperature": {
          "description": "Minimum operating temperature in Celsius",
          "type": "number"
        },
        "min_supply_voltage": {
          "description": "Supply voltage in volts",
          "type": "number"
        },
        "name": {
          "description": "Name of the Board Computing Module",
          "type": "string"
        },
        "power_consumption": {
          "description": "Power consumption in watts",
          "type": "number"
        },
        "weight": {
          "description": "Weight in kilograms",
          "type": "number"
        },
        "width": {
          "description": "Width in meters",
          "type": "number"
        }
      }
    },
    "UpdateCubeSatProjectBody": {
      "type": "object",
      "required": [
        "project_name"
      ],
      "properties": {
        "project_name": {
          "type": "string"
        },
        "size": {
          "type": "integer"
        }
      }
    },
    "UpdatePowerSystemBody": {
      "type": "object",
      "required": [
        "length",
        "width",
        "height"
      ],
      "properties": {
        "current_output_channels_max": {
          "type": "number"
        },
        "data_interface": {
          "type": "string"
        },
        "height": {
          "type": "number"
        },
        "length": {
          "type": "number"
        },
        "max_operating_temperature": {
          "type": "number"
        },
        "max_system_bus_voltage_output_channels": {
          "description": "System bus voltage for output channels",
          "type": "number"
        },
        "mechanical_shock": {
          "type": "integer"
        },
        "mechanical_vibration": {
          "type": "integer"
        },
        "min_operating_temperature": {
          "type": "number"
        },
        "min_system_bus_voltage_output_channels": {
          "description": "System bus voltage for output channels",
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "output_channels": {
          "type": "integer"
        },
        "solar_panel_channels": {
          "type": "integer"
        },
        "solar_panel_current_per_channel_max": {
          "type": "number"
        },
        "solar_panel_voltage_max": {
          "type": "number"
        },
        "solar_panel_voltage_min": {
          "type": "number"
        },
        "solar_panels_type": {
          "type": "string"
        },
        "system_bus_voltage_solar_panels": {
          "type": "number"
        },
        "total_current_of_solar_panels_max": {
          "type": "number"
        },
        "total_output_current": {
          "type": "number"
        },
        "weight": {
          "type": "number"
        },
        "width": {
          "type": "number"
        }
      }
    },
    "UpdateSolarPanelSideBody": {
      "type": "object",
      "required": [
        "length",
        "width",
        "height"
      ],
      "properties": {
        "coil_area": {
          "type": "number"
        },
        "coil_resistance": {
          "type": "integer"
        },
        "efficiency": {
          "type": "integer"
        },
        "height": {
          "type": "number"
        },
        "imp": {
          "type": "number"
        },
        "interface": {
          "type": "string"
        },
        "isc": {
          "type": "number"
        },
        "length": {
          "type": "number"
        },
        "max_operating_temperature": {
          "type": "number"
        },
        "mechanical_shock": {
          "type": "integer"
        },
        "mechanical_vibration": {
          "type": "integer"
        },
        "min_operating_temperature": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "vmp": {
          "type": "number"
        },
        "voc": {
          "type": "number"
        },
        "weight": {
          "type": "number"
        },
        "width": {
          "type": "number"
        }
      }
    },
    "UpdateSolarPanelTopBody": {
      "type": "object",
      "required": [
        "length",
        "width",
        "height"
      ],
      "properties": {
        "coil_area": {
          "type": "number"
        },
        "coil_resistance": {
          "type": "number"
        },
        "efficiency": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "imp": {
          "type": "number"
        },
        "interface": {
          "type": "string"
        },
        "isc": {
          "type": "number"
        },
        "length": {
          "type": "number"
        },
        "max_operating_temperature": {
          "type": "number"
        },
        "mechanical_shock": {
          "type": "number"
        },
        "mechanical_vibration": {
          "type": "number"
        },
        "min_operating_temperature": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "vmp": {
          "type": "number"
        },
        "voc": {
          "type": "number"
        },
        "weight": {
          "type": "number"
        },
        "width": {
          "type": "number"
        }
      }
    },
    "UpdateVHFAntennaSystemBody": {
      "type": "object",
      "properties": {
        "frequency": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "interface": {
          "type": "string"
        },
        "length": {
          "type": "number"
        },
        "max_operating_temperature": {
          "type": "number"
        },
        "mechanical_shock": {
          "type": "integer"
        },
        "mechanical_vibration": {
          "type": "integer"
        },
        "min_operating_temperature": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "weight": {
          "type": "number"
        },
        "width": {
          "type": "number"
        }
      }
    },
    "UpdateVHFTransceiverBody": {
      "type": "object",
      "properties": {
        "height": {
          "type": "number"
        },
        "interface": {
          "type": "string"
        },
        "length": {
          "type": "number"
        },
        "max_operating_temperature": {
          "type": "number"
        },
        "mechanical_shock": {
          "type": "integer"
        },
        "mechanical_vibration": {
          "type": "integer"
        },
        "min_operating_temperature": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "operating_frequency": {
          "type": "number"
        },
        "output_power": {
          "type": "number"
        },
        "power_consumption": {
          "type": "number"
        },
        "sensitivity_receiver": {
          "type": "number"
        },
        "supply_voltage": {
          "type": "number"
        },
        "weight": {
          "type": "number"
        },
        "width": {
          "type": "number"
        }
      }
    },
    "UrlResponse": {
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "created_at": {
          "type": "integer"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "updated_at": {
          "type": "integer"
        }
      }
    },
    "VHFAntennaSystem": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "integer"
        },
        "frequency": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "id": {
          "type": "integer"
        },
        "interface": {
          "type": "string"
        },
        "length": {
          "type": "number"
        },
        "max_operating_temperature": {
          "type": "number"
        },
        "mechanical_shock": {
          "type": "integer"
        },
        "mechanical_vibration": {
          "type": "integer"
        },
        "min_operating_temperature": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "updated_at": {
          "type": "integer"
        },
        "weight": {
          "type": "number"
        },
        "width": {
          "type": "number"
        }
      }
    },
    "VHFAntennaSystems": {
      "type": "object",
      "required": [
        "count"
      ],
      "properties": {
        "count": {
          "type": "integer"
        },
        "vhf_antenna_system": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VHFAntennaSystem"
          }
        }
      }
    },
    "VHFTransceiver": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "integer"
        },
        "height": {
          "type": "number"
        },
        "id": {
          "type": "integer"
        },
        "interface": {
          "type": "string"
        },
        "length": {
          "type": "number"
        },
        "max_operating_temperature": {
          "type": "number"
        },
        "mechanical_shock": {
          "type": "integer"
        },
        "mechanical_vibration": {
          "type": "integer"
        },
        "min_operating_temperature": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "operating_frequency": {
          "type": "number"
        },
        "output_power": {
          "type": "number"
        },
        "power_consumption": {
          "type": "number"
        },
        "sensitivity_receiver": {
          "type": "number"
        },
        "supply_voltage": {
          "type": "number"
        },
        "updated_at": {
          "type": "integer"
        },
        "weight": {
          "type": "number"
        },
        "width": {
          "type": "number"
        }
      }
    },
    "ValidationError": {
      "type": "object",
      "properties": {
        "detail_type": {
          "description": "The type of detail causing the error (e.g., \"solar_panel_side\")",
          "type": "string"
        },
        "message": {
          "description": "A description of the validation error",
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Space VPX WebSite Backend Service",
    "title": "Space VPX Backend Service",
    "version": "development"
  },
  "paths": {
    "/auth/admin_login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login Admin",
        "operationId": "LoginAdmin",
        "parameters": [
          {
            "description": "Login Admin Body",
            "name": "LoginAdmin",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginAdmin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login Admin Response",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login User",
        "operationId": "LoginUser",
        "parameters": [
          {
            "description": "Login User Body",
            "name": "LoginUser",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login Response",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register User",
        "operationId": "RegisterUser",
        "parameters": [
          {
            "description": "Register User Body",
            "name": "RegisterUser",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Register Response",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/board_computing_module": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "BoardComputingModule"
        ],
        "summary": "Create a new Board Computing Module",
        "operationId": "CreateBoardComputingModule",
        "parameters": [
          {
            "description": "Board Computing Module object to be created",
            "name": "boardComputingModule",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateBoardComputingModuleBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created Board Computing Module",
            "schema": {
              "$ref": "#/definitions/BoardComputingModule"
            }
          },
          "400": {
            "description": "Bad request (e.g., invalid input)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity (e.g., validation errors)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/board_computing_module/available_board_computing_module": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "BoardComputingModule"
        ],
        "summary": "Get a list of available Board Computing Modules with filtering and pagination",
        "operationId": "GetAvailableBoardComputingModules",
        "parameters": [
          {
            "minimum": 0,
            "type": "integer",
            "description": "Offset for pagination",
            "name": "offset",
            "in": "query",
            "required": true
          },
          {
            "minimum": 1,
            "type": "integer",
            "description": "Limit for pagination",
            "name": "limit",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "created_at",
              "name",
              "length",
              "width",
              "height",
              "weight",
              "supply_voltage",
              "power_consumption",
              "max_operating_temperature",
              "min_operating_temperature"
            ],
            "type": "string",
            "description": "Field to sort by",
            "name": "sort[field]",
            "in": "query"
          },
          {
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string",
            "description": "Sort direction",
            "name": "sort[direction]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Minimum length to filter by",
            "name": "FilterBoardComputingModuleByLength[min]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Maximum length to filter by",
            "name": "FilterBoardComputingModuleByLength[max]",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filter Board Computing Module By Name",
            "name": "FilterBoardComputingModuleByName",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of Board Computing Modules",
            "schema": {
              "$ref": "#/definitions/BoardComputingModuleList"
            }
          },
          "400": {
            "description": "Bad request (e.g., invalid input)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/board_computing_module/{id}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "BoardComputingModule"
        ],
        "summary": "Get a Board Computing Module by ID",
        "operationId": "GetBoardComputingModuleByID",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "ID of the Board Computing Module to retrieve",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved Board Computing Module",
            "schema": {
              "$ref": "#/definitions/BoardComputingModule"
            }
          },
          "400": {
            "description": "Bad request (e.g., invalid input)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Board Computing Module not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "BoardComputingModule"
        ],
        "summary": "Delete a Board Computing Module by ID",
        "operationId": "DeleteBoardComputingModule",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "ID of the Board Computing Module to delete",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted Board Computing Module"
          },
          "400": {
            "description": "Bad request (e.g., invalid input)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Board Computing Module not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "BoardComputingModule"
        ],
        "summary": "Update a Board Computing Module by ID",
        "operationId": "UpdateBoardComputingModule",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "ID of the Board Computing Module to update",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Board Computing Module object to update",
            "name": "boardComputingModule",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateBoardComputingModuleBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated Board Computing Module",
            "schema": {
              "$ref": "#/definitions/BoardComputingModule"
            }
          },
          "400": {
            "description": "Bad request (e.g., invalid input)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Board Computing Module not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity (e.g., validation errors)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/chassis_vpx": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "ChassisVPX"
        ],
        "summary": "Create chasis",
        "operationId": "CreateChassisVPX",
        "parameters": [
          {
            "description": "Create Chassis VPX Body",
            "name": "CreateChassisVPXBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateChassisVPXBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create Chassis VPX Response",
            "schema": {
              "$ref": "#/definitions/CreateChassisVPXResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/chassis_vpx/available_chassis": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "ChassisVPX"
        ],
        "summary": "Get available chassis VPX",
        "operationId": "GetAvailableChassisVPX",
        "parameters": [
          {
            "minimum": 0,
            "type": "integer",
            "description": "Offset Configs",
            "name": "offset",
            "in": "query",
            "required": true
          },
          {
            "minimum": 0,
            "type": "integer",
            "description": "Offset Configs",
            "name": "limit",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "description": "Filter By Max Lenghth",
            "name": "FilterChassisVPXByMaxLength[from]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Min Length",
            "name": "FilterChassisVPXByMinLength[to]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Max Width",
            "name": "FilterChassisVPXByMaxWidth[from]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Min Width",
            "name": "FilterChassisVPXByMinWidth[to]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Max Height",
            "name": "FilterChassisVPXByMaxHeight[from]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Min Height",
            "name": "FilterChassisVPXByMinHeight[to]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Max Weight",
            "name": "FilterChassisVPXByMaxWeight[from]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Min Weight",
            "name": "FilterChassisVPXByMinWeight[to]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Max Power Handling Capability Per Board",
            "name": "FilterChassisVPXByMaxPowerHandlingCapabilityPerBoard[from]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Min Power Handling Capability Per Board",
            "name": "FilterChassisVPXByMinPowerHandlingCapabilityPerBoard[to]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Max Temperature Per Board",
            "name": "FilterChassisVPXByMaxTemperaturePerBoard[from]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Min Temperature Per Board",
            "name": "FilterChassisVPXByMinTemperaturePerBoard[to]",
            "in": "query"
          },
          {
            "enum": [
              "created_at",
              "weight"
            ],
            "type": "string",
            "description": "sort parametrs",
            "name": "sort[field]",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Available Chassis VPX Response",
            "schema": {
              "$ref": "#/definitions/ChassisesVPX"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/chassis_vpx/{id}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "ChassisVPX"
        ],
        "summary": "Get chassis VPX by ID",
        "operationId": "GetChassisVPXByID",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of the chassis  VPX",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Chassis VPX Response",
            "schema": {
              "$ref": "#/definitions/ChassisVPX"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Chassis VPX not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "ChassisVPX"
        ],
        "summary": "Delete chassis VPX by ID",
        "operationId": "DeleteChassisVPX",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of the chassis VPX",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Chassis VPX deleted successfully",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Chassis VPX not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "ChassisVPX"
        ],
        "summary": "Update chassis VPX",
        "operationId": "UpdateChassisVPX",
        "parameters": [
          {
            "description": "Update Chassis VPX Body",
            "name": "CreateChassisVPXBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateChassisVPXBody"
            }
          },
          {
            "type": "integer",
            "description": "The ID of the chassis VPX",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Update Chassis VPX Response",
            "schema": {
              "$ref": "#/definitions/ChassisVPX"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cube_sat_frame": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSateFrame"
        ],
        "summary": "Create Cube Sat Frame",
        "operationId": "CreateCubeSatFrame",
        "parameters": [
          {
            "description": "Create Cube Sat Frame Body",
            "name": "CreateCubeSatFrameBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCubeSatFrameBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create Cube Sat Frame Response",
            "schema": {
              "$ref": "#/definitions/CubeSatFrame"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cube_sat_frame/available_cube_sat_frame": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSateFrame"
        ],
        "summary": "Get Cube Sat frames",
        "operationId": "GetCubeSatFrames",
        "parameters": [
          {
            "minimum": 0,
            "type": "integer",
            "description": "Offset Configs",
            "name": "offset",
            "in": "query",
            "required": true
          },
          {
            "minimum": 0,
            "type": "integer",
            "description": "Offset Configs",
            "name": "limit",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "created_at"
            ],
            "type": "string",
            "description": "sort parametrs",
            "name": "sort[field]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Min Length",
            "name": "FilterCubeSatFrameByMinLength[min]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Max Length",
            "name": "FilterCubeSatFrameByMinLength[max]",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Get User Project Response",
            "schema": {
              "$ref": "#/definitions/CubeSatFrames"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cube_sat_frame/{id}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSateFrame"
        ],
        "summary": "Get Cube Sat Frame",
        "operationId": "GetCubeSatFrame",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of cube sat frame",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get CubeSat Frame Response",
            "schema": {
              "$ref": "#/definitions/CubeSatFrame"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSateFrame"
        ],
        "summary": "Delete Cube Sat Frame",
        "operationId": "DeleteCubeSatFrame",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of cube sat frame",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete CubeSat Frame Response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSateFrame"
        ],
        "summary": "Update Cube Sat Frame",
        "operationId": "UpdateCubeSatFrame",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of cube sat frame",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Create Cube Sat Frame Body",
            "name": "CreateCubeSatFrameBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCubeSatFrameBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update CubeSat Frame Response",
            "schema": {
              "$ref": "#/definitions/CubeSatFrame"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cube_sat_power_system": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "PowerSystem"
        ],
        "summary": "Create Power System",
        "operationId": "CreatePowerSystem",
        "parameters": [
          {
            "description": "Create Power System Body",
            "name": "CreatePowerSystemBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreatePowerSystemBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create Power System Response",
            "schema": {
              "$ref": "#/definitions/CubeSatPowerSystem"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cube_sat_power_system/available_power_systems": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "PowerSystem"
        ],
        "summary": "Get Cube Sat Power Systems",
        "operationId": "GetCubeSatPowerSystems",
        "parameters": [
          {
            "minimum": 0,
            "type": "integer",
            "description": "Offset Configs",
            "name": "offset",
            "in": "query",
            "required": true
          },
          {
            "minimum": 0,
            "type": "integer",
            "description": "Offset Configs",
            "name": "limit",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "created_at"
            ],
            "type": "string",
            "description": "sort parameters",
            "name": "sort[field]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Min Length",
            "name": "FilterCubeSatPowerSystemByLength[min]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Max Length",
            "name": "FilterCubeSatPowerSystemByLength[max]",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Get CubeSat Power Systems Response",
            "schema": {
              "$ref": "#/definitions/CubeSatPowerSystems"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cube_sat_power_system/{id}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "PowerSystem"
        ],
        "summary": "Get power system",
        "operationId": "GetPowerSystem",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of the power system",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get Power System Response",
            "schema": {
              "$ref": "#/definitions/CubeSatPowerSystem"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "PowerSystem"
        ],
        "summary": "Delete Cube Sat Power System",
        "operationId": "DeleteCubeSatPowerSystem",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of the cube sat power system",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Cube Sat Power System Response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "PowerSystem"
        ],
        "summary": "Update Cube Sat Power System",
        "operationId": "UpdateCubeSatPowerSystem",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of the cube sat power system",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Update Power System Body",
            "name": "UpdatePowerSystemBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePowerSystemBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update Power System Response",
            "schema": {
              "$ref": "#/definitions/CubeSatPowerSystem"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cube_sat_project": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSatProject"
        ],
        "summary": "Create CubeSat project",
        "operationId": "CreateCubeSatProject",
        "parameters": [
          {
            "description": "Create CubeSat Project Body",
            "name": "CreateCubeSatProject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCubeSatProjectBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create CubeSat Project Response",
            "schema": {
              "$ref": "#/definitions/CreateCubeSatProjectResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cube_sat_vhf_transceiver": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSatVHFTransceiver"
        ],
        "summary": "Create CubeSat VHF Transceiver",
        "operationId": "CreateCubeSatVHFTransceiver",
        "parameters": [
          {
            "description": "Create VHF Transceiver Body",
            "name": "CreateVHFTransceiverBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateVHFTransceiverBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create CubeSat VHF Transceiver Response",
            "schema": {
              "$ref": "#/definitions/VHFTransceiver"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cube_sat_vhf_transceiver/available": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSatVHFTransceiver"
        ],
        "summary": "Get Available CubeSat VHF Transceivers",
        "operationId": "GetAvailableCubeSatVHFTransceivers",
        "parameters": [
          {
            "minimum": 0,
            "type": "integer",
            "description": "Offset for pagination",
            "name": "offset",
            "in": "query",
            "required": true
          },
          {
            "minimum": 1,
            "type": "integer",
            "description": "Limit for pagination",
            "name": "limit",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "created_at"
            ],
            "type": "string",
            "description": "Sort parameters",
            "name": "sort[field]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter by minimum operating frequency",
            "name": "FilterCubeSatVHFTransceiverByMinFrequency",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter by maximum operating frequency",
            "name": "FilterCubeSatVHFTransceiverByMaxFrequency",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Available CubeSat VHF Transceivers Response",
            "schema": {
              "$ref": "#/definitions/CubeSatVHFTransceivers"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cube_sat_vhf_transceiver/{id}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSatVHFTransceiver"
        ],
        "summary": "Get CubeSat VHF Transceiver",
        "operationId": "GetCubeSatVHFTransceiver",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of the CubeSat VHF transceiver",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get CubeSat VHF Transceiver Response",
            "schema": {
              "$ref": "#/definitions/VHFTransceiver"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSatVHFTransceiver"
        ],
        "summary": "Delete CubeSat VHF Transceiver",
        "operationId": "DeleteCubeSatVHFTransceiver",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of the CubeSat VHF transceiver",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete CubeSat VHF Transceiver Response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSatVHFTransceiver"
        ],
        "summary": "Update CubeSat VHF Transceiver",
        "operationId": "UpdateCubeSatVHFTransceiver",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of the CubeSat VHF transceiver",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Update VHF Transceiver Body",
            "name": "UpdateVHFTransceiverBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateVHFTransceiverBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update CubeSat VHF Transceiver Response",
            "schema": {
              "$ref": "#/definitions/VHFTransceiver"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/project/{id}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSatProject"
        ],
        "summary": "Get CubeSat project",
        "operationId": "Get CubeSat Project",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the project to retrieve",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get CubeSat Project Response",
            "schema": {
              "$ref": "#/definitions/CubeSatProject"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSatProject"
        ],
        "summary": "Delete CubeSat project",
        "operationId": "DeleteCubeSatProject",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the project to retrieve",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete CubeSat Project Response",
            "schema": {
              "$ref": "#/definitions/CreateCubeSatProjectResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSatProject"
        ],
        "summary": "Update CubeSat project",
        "operationId": "UpdateCubeSatProject",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the project to retrieve",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Update CubeSat Project Body",
            "name": "UpdateCubeSatProjectBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCubeSatProjectBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update CubeSat Project Response",
            "schema": {
              "$ref": "#/definitions/CubeSatProject"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/projects/user_projects": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSatProject"
        ],
        "summary": "Get user CubeSat projects",
        "operationId": "GetUserCubeSatProjects",
        "parameters": [
          {
            "minimum": 0,
            "type": "integer",
            "description": "Offset Configs",
            "name": "offset",
            "in": "query",
            "required": true
          },
          {
            "minimum": 0,
            "type": "integer",
            "description": "Offset Configs",
            "name": "limit",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "created_at",
              "updated_at"
            ],
            "type": "string",
            "description": "sort parametrs",
            "name": "sort[field]",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Get User CubeSat Project Response",
            "schema": {
              "$ref": "#/definitions/CubeSatProjects"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/projects/{project_id}/board_computing_module": {
      "put": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSatProject"
        ],
        "summary": "Update the Board Computing Module of a CubeSat Project",
        "operationId": "UpdateCubeSatBoardComputingModuleByProject",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the project to update",
            "name": "project_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Board Computing Module object to update",
            "name": "AddCubeSatBoardComputingModule",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddCubeSatBoardComputingModule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated Board Computing Module",
            "schema": {
              "$ref": "#/definitions/CubeSatProject"
            }
          },
          "400": {
            "description": "Bad request (e.g., invalid input)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Project not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity (e.g., validation errors)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/projects/{project_id}/frame": {
      "put": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSatProject"
        ],
        "summary": "Update the Frame of a CubeSat Project",
        "operationId": "UpdateCubeSatFrameByProject",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the project to update",
            "name": "project_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Frame object to update",
            "name": "AddCubeSatFrame",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddCubeSatFrame"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated Frame",
            "schema": {
              "$ref": "#/definitions/CubeSatProject"
            }
          },
          "400": {
            "description": "Bad request (e.g., invalid input)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Project not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity (e.g., validation errors)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/projects/{project_id}/power_system": {
      "put": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSatProject"
        ],
        "summary": "Update the Power System of a CubeSat Project",
        "operationId": "UpdateCubeSatPowerSystemByProject",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the project to update",
            "name": "project_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Power System object to update",
            "name": "AddCubeSatPowerSystem",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddCubeSatPowerSystem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated Power System",
            "schema": {
              "$ref": "#/definitions/CubeSatProject"
            }
          },
          "400": {
            "description": "Bad request (e.g., invalid input)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Project not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity (e.g., validation errors)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/projects/{project_id}/solar_panel_side": {
      "put": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSatProject"
        ],
        "summary": "Update the Solar Panel Side of a CubeSat Project",
        "operationId": "UpdateCubeSatSolarPanelSideByProject",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the project to update",
            "name": "project_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Solar Panel Side object to update",
            "name": "AddCubeSatSolarPanelSide",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddCubeSatSolarPanelSide"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated Solar Panel Side",
            "schema": {
              "$ref": "#/definitions/CubeSatProject"
            }
          },
          "400": {
            "description": "Bad request (e.g., invalid input)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Project not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity (e.g., validation errors)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/projects/{project_id}/solar_panel_top": {
      "put": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSatProject"
        ],
        "summary": "Update the Solar Panel Top of a CubeSat Project",
        "operationId": "UpdateCubeSatSolarPanelTopByProject",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the project to update",
            "name": "project_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Solar Panel Top object to update",
            "name": "AddCubeSatSolarPanelTop",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddCubeSatSolarPanelTop"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated Solar Panel Top",
            "schema": {
              "$ref": "#/definitions/CubeSatProject"
            }
          },
          "400": {
            "description": "Bad request (e.g., invalid input)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Project not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity (e.g., validation errors)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/projects/{project_id}/validate": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSatProject"
        ],
        "summary": "Validate the compatibility of a CubeSat Project",
        "operationId": "ValidateCubeSatProjectByProject",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the project to validate",
            "name": "project_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully validated CubeSat Project",
            "schema": {
              "$ref": "#/definitions/CubeSatProjectValidationResult"
            }
          },
          "400": {
            "description": "Bad request (e.g., invalid input)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Project not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/projects/{project_id}/vhf_antenna_system": {
      "put": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSatProject"
        ],
        "summary": "Update the VHF Antenna System of a CubeSat Project",
        "operationId": "UpdateCubeSatVhfAntennaSystemByProject",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the project to update",
            "name": "project_id",
            "in": "path",
            "required": true
          },
          {
            "description": "VHF Antenna System object to update",
            "name": "AddCubeSatVhfAntennaSystem",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddCubeSatVhfAntennaSystem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated VHF Antenna System",
            "schema": {
              "$ref": "#/definitions/CubeSatProject"
            }
          },
          "400": {
            "description": "Bad request (e.g., invalid input)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Project not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity (e.g., validation errors)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/projects/{project_id}/vhf_transceiver": {
      "put": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "CubeSatProject"
        ],
        "summary": "Update the VHF Transceiver of a CubeSat Project",
        "operationId": "UpdateCubeSatVhfTransceiverByProject",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the project to update",
            "name": "project_id",
            "in": "path",
            "required": true
          },
          {
            "description": "VHF Transceiver object to update",
            "name": "AddCubeSatVhfTransceiver",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddCubeSatVhfTransceiver"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated VHF Transceiver",
            "schema": {
              "$ref": "#/definitions/CubeSatProject"
            }
          },
          "400": {
            "description": "Bad request (e.g., invalid input)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Project not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity (e.g., validation errors)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/solar_panel_side": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "SolarPanelSide"
        ],
        "summary": "Create Solar Panel Side",
        "operationId": "CreateSolarPanelSide",
        "parameters": [
          {
            "description": "Create Solar Panel Side Body",
            "name": "CreateSolarPanelSideBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateSolarPanelSideBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create Solar Panel Side Response",
            "schema": {
              "$ref": "#/definitions/SolarPanelSide"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/solar_panel_side/available_solar_panel_side": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "SolarPanelSide"
        ],
        "summary": "Get Cube Sat Solar Panels Side",
        "operationId": "GetCubeSatSolarPanelsSide",
        "parameters": [
          {
            "minimum": 0,
            "type": "integer",
            "description": "Offset Configs",
            "name": "offset",
            "in": "query",
            "required": true
          },
          {
            "minimum": 0,
            "type": "integer",
            "description": "Offset Configs",
            "name": "limit",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "created_at"
            ],
            "type": "string",
            "description": "sort parametrs",
            "name": "sort[field]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Min Length",
            "name": "FilterCubeSatSolarPanelByLength[min]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Max Length",
            "name": "FilterCubeSatSolarPanelByLength[max]",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Get CubeSat Solar Panels Side Response",
            "schema": {
              "$ref": "#/definitions/CubeSatSolarPanelsSide"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/solar_panel_side/{id}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "SolarPanelSide"
        ],
        "summary": "Get solar panel side",
        "operationId": "GetSolarPanelSide",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of solar panel side",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get Solar Panel Side Response",
            "schema": {
              "$ref": "#/definitions/SolarPanelSide"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "SolarPanelSide"
        ],
        "summary": "Delete Cube Sat Solar Panel Side",
        "operationId": "DeleteCubeSatSolarPanelSide",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of cube sat solar panel side",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Cube Sat Solar Panel Side Response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "SolarPanelSide"
        ],
        "summary": "Update Cube Sat Solar Panel Side",
        "operationId": "UpdateCubeSatSolarPanelSide",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of cube sat solar panel side",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Update Solar Panel Side Body",
            "name": "UpdateSolarPanelSideBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateSolarPanelSideBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update Solar Panel Side Response",
            "schema": {
              "$ref": "#/definitions/SolarPanelSide"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/solar_panel_top": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "SolarPanelTop"
        ],
        "summary": "Create Solar Panel Top",
        "operationId": "CreateSolarPanelTop",
        "parameters": [
          {
            "description": "Create Solar Panel Top Body",
            "name": "CreateSolarPanelTopBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateSolarPanelTopBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create Solar Panel Top Response",
            "schema": {
              "$ref": "#/definitions/SolarPanelTop"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/solar_panel_top/available_solar_panel_top": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "SolarPanelTop"
        ],
        "summary": "Get Cube Sat Solar Panels Top",
        "operationId": "GetCubeSatSolarPanelsTop",
        "parameters": [
          {
            "minimum": 0,
            "type": "integer",
            "description": "Offset Configs",
            "name": "offset",
            "in": "query",
            "required": true
          },
          {
            "minimum": 0,
            "type": "integer",
            "description": "Offset Configs",
            "name": "limit",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "created_at"
            ],
            "type": "string",
            "description": "sort parameters",
            "name": "sort[field]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Min Length",
            "name": "FilterCubeSatSolarPanelByLength[min]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter By Max Length",
            "name": "FilterCubeSatSolarPanelByLength[max]",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Get CubeSat Solar Panels Top Response",
            "schema": {
              "$ref": "#/definitions/CubeSatSolarPanelsTop"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/solar_panel_top/{id}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "SolarPanelTop"
        ],
        "summary": "Get solar panel top",
        "operationId": "GetSolarPanelTop",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of solar panel top",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get Solar Panel Top Response",
            "schema": {
              "$ref": "#/definitions/SolarPanelTop"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "SolarPanelTop"
        ],
        "summary": "Delete Cube Sat Solar Panel Top",
        "operationId": "DeleteCubeSatSolarPanelTop",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of cube sat solar panel top",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Cube Sat Solar Panel Top Response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "SolarPanelTop"
        ],
        "summary": "Update Cube Sat Solar Panel Top",
        "operationId": "UpdateCubeSatSolarPanelTop",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of cube sat solar panel top",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Update Solar Panel Top Body",
            "name": "UpdateSolarPanelTopBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateSolarPanelTopBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update Solar Panel Top Response",
            "schema": {
              "$ref": "#/definitions/SolarPanelTop"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/test_data_load": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "TestData"
        ],
        "summary": "Load Test Data",
        "operationId": "LoadTestData",
        "responses": {
          "200": {
            "description": "Load Test Data response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/get_me": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "User"
        ],
        "summary": "Get user me",
        "operationId": "GetUserMe",
        "responses": {
          "200": {
            "description": "Get User Me Response",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vhf_antenna_system": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "VHFAntennaSystem"
        ],
        "summary": "Create VHF Antenna System",
        "operationId": "CreateVHFAntennaSystem",
        "parameters": [
          {
            "description": "Create VHF Antenna System Body",
            "name": "CreateVHFAntennaSystemBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateVHFAntennaSystemBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create VHF Antenna System Response",
            "schema": {
              "$ref": "#/definitions/VHFAntennaSystem"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vhf_antenna_system/available_vhf_antenna_systems": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "VHFAntennaSystem"
        ],
        "summary": "Get Available VHF Antenna Systems",
        "operationId": "GetAvailableVHFAntennaSystems",
        "parameters": [
          {
            "minimum": 0,
            "type": "integer",
            "description": "Offset for pagination",
            "name": "offset",
            "in": "query",
            "required": true
          },
          {
            "minimum": 1,
            "type": "integer",
            "description": "Limit for pagination",
            "name": "limit",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "created_at",
              "id"
            ],
            "type": "string",
            "description": "Sort parameters",
            "name": "sort[field]",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter by minimum frequency",
            "name": "FilterVHFAntennaSystemByMinFrequency",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filter by maximum frequency",
            "name": "FilterVHFAntennaSystemByMaxFrequency",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Available VHF Antenna Systems Response",
            "schema": {
              "$ref": "#/definitions/VHFAntennaSystems"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vhf_antenna_system/{id}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "VHFAntennaSystem"
        ],
        "summary": "Get VHF Antenna System",
        "operationId": "GetVHFAntennaSystem",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of the VHF antenna system",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get VHF Antenna System Response",
            "schema": {
              "$ref": "#/definitions/VHFAntennaSystem"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "VHFAntennaSystem"
        ],
        "summary": "Delete VHF Antenna System",
        "operationId": "DeleteVHFAntennaSystem",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of the VHF antenna system",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete VHF Antenna System Response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "VHFAntennaSystem"
        ],
        "summary": "Update VHF Antenna System",
        "operationId": "UpdateVHFAntennaSystem",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of the VHF antenna system",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Update VHF Antenna System Body",
            "name": "UpdateVHFAntennaSystemBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateVHFAntennaSystemBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update VHF Antenna System Response",
            "schema": {
              "$ref": "#/definitions/VHFAntennaSystem"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AddCubeSatBoardComputingModule": {
      "type": "object",
      "required": [
        "board_computing_module_name"
      ],
      "properties": {
        "board_computing_module_name": {
          "type": "string"
        }
      }
    },
    "AddCubeSatFrame": {
      "type": "object",
      "required": [
        "frame_name"
      ],
      "properties": {
        "frame_name": {
          "type": "string"
        }
      }
    },
    "AddCubeSatPowerSystem": {
      "type": "object",
      "required": [
        "board_computing_module_name"
      ],
      "properties": {
        "board_computing_module_name": {
          "type": "string"
        }
      }
    },
    "AddCubeSatSolarPanelSide": {
      "type": "object",
      "required": [
        "solar_panel_side_name"
      ],
      "properties": {
        "solar_panel_side_name": {
          "type": "string"
        }
      }
    },
    "AddCubeSatSolarPanelTop": {
      "type": "object",
      "required": [
        "solar_panel_top_name"
      ],
      "properties": {
        "solar_panel_top_name": {
          "type": "string"
        }
      }
    },
    "AddCubeSatVhfAntennaSystem": {
      "type": "object",
      "required": [
        "vhf_antenna_system_name"
      ],
      "properties": {
        "vhf_antenna_system_name": {
          "type": "string"
        }
      }
    },
    "AddCubeSatVhfTransceiver": {
      "type": "object",
      "required": [
        "vhf_transceiver_name"
      ],
      "properties": {
        "vhf_transceiver_name": {
          "type": "string"
        }
      }
    },
    "BoardComputingModule": {
      "type": "object",
      "properties": {
        "created_at": {
          "description": "Creation timestamp",
          "type": "integer"
        },
        "data_bus": {
          "type": "string"
        },
        "height": {
          "description": "Height in meters",
          "type": "number"
        },
        "id": {
          "description": "Unique identifier for the Board Computing Module",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "interface": {
          "description": "Communication interface",
          "type": "string"
        },
        "length": {
          "description": "Length in meters",
          "type": "number"
        },
        "max_operating_temperature": {
          "description": "Maximum operating temperature in Celsius",
          "type": "number"
        },
        "max_supply_voltage": {
          "description": "Supply voltage in volts",
          "type": "number"
        },
        "mechanical_shock": {
          "description": "Mechanical shock rating",
          "type": "integer",
          "format": "int64"
        },
        "mechanical_vibration": {
          "description": "Mechanical vibration rating",
          "type": "integer",
          "format": "int64"
        },
        "min_operating_temperature": {
          "description": "Minimum operating temperature in Celsius",
          "type": "number"
        },
        "min_supply_voltage": {
          "description": "Supply voltage in volts",
          "type": "number"
        },
        "name": {
          "description": "Name of the Board Computing Module",
          "type": "string"
        },
        "power_consumption": {
          "description": "Power consumption in watts",
          "type": "number"
        },
        "updated_at": {
          "description": "Last update timestamp",
          "type": "integer"
        },
        "weight": {
          "description": "Weight in kilograms",
          "type": "number"
        },
        "width": {
          "description": "Width in meters",
          "type": "number"
        }
      }
    },
    "BoardComputingModuleList": {
      "type": "object",
      "required": [
        "count"
      ],
      "properties": {
        "board_computing_modules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BoardComputingModule"
          }
        },
        "count": {
          "type": "integer"
        }
      }
    },
    "ChassisVPX": {
      "type": "object",
      "required": [
        "name",
        "slots",
        "size",
        "max_operating_temperature",
        "min_operating_temperature",
        "max_non_operating_temperature",
        "min_non_operating_temperature",
        "overload",
        "max_vibration_sine",
        "min_vibration_sine",
        "max_vibration_random",
        "min_vibration_random",
        "axes",
        "shock_response_spectrum",
        "peak_overload_spectrum_1",
        "peak_overload_spectrum_2",
        "peak_frequency_spectrum_1",
        "peak_frequency_spectrum_2",
        "length",
        "width",
        "height",
        "weight",
        "power_handling_capability_per_board",
        "temperature_per_board"
      ],
      "properties": {
        "axes": {
          "description": "Number of axes",
          "type": "integer"
        },
        "created_at": {
          "description": "Timestamp of creation",
          "type": "integer"
        },
        "height": {
          "description": "Height of the chassis",
          "type": "number"
        },
        "id": {
          "description": "Unique identifier for the chassis (auto-generated)",
          "type": "integer",
          "format": "int64"
        },
        "length": {
          "description": "Length of the chassis",
          "type": "number"
        },
        "max_non_operating_temperature": {
          "description": "Maximum non-operating temperature in degrees Celsius",
          "type": "number"
        },
        "max_operating_temperature": {
          "description": "Maximum operating temperature in degrees Celsius",
          "type": "number"
        },
        "max_vibration_random": {
          "description": "Maximum random vibration",
          "type": "number"
        },
        "max_vibration_sine": {
          "description": "Maximum sine vibration",
          "type": "number"
        },
        "min_non_operating_temperature": {
          "description": "Minimum non-operating temperature in degrees Celsius",
          "type": "number"
        },
        "min_operating_temperature": {
          "description": "Minimum operating temperature in degrees Celsius",
          "type": "number"
        },
        "min_vibration_random": {
          "description": "Minimum random vibration",
          "type": "number"
        },
        "min_vibration_sine": {
          "description": "Minimum sine vibration",
          "type": "number"
        },
        "name": {
          "description": "Name of the chassis",
          "type": "string"
        },
        "overload": {
          "description": "Overload capacity",
          "type": "number"
        },
        "peak_frequency_spectrum_1": {
          "description": "Peak frequency spectrum value 1",
          "type": "number"
        },
        "peak_frequency_spectrum_2": {
          "description": "Peak frequency spectrum value 2",
          "type": "number"
        },
        "peak_overload_spectrum_1": {
          "description": "Peak overload spectrum value 1",
          "type": "number"
        },
        "peak_overload_spectrum_2": {
          "description": "Peak overload spectrum value 2",
          "type": "number"
        },
        "power_handling_capability_per_board": {
          "description": "Power handling capability per board",
          "type": "number"
        },
        "shock_response_spectrum": {
          "description": "Shock response spectrum value",
          "type": "number"
        },
        "size": {
          "description": "Size of the chassis",
          "type": "string"
        },
        "slots": {
          "description": "Number of slots in the chassis",
          "type": "integer"
        },
        "temperature_per_board": {
          "description": "Temperature per board",
          "type": "number"
        },
        "updated_at": {
          "description": "Timestamp of the last update",
          "type": "integer"
        },
        "weight": {
          "description": "Weight of the chassis",
          "type": "number"
        },
        "width": {
          "description": "Width of the chassis",
          "type": "number"
        }
      }
    },
    "ChassisesVPX": {
      "type": "object",
      "required": [
        "count"
      ],
      "properties": {
        "chassises": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChassisVPX"
          }
        },
        "count": {
          "type": "integer"
        }
      }
    },
    "CreateBoardComputingModuleBody": {
      "type": "object",
      "properties": {
        "data_bus": {
          "type": "string"
        },
        "height": {
          "description": "Height in meters",
          "type": "number"
        },
        "interface": {
          "description": "Communication interface",
          "type": "string"
        },
        "length": {
          "description": "Length in meters",
          "type": "number"
        },
        "max_operating_temperature": {
          "description": "Maximum operating temperature in Celsius",
          "type": "number"
        },
        "max_supply_voltage": {
          "description": "Supply voltage in volts",
          "type": "number"
        },
        "mechanical_shock": {
          "description": "Mechanical shock rating",
          "type": "integer",
          "format": "int64"
        },
        "mechanical_vibration": {
          "description": "Mechanical vibration rating",
          "type": "integer",
          "format": "int64"
        },
        "min_operating_temperature": {
          "description": "Minimum operating temperature in Celsius",
          "type": "number"
        },
        "min_supply_voltage": {
          "description": "Supply voltage in volts",
          "type": "number"
        },
        "name": {
          "description": "Name of the Board Computing Module",
          "type": "string"
        },
        "power_consumption": {
          "description": "Power consumption in watts",
          "type": "number"
        },
        "weight": {
          "description": "Weight in kilograms",
          "type": "number"
        },
        "width": {
          "description": "Width in meters",
          "type": "number"
        }
      }
    },
    "CreateChassisVPXBody": {
      "type": "object",
      "required": [
        "name",
        "slots",
        "size",
        "max_operating_temperature",
        "min_operating_temperature",
        "max_non_operating_temperature",
        "min_non_operating_temperature",
        "overload",
        "max_vibration_sine",
        "min_vibration_sine",
        "max_vibration_random",
        "min_vibration_random",
        "axes",
        "shock_response_spectrum",
        "peak_overload_spectrum_1",
        "peak_overload_spectrum_2",
        "peak_frequency_spectrum_1",
        "peak_frequency_spectrum_2",
        "length",
        "width",
        "height",
        "weight",
        "power_handling_capability_per_board",
        "temperature_per_board"
      ],
      "properties": {
        "axes": {
          "description": "Number of axes",
          "type": "integer"
        },
        "height": {
          "description": "Height of the chassis VPX",
          "type": "number"
        },
        "length": {
          "description": "Length of the chassis VPX",
          "type": "number"
        },
        "max_non_operating_temperature": {
          "description": "Maximum non-operating temperature in degrees Celsius",
          "type": "number"
        },
        "max_operating_temperature": {
          "description": "Maximum operating temperature in degrees Celsius",
          "type": "number"
        },
        "max_vibration_random": {
          "description": "Maximum random vibration",
          "type": "number"
        },
        "max_vibration_sine": {
          "description": "Maximum sine vibration",
          "type": "number"
        },
        "min_non_operating_temperature": {
          "description": "Minimum non-operating temperature in degrees Celsius",
          "type": "number"
        },
        "min_operating_temperature": {
          "description": "Minimum operating temperature in degrees Celsius",
          "type": "number"
        },
        "min_vibration_random": {
          "description": "Minimum random vibration",
          "type": "number"
        },
        "min_vibration_sine": {
          "description": "Minimum sine vibration",
          "type": "number"
        },
        "name": {
          "description": "Name of the chassis",
          "type": "string"
        },
        "overload": {
          "description": "Overload capacity",
          "type": "number"
        },
        "peak_frequency_spectrum_1": {
          "description": "Peak frequency spectrum value 1",
          "type": "number"
        },
        "peak_frequency_spectrum_2": {
          "description": "Peak frequency spectrum value 2",
          "type": "number"
        },
        "peak_overload_spectrum_1": {
          "description": "Peak overload spectrum value 1",
          "type": "number"
        },
        "peak_overload_spectrum_2": {
          "description": "Peak overload spectrum value 2",
          "type": "number"
        },
        "power_handling_capability_per_board": {
          "description": "Power handling capability per board",
          "type": "number"
        },
        "shock_response_spectrum": {
          "description": "Shock response spectrum value",
          "type": "number"
        },
        "size": {
          "description": "Size of the chassis",
          "type": "string"
        },
        "slots": {
          "description": "Number of slots in the chassis",
          "type": "integer"
        },
        "temperature_per_board": {
          "description": "Temperature per board",
          "type": "number"
        },
        "weight": {
          "description": "Weight of the chassis VPX",
          "type": "number"
        },
        "width": {
          "description": "Width of the chassis VPX",
          "type": "number"
        }
      }
    },
    "CreateChassisVPXResponse": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "description": "Unique identifier for the chassis (auto-generated)",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CreateCubeSatFrameBody": {
      "type": "object",
      "required": [
        "length",
        "width",
        "height",
        "weight",
        "operating_temperature_min",
        "operating_temperature_max",
        "mechanical_vibration",
        "mechanical_shock",
        "link"
      ],
      "properties": {
        "height": {
          "type": "number"
        },
        "interface": {
          "type": "string"
        },
        "length": {
          "type": "number"
        },
        "link": {
          "type": "string"
        },
        "mechanical_shock": {
          "type": "integer"
        },
        "mechanical_vibration": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "operating_temperature_max": {
          "type": "integer"
        },
        "operating_temperature_min": {
          "type": "integer"
        },
        "size": {
          "type": "integer"
        },
        "weight": {
          "type": "number"
        },
        "width": {
          "type": "number"
        }
      }
    },
    "CreateCubeSatProjectBody": {
      "type": "object",
      "required": [
        "project_name"
      ],
      "properties": {
        "board_computing_module_name": {
          "type": "string"
        },
        "frame_name": {
          "type": "string"
        },
        "power_system_name": {
          "type": "string"
        },
        "project_name": {
          "type": "string"
        },
        "size": {
          "type": "integer"
        },
        "solar_panel_side_name": {
          "type": "string"
        },
        "solar_panel_top_name": {
          "type": "string"
        },
        "vhf_antenna_system_name": {
          "type": "string"
        },
        "vhf_transceiver_name": {
          "type": "string"
        }
      }
    },
    "CreateCubeSatProjectResponse": {
      "type": "object",
      "required": [
        "project_id"
      ],
      "properties": {
        "project_id": {
          "type": "string"
        },
        "project_name": {
          "type": "string"
        }
      }
    },
    "CreatePowerSystemBody": {
      "type": "object",
      "required": [
        "length",
        "width",
        "height"
      ],
      "properties": {
        "current_output_channels_max": {
          "type": "number"
        },
        "data_interface": {
          "type": "string"
        },
        "height": {
          "type": "number"
        },
        "length": {
          "type": "number"
        },
        "max_operating_temperature": {
          "type": "number"
        },
        "max_system_bus_voltage_output_channels": {
          "description": "System bus voltage for output channels",
          "type": "number"
        },
        "mechanical_shock": {
          "type": "integer"
        },
        "mechanical_vibration": {
          "type": "integer"
        },
        "min_operating_temperature": {
          "type": "number"
        },
        "min_system_bus_voltage_output_channels": {
          "description": "System bus voltage for output channels",
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "output_channels": {
          "type": "integer"
        },
        "solar_panel_channels": {
          "type": "integer"
        },
        "solar_panel_current_per_channel_max": {
          "type": "number"
        },
        "solar_panel_voltage_max": {
          "type": "number"
        },
        "solar_panel_voltage_min": {
          "type": "number"
        },
        "solar_panels_type": {
          "type": "string"
        },
        "system_bus_voltage_solar_panels": {
          "type": "number"
        },
        "total_current_of_solar_panels_max": {
          "type": "number"
        },
        "total_output_current": {
          "type": "number"
        },
        "weight": {
          "type": "number"
        },
        "width": {
          "type": "number"
        }
      }
    },
    "CreateSolarPanelSideBody": {
      "type": "object",
      "required": [
        "length",
        "width",
        "height"
      ],
      "properties": {
        "coil_area": {
          "type": "number"
        },
        "coil_resistance": {
          "type": "integer"
        },
        "efficiency": {
          "type": "integer"
        },
        "height": {
          "type": "number"
        },
        "imp": {
          "type": "number"
        },
        "interface": {
          "type": "string"
        },
        "isc": {
          "type": "number"
        },
        "length": {
          "type": "number"
        },
        "max_operating_temperature": {
          "type": "number"
        },
        "mechanical_shock": {
          "type": "integer"
        },
        "mechanical_vibration": {
          "type": "integer"
        },
        "min_operating_temperature": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "vmp": {
          "type": "number"
        },
        "voc": {
          "type": "number"
        },
        "weight": {
          "type": "number"
        },
        "width": {
          "type": "number"
        }
      }
    },
    "CreateSolarPanelTopBody": {
      "type": "object",
      "required": [
        "length",
        "width",
        "height"
      ],
      "properties": {
        "coil_area": {
          "type": "number"
        },
        "coil_resistance": {
          "type": "number"
        },
        "efficiency": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "imp": {
          "type": "number"
        },
        "interface": {
          "type": "string"
        },
        "isc": {
          "type": "number"
        },
        "length": {
          "type": "number"
        },
        "max_operating_temperature": {
          "type": "number"
        },
        "mechanical_shock": {
          "type": "number"
        },
        "mechanical_vibration": {
          "type": "number"
        },
        "min_operating_temperature": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "vmp": {
          "type": "number"
        },
        "voc": {
          "type": "number"
        },
        "weight": {
          "type": "number"
        },
        "width": {
          "type": "number"
        }
      }
    },
    "CreateVHFAntennaSystemBody": {
      "type": "object",
      "properties": {
        "frequency": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "interface": {
          "type": "string"
        },
        "length": {
          "type": "number"
        },
        "max_operating_temperature": {
          "type": "number"
        },
        "mechanical_shock": {
          "type": "integer"
        },
        "mechanical_vibration": {
          "type": "integer"
        },
        "min_operating_temperature": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "weight": {
          "type": "number"
        },
        "width": {
          "type": "number"
        }
      }
    },
    "CreateVHFTransceiverBody": {
      "type": "object",
      "properties": {
        "height": {
          "type": "number"
        },
        "interface": {
          "type": "string"
        },
        "length": {
          "type": "number"
        },
        "max_operating_temperature": {
          "type": "number"
        },
        "mechanical_shock": {
          "type": "integer"
        },
        "mechanical_vibration": {
          "type": "integer"
        },
        "min_operating_temperature": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "operating_frequency": {
          "type": "number"
        },
        "output_power": {
          "type": "number"
        },
        "power_consumption": {
          "type": "number"
        },
        "sensitivity_receiver": {
          "type": "number"
        },
        "supply_voltage": {
          "type": "number"
        },
        "weight": {
          "type": "number"
        },
        "width": {
          "type": "number"
        }
      }
    },
    "CubeSatFrame": {
      "type": "object",
      "required": [
        "id",
        "length",
        "width",
        "height",
        "weight",
        "operating_temperature_min",
        "operating_temperature_max",
        "mechanical_vibration",
        "mechanical_shock",
        "link"
      ],
      "properties": {
        "created_at": {
          "description": "Timestamp of creation",
          "type": "integer"
        },
        "height": {
          "type": "number"
        },
        "id": {
          "type": "integer"
        },
        "interface": {
          "type": "string"
        },
        "length": {
          "type": "number"
        },
        "link": {
          "type": "string"
        },
        "mechanical_shock": {
          "type": "integer"
        },
        "mechanical_vibration": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "operating_temperature_max": {
          "type": "integer"
        },
        "operating_temperature_min": {
          "type": "integer"
        },
        "size": {
          "type": "integer"
        },
        "updated_at": {
          "description": "Timestamp of the last update",
          "type": "integer"
        },
        "weight": {
          "type": "number"
        },
        "width": {
          "type": "number"
        }
      }
    },
    "CubeSatFrames": {
      "type": "object",
      "required": [
        "count"
      ],
      "properties": {
        "count": {
          "type": "integer"
        },
        "cube_sat_frames": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CubeSatFrame"
          }
        }
      }
    },
    "CubeSatPowerSystem": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "created_at": {
          "description": "Timestamp of creation",
          "type": "integer"
        },
        "current_output_channels_max": {
          "description": "Maximum current for output channels",
          "type": "number"
        },
        "data_interface": {
          "description": "Data interface type",
          "type": "string"
        },
        "height": {
          "description": "Height of the power system",
          "type": "number"
        },
        "id": {
          "description": "Unique identifier for the power system (auto-generated)",
          "type": "integer",
          "format": "int64"
        },
        "length": {
          "description": "Length of the power system",
          "type": "number"
        },
        "max_operating_temperature": {
          "description": "Maximum operating temperature in degrees Celsius",
          "type": "number"
        },
        "max_system_bus_voltage_output_channels": {
          "description": "System bus voltage for output channels",
          "type": "number"
        },
        "mechanical_shock": {
          "description": "Mechanical shock value",
          "type": "integer"
        },
        "mechanical_vibration": {
          "description": "Mechanical vibration value",
          "type": "integer"
        },
        "min_operating_temperature": {
          "description": "Minimum operating temperature in degrees Celsius",
          "type": "number"
        },
        "min_system_bus_voltage_output_channels": {
          "description": "System bus voltage for output channels",
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "output_channels": {
          "description": "Number of output channels",
          "type": "integer"
        },
        "solar_panel_channels": {
          "description": "Number of solar panel channels",
          "type": "integer"
        },
        "solar_panel_current_per_channel_max": {
          "description": "Maximum current per solar panel channel",
          "type": "number"
        },
        "solar_panel_voltage_max": {
          "description": "Maximum voltage of the solar panels",
          "type": "number"
        },
        "solar_panel_voltage_min": {
          "description": "Minimum voltage of the solar panels",
          "type": "number"
        },
        "solar_panels_type": {
          "description": "Type of solar panels used",
          "type": "string"
        },
        "system_bus_voltage_solar_panels": {
          "description": "System bus voltage for solar panels",
          "type": "number"
        },
        "total_current_of_solar_panels_max": {
          "description": "Maximum total current of solar panels",
          "type": "number"
        },
        "total_output_current": {
          "description": "Total output current",
          "type": "number"
        },
        "updated_at": {
          "description": "Timestamp of the last update",
          "type": "integer"
        },
        "weight": {
          "description": "Weight of the power system",
          "type": "number"
        },
        "width": {
          "description": "Width of the power system",
          "type": "number"
        }
      }
    },
    "CubeSatPowerSystems": {
      "type": "object",
      "required": [
        "count"
      ],
      "properties": {
        "count": {
          "type": "integer"
        },
        "cube_sat_power_systems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CubeSatPowerSystem"
          }
        }
      }
    },
    "CubeSatProject": {
      "type": "object",
      "required": [
        "project_name"
      ],
      "properties": {
        "board_computing_module_name": {
          "type": "string"
        },
        "created_at": {
          "type": "integer"
        },
        "frame_name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "power_system_name": {
          "type": "string"
        },
        "project_name": {
          "type": "string"
        },
        "solar_panel_side_name": {
          "type": "string"
        },
        "solar_panel_top_name": {
          "type": "string"
        },
        "updated_at": {
          "type": "integer"
        },
        "user_id": {
          "type": "string"
        },
        "vhf_antenna_system_name": {
          "type": "string"
        },
        "vhf_transceiver_name": {
          "type": "string"
        }
      }
    },
    "CubeSatProjectValidationResult": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationError"
          }
        },
        "is_compatible": {
          "description": "Indicates if the project is compatible",
          "type": "boolean"
        }
      }
    },
    "CubeSatProjects": {
      "type": "object",
      "required": [
        "count"
      ],
      "properties": {
        "count": {
          "type": "integer"
        },
        "projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CubeSatProject"
          }
        }
      }
    },
    "CubeSatSolarPanelsSide": {
      "type": "object",
      "required": [
        "count"
      ],
      "properties": {
        "count": {
          "type": "integer"
        },
        "cube_sat_solar_panels_side": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarPanelSide"
          }
        }
      }
    },
    "CubeSatSolarPanelsTop": {
      "type": "object",
      "required": [
        "count"
      ],
      "properties": {
        "count": {
          "type": "integer"
        },
        "cube_sat_solar_panels_top": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolarPanelTop"
          }
        }
      }
    },
    "CubeSatVHFTransceivers": {
      "type": "object",
      "required": [
        "count"
      ],
      "properties": {
        "count": {
          "type": "integer"
        },
        "vhf_transceivers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VHFTransceiver"
          }
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "LoginAdmin": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "LoginResponse": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string"
        }
      }
    },
    "LoginUser": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Principal": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "role": {
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "RegisterUser": {
      "type": "object",
      "required": [
        "email",
        "name",
        "password",
        "again_password"
      ],
      "properties": {
        "again_password": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "ResponseMsg": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "SolarPanelSide": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "coil_area": {
          "description": "Number of axes",
          "type": "number"
        },
        "coil_resistance": {
          "description": "Shock response spectrum value",
          "type": "integer"
        },
        "created_at": {
          "description": "Timestamp of creation",
          "type": "integer"
        },
        "efficiency": {
          "description": "Minimum random vibration",
          "type": "integer"
        },
        "height": {
          "description": "Size of the chassis",
          "type": "number"
        },
        "id": {
          "description": "Unique identifier for the chassis (auto-generated)",
          "type": "integer",
          "format": "int64"
        },
        "imp": {
          "description": "Maximum random vibration",
          "type": "number"
        },
        "interface": {
          "description": "Minimum non-operating temperature in degrees Celsius",
          "type": "string"
        },
        "isc": {
          "description": "Maximum sine vibration",
          "type": "number"
        },
        "length": {
          "description": "Name of the chassis",
          "type": "number"
        },
        "max_operating_temperature": {
          "description": "Maximum operating temperature in degrees Celsius",
          "type": "number"
        },
        "mechanical_shock": {
          "description": "Peak overload spectrum value 2",
          "type": "integer"
        },
        "mechanical_vibration": {
          "description": "Peak overload spectrum value 1",
          "type": "integer"
        },
        "min_operating_temperature": {
          "description": "Minimum operating temperature in degrees Celsius",
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "updated_at": {
          "description": "Timestamp of the last update",
          "type": "integer"
        },
        "vmp": {
          "description": "Minimum sine vibration",
          "type": "number"
        },
        "voc": {
          "description": "Overload capacity",
          "type": "number"
        },
        "weight": {
          "description": "Maximum non-operating temperature in degrees Celsius",
          "type": "number"
        },
        "width": {
          "description": "Number of slots in the chassis",
          "type": "number"
        }
      }
    },
    "SolarPanelTop": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "coil_area": {
          "description": "Area of the coil",
          "type": "number"
        },
        "coil_resistance": {
          "description": "Coil resistance value",
          "type": "number"
        },
        "created_at": {
          "description": "Timestamp of creation",
          "type": "integer"
        },
        "efficiency": {
          "description": "Efficiency percentage",
          "type": "number"
        },
        "height": {
          "description": "Height of the solar panel top",
          "type": "number"
        },
        "id": {
          "description": "Unique identifier for the solar panel top (auto-generated)",
          "type": "integer",
          "format": "int64"
        },
        "imp": {
          "description": "Current at maximum power",
          "type": "number"
        },
        "interface": {
          "description": "Interface type of the solar panel top",
          "type": "string"
        },
        "isc": {
          "description": "Short circuit current",
          "type": "number"
        },
        "length": {
          "description": "Length of the solar panel top",
          "type": "number"
        },
        "max_operating_temperature": {
          "description": "Maximum operating temperature in degrees Celsius",
          "type": "number"
        },
        "mechanical_shock": {
          "description": "Mechanical shock value",
          "type": "number"
        },
        "mechanical_vibration": {
          "description": "Mechanical vibration value",
          "type": "number"
        },
        "min_operating_temperature": {
          "description": "Minimum operating temperature in degrees Celsius",
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "updated_at": {
          "description": "Timestamp of the last update",
          "type": "integer"
        },
        "vmp": {
          "description": "Voltage at maximum power",
          "type": "number"
        },
        "voc": {
          "description": "Open circuit voltage",
          "type": "number"
        },
        "weight": {
          "description": "Weight of the solar panel top",
          "type": "number"
        },
        "width": {
          "description": "Width of the solar panel top",
          "type": "number"
        }
      }
    },
    "UpdateBoardComputingModuleBody": {
      "type": "object",
      "properties": {
        "data_bus": {
          "type": "string"
        },
        "height": {
          "description": "Height in meters",
          "type": "number"
        },
        "interface": {
          "description": "Communication interface",
          "type": "string"
        },
        "length": {
          "description": "Length in meters",
          "type": "number"
        },
        "max_operating_temperature": {
          "description": "Maximum operating temperature in Celsius",
          "type": "number"
        },
        "max_supply_voltage": {
          "description": "Supply voltage in volts",
          "type": "number"
        },
        "mechanical_shock": {
          "description": "Mechanical shock rating",
          "type": "integer",
          "format": "int64"
        },
        "mechanical_vibration": {
          "description": "Mechanical vibration rating",
          "type": "integer",
          "format": "int64"
        },
        "min_operating_temperature": {
          "description": "Minimum operating temperature in Celsius",
          "type": "number"
        },
        "min_supply_voltage": {
          "description": "Supply voltage in volts",
          "type": "number"
        },
        "name": {
          "description": "Name of the Board Computing Module",
          "type": "string"
        },
        "power_consumption": {
          "description": "Power consumption in watts",
          "type": "number"
        },
        "weight": {
          "description": "Weight in kilograms",
          "type": "number"
        },
        "width": {
          "description": "Width in meters",
          "type": "number"
        }
      }
    },
    "UpdateCubeSatProjectBody": {
      "type": "object",
      "required": [
        "project_name"
      ],
      "properties": {
        "project_name": {
          "type": "string"
        },
        "size": {
          "type": "integer"
        }
      }
    },
    "UpdatePowerSystemBody": {
      "type": "object",
      "required": [
        "length",
        "width",
        "height"
      ],
      "properties": {
        "current_output_channels_max": {
          "type": "number"
        },
        "data_interface": {
          "type": "string"
        },
        "height": {
          "type": "number"
        },
        "length": {
          "type": "number"
        },
        "max_operating_temperature": {
          "type": "number"
        },
        "max_system_bus_voltage_output_channels": {
          "description": "System bus voltage for output channels",
          "type": "number"
        },
        "mechanical_shock": {
          "type": "integer"
        },
        "mechanical_vibration": {
          "type": "integer"
        },
        "min_operating_temperature": {
          "type": "number"
        },
        "min_system_bus_voltage_output_channels": {
          "description": "System bus voltage for output channels",
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "output_channels": {
          "type": "integer"
        },
        "solar_panel_channels": {
          "type": "integer"
        },
        "solar_panel_current_per_channel_max": {
          "type": "number"
        },
        "solar_panel_voltage_max": {
          "type": "number"
        },
        "solar_panel_voltage_min": {
          "type": "number"
        },
        "solar_panels_type": {
          "type": "string"
        },
        "system_bus_voltage_solar_panels": {
          "type": "number"
        },
        "total_current_of_solar_panels_max": {
          "type": "number"
        },
        "total_output_current": {
          "type": "number"
        },
        "weight": {
          "type": "number"
        },
        "width": {
          "type": "number"
        }
      }
    },
    "UpdateSolarPanelSideBody": {
      "type": "object",
      "required": [
        "length",
        "width",
        "height"
      ],
      "properties": {
        "coil_area": {
          "type": "number"
        },
        "coil_resistance": {
          "type": "integer"
        },
        "efficiency": {
          "type": "integer"
        },
        "height": {
          "type": "number"
        },
        "imp": {
          "type": "number"
        },
        "interface": {
          "type": "string"
        },
        "isc": {
          "type": "number"
        },
        "length": {
          "type": "number"
        },
        "max_operating_temperature": {
          "type": "number"
        },
        "mechanical_shock": {
          "type": "integer"
        },
        "mechanical_vibration": {
          "type": "integer"
        },
        "min_operating_temperature": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "vmp": {
          "type": "number"
        },
        "voc": {
          "type": "number"
        },
        "weight": {
          "type": "number"
        },
        "width": {
          "type": "number"
        }
      }
    },
    "UpdateSolarPanelTopBody": {
      "type": "object",
      "required": [
        "length",
        "width",
        "height"
      ],
      "properties": {
        "coil_area": {
          "type": "number"
        },
        "coil_resistance": {
          "type": "number"
        },
        "efficiency": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "imp": {
          "type": "number"
        },
        "interface": {
          "type": "string"
        },
        "isc": {
          "type": "number"
        },
        "length": {
          "type": "number"
        },
        "max_operating_temperature": {
          "type": "number"
        },
        "mechanical_shock": {
          "type": "number"
        },
        "mechanical_vibration": {
          "type": "number"
        },
        "min_operating_temperature": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "vmp": {
          "type": "number"
        },
        "voc": {
          "type": "number"
        },
        "weight": {
          "type": "number"
        },
        "width": {
          "type": "number"
        }
      }
    },
    "UpdateVHFAntennaSystemBody": {
      "type": "object",
      "properties": {
        "frequency": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "interface": {
          "type": "string"
        },
        "length": {
          "type": "number"
        },
        "max_operating_temperature": {
          "type": "number"
        },
        "mechanical_shock": {
          "type": "integer"
        },
        "mechanical_vibration": {
          "type": "integer"
        },
        "min_operating_temperature": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "weight": {
          "type": "number"
        },
        "width": {
          "type": "number"
        }
      }
    },
    "UpdateVHFTransceiverBody": {
      "type": "object",
      "properties": {
        "height": {
          "type": "number"
        },
        "interface": {
          "type": "string"
        },
        "length": {
          "type": "number"
        },
        "max_operating_temperature": {
          "type": "number"
        },
        "mechanical_shock": {
          "type": "integer"
        },
        "mechanical_vibration": {
          "type": "integer"
        },
        "min_operating_temperature": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "operating_frequency": {
          "type": "number"
        },
        "output_power": {
          "type": "number"
        },
        "power_consumption": {
          "type": "number"
        },
        "sensitivity_receiver": {
          "type": "number"
        },
        "supply_voltage": {
          "type": "number"
        },
        "weight": {
          "type": "number"
        },
        "width": {
          "type": "number"
        }
      }
    },
    "UrlResponse": {
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "created_at": {
          "type": "integer"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "updated_at": {
          "type": "integer"
        }
      }
    },
    "VHFAntennaSystem": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "integer"
        },
        "frequency": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "id": {
          "type": "integer"
        },
        "interface": {
          "type": "string"
        },
        "length": {
          "type": "number"
        },
        "max_operating_temperature": {
          "type": "number"
        },
        "mechanical_shock": {
          "type": "integer"
        },
        "mechanical_vibration": {
          "type": "integer"
        },
        "min_operating_temperature": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "updated_at": {
          "type": "integer"
        },
        "weight": {
          "type": "number"
        },
        "width": {
          "type": "number"
        }
      }
    },
    "VHFAntennaSystems": {
      "type": "object",
      "required": [
        "count"
      ],
      "properties": {
        "count": {
          "type": "integer"
        },
        "vhf_antenna_system": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VHFAntennaSystem"
          }
        }
      }
    },
    "VHFTransceiver": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "integer"
        },
        "height": {
          "type": "number"
        },
        "id": {
          "type": "integer"
        },
        "interface": {
          "type": "string"
        },
        "length": {
          "type": "number"
        },
        "max_operating_temperature": {
          "type": "number"
        },
        "mechanical_shock": {
          "type": "integer"
        },
        "mechanical_vibration": {
          "type": "integer"
        },
        "min_operating_temperature": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "operating_frequency": {
          "type": "number"
        },
        "output_power": {
          "type": "number"
        },
        "power_consumption": {
          "type": "number"
        },
        "sensitivity_receiver": {
          "type": "number"
        },
        "supply_voltage": {
          "type": "number"
        },
        "updated_at": {
          "type": "integer"
        },
        "weight": {
          "type": "number"
        },
        "width": {
          "type": "number"
        }
      }
    },
    "ValidationError": {
      "type": "object",
      "properties": {
        "detail_type": {
          "description": "The type of detail causing the error (e.g., \"solar_panel_side\")",
          "type": "string"
        },
        "message": {
          "description": "A description of the validation error",
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
}
