// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Space VPX WebSite Backend Service",
    "title": "Space VPX Backend Service",
    "version": "development"
  },
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login User",
        "operationId": "LoginUser",
        "parameters": [
          {
            "description": "Login User Body",
            "name": "LoginUser",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login Response",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register User",
        "operationId": "RegisterUser",
        "parameters": [
          {
            "description": "Register User Body",
            "name": "RegisterUser",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Register Response",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/project": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Project"
        ],
        "summary": "Create project",
        "operationId": "CreateProject",
        "parameters": [
          {
            "description": "Create Project Body",
            "name": "CreateProject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateProjectBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create Project Response",
            "schema": {
              "$ref": "#/definitions/CreateProjectResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/project/{id}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Project"
        ],
        "summary": "Get project",
        "operationId": "GetProject",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the project to retrieve",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get Project Response",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Project"
        ],
        "summary": "Delete project",
        "operationId": "DeleteProject",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the project to retrieve",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Project Response",
            "schema": {
              "$ref": "#/definitions/CreateProjectResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Project"
        ],
        "summary": "Update project",
        "operationId": "UpdateProject",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the project to retrieve",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Update Project Body",
            "name": "UpdateProjectBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProjectBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update Project Response",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/projects/user_projects": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Project"
        ],
        "summary": "Get user projects",
        "operationId": "GetUserProjects",
        "parameters": [
          {
            "type": "integer",
            "description": "Offset Configs",
            "name": "offset",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "Offset Configs",
            "name": "limit",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "created_at",
              "updated_at"
            ],
            "type": "string",
            "description": "sort parametrs",
            "name": "sort[field]",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Get User Project Response",
            "schema": {
              "$ref": "#/definitions/Projects"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/get_me": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "User"
        ],
        "summary": "Get user me",
        "operationId": "GetUserMe",
        "responses": {
          "200": {
            "description": "Get User Me Response",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CallBackResponse": {
      "type": "object",
      "required": [
        "balance"
      ],
      "properties": {
        "balance": {
          "type": "number"
        },
        "error_code": {
          "type": "string"
        },
        "error_description": {
          "type": "string"
        },
        "rollback_transactions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "transaction_id": {
          "type": "string"
        }
      }
    },
    "CreateProjectBody": {
      "type": "object",
      "required": [
        "project_name"
      ],
      "properties": {
        "project_name": {
          "type": "string"
        }
      }
    },
    "CreateProjectResponse": {
      "type": "object",
      "required": [
        "project_id"
      ],
      "properties": {
        "project_id": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "LoginResponse": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string"
        }
      }
    },
    "LoginUser": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Principal": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "role": {
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "Project": {
      "type": "object",
      "required": [
        "project_name"
      ],
      "properties": {
        "created_at": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "project_name": {
          "type": "string"
        },
        "updated_at": {
          "type": "integer"
        },
        "user_id": {
          "type": "string"
        }
      }
    },
    "Projects": {
      "type": "object",
      "required": [
        "count"
      ],
      "properties": {
        "count": {
          "type": "integer"
        },
        "projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Project"
          }
        }
      }
    },
    "RegisterUser": {
      "type": "object",
      "required": [
        "email",
        "name",
        "password",
        "again_password"
      ],
      "properties": {
        "again_password": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "ResponseMsg": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "UpdateProjectBody": {
      "type": "object",
      "required": [
        "project_name"
      ],
      "properties": {
        "project_name": {
          "type": "string"
        }
      }
    },
    "UrlResponse": {
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "created_at": {
          "type": "integer"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "updated_at": {
          "type": "integer"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Space VPX WebSite Backend Service",
    "title": "Space VPX Backend Service",
    "version": "development"
  },
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login User",
        "operationId": "LoginUser",
        "parameters": [
          {
            "description": "Login User Body",
            "name": "LoginUser",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login Response",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register User",
        "operationId": "RegisterUser",
        "parameters": [
          {
            "description": "Register User Body",
            "name": "RegisterUser",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Register Response",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/project": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Project"
        ],
        "summary": "Create project",
        "operationId": "CreateProject",
        "parameters": [
          {
            "description": "Create Project Body",
            "name": "CreateProject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateProjectBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create Project Response",
            "schema": {
              "$ref": "#/definitions/CreateProjectResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/project/{id}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Project"
        ],
        "summary": "Get project",
        "operationId": "GetProject",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the project to retrieve",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get Project Response",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Project"
        ],
        "summary": "Delete project",
        "operationId": "DeleteProject",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the project to retrieve",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Project Response",
            "schema": {
              "$ref": "#/definitions/CreateProjectResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Project"
        ],
        "summary": "Update project",
        "operationId": "UpdateProject",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the project to retrieve",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Update Project Body",
            "name": "UpdateProjectBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProjectBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update Project Response",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/projects/user_projects": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Project"
        ],
        "summary": "Get user projects",
        "operationId": "GetUserProjects",
        "parameters": [
          {
            "minimum": 0,
            "type": "integer",
            "description": "Offset Configs",
            "name": "offset",
            "in": "query",
            "required": true
          },
          {
            "minimum": 0,
            "type": "integer",
            "description": "Offset Configs",
            "name": "limit",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "created_at",
              "updated_at"
            ],
            "type": "string",
            "description": "sort parametrs",
            "name": "sort[field]",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Get User Project Response",
            "schema": {
              "$ref": "#/definitions/Projects"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/get_me": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "User"
        ],
        "summary": "Get user me",
        "operationId": "GetUserMe",
        "responses": {
          "200": {
            "description": "Get User Me Response",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CallBackResponse": {
      "type": "object",
      "required": [
        "balance"
      ],
      "properties": {
        "balance": {
          "type": "number"
        },
        "error_code": {
          "type": "string"
        },
        "error_description": {
          "type": "string"
        },
        "rollback_transactions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "transaction_id": {
          "type": "string"
        }
      }
    },
    "CreateProjectBody": {
      "type": "object",
      "required": [
        "project_name"
      ],
      "properties": {
        "project_name": {
          "type": "string"
        }
      }
    },
    "CreateProjectResponse": {
      "type": "object",
      "required": [
        "project_id"
      ],
      "properties": {
        "project_id": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "LoginResponse": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string"
        }
      }
    },
    "LoginUser": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Principal": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "role": {
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "Project": {
      "type": "object",
      "required": [
        "project_name"
      ],
      "properties": {
        "created_at": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "project_name": {
          "type": "string"
        },
        "updated_at": {
          "type": "integer"
        },
        "user_id": {
          "type": "string"
        }
      }
    },
    "Projects": {
      "type": "object",
      "required": [
        "count"
      ],
      "properties": {
        "count": {
          "type": "integer"
        },
        "projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Project"
          }
        }
      }
    },
    "RegisterUser": {
      "type": "object",
      "required": [
        "email",
        "name",
        "password",
        "again_password"
      ],
      "properties": {
        "again_password": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "ResponseMsg": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "UpdateProjectBody": {
      "type": "object",
      "required": [
        "project_name"
      ],
      "properties": {
        "project_name": {
          "type": "string"
        }
      }
    },
    "UrlResponse": {
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "created_at": {
          "type": "integer"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "updated_at": {
          "type": "integer"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
}
