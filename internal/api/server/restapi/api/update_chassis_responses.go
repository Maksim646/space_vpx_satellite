// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/Maksim646/space_vpx_satellite/internal/api/definition"
)

// UpdateChassisOKCode is the HTTP code returned for type UpdateChassisOK
const UpdateChassisOKCode int = 200

/*
UpdateChassisOK Update Chassis Response

swagger:response updateChassisOK
*/
type UpdateChassisOK struct {

	/*
	  In: Body
	*/
	Payload *models.Chassis `json:"body,omitempty"`
}

// NewUpdateChassisOK creates UpdateChassisOK with default headers values
func NewUpdateChassisOK() *UpdateChassisOK {

	return &UpdateChassisOK{}
}

// WithPayload adds the payload to the update chassis o k response
func (o *UpdateChassisOK) WithPayload(payload *models.Chassis) *UpdateChassisOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update chassis o k response
func (o *UpdateChassisOK) SetPayload(payload *models.Chassis) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateChassisOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateChassisBadRequestCode is the HTTP code returned for type UpdateChassisBadRequest
const UpdateChassisBadRequestCode int = 400

/*
UpdateChassisBadRequest Bad request

swagger:response updateChassisBadRequest
*/
type UpdateChassisBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateChassisBadRequest creates UpdateChassisBadRequest with default headers values
func NewUpdateChassisBadRequest() *UpdateChassisBadRequest {

	return &UpdateChassisBadRequest{}
}

// WithPayload adds the payload to the update chassis bad request response
func (o *UpdateChassisBadRequest) WithPayload(payload *models.Error) *UpdateChassisBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update chassis bad request response
func (o *UpdateChassisBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateChassisBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateChassisForbiddenCode is the HTTP code returned for type UpdateChassisForbidden
const UpdateChassisForbiddenCode int = 403

/*
UpdateChassisForbidden Forbidden

swagger:response updateChassisForbidden
*/
type UpdateChassisForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateChassisForbidden creates UpdateChassisForbidden with default headers values
func NewUpdateChassisForbidden() *UpdateChassisForbidden {

	return &UpdateChassisForbidden{}
}

// WithPayload adds the payload to the update chassis forbidden response
func (o *UpdateChassisForbidden) WithPayload(payload *models.Error) *UpdateChassisForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update chassis forbidden response
func (o *UpdateChassisForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateChassisForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateChassisUnprocessableEntityCode is the HTTP code returned for type UpdateChassisUnprocessableEntity
const UpdateChassisUnprocessableEntityCode int = 422

/*
UpdateChassisUnprocessableEntity Unprocessable Entity

swagger:response updateChassisUnprocessableEntity
*/
type UpdateChassisUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateChassisUnprocessableEntity creates UpdateChassisUnprocessableEntity with default headers values
func NewUpdateChassisUnprocessableEntity() *UpdateChassisUnprocessableEntity {

	return &UpdateChassisUnprocessableEntity{}
}

// WithPayload adds the payload to the update chassis unprocessable entity response
func (o *UpdateChassisUnprocessableEntity) WithPayload(payload *models.Error) *UpdateChassisUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update chassis unprocessable entity response
func (o *UpdateChassisUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateChassisUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateChassisInternalServerErrorCode is the HTTP code returned for type UpdateChassisInternalServerError
const UpdateChassisInternalServerErrorCode int = 500

/*
UpdateChassisInternalServerError Internal server error

swagger:response updateChassisInternalServerError
*/
type UpdateChassisInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateChassisInternalServerError creates UpdateChassisInternalServerError with default headers values
func NewUpdateChassisInternalServerError() *UpdateChassisInternalServerError {

	return &UpdateChassisInternalServerError{}
}

// WithPayload adds the payload to the update chassis internal server error response
func (o *UpdateChassisInternalServerError) WithPayload(payload *models.Error) *UpdateChassisInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update chassis internal server error response
func (o *UpdateChassisInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateChassisInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
