// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/Maksim646/space_vpx_satellite/internal/api/definition"
)

// UpdateChassisVPXOKCode is the HTTP code returned for type UpdateChassisVPXOK
const UpdateChassisVPXOKCode int = 200

/*
UpdateChassisVPXOK Update Chassis VPX Response

swagger:response updateChassisVPXOK
*/
type UpdateChassisVPXOK struct {

	/*
	  In: Body
	*/
	Payload *models.ChassisVPX `json:"body,omitempty"`
}

// NewUpdateChassisVPXOK creates UpdateChassisVPXOK with default headers values
func NewUpdateChassisVPXOK() *UpdateChassisVPXOK {

	return &UpdateChassisVPXOK{}
}

// WithPayload adds the payload to the update chassis v p x o k response
func (o *UpdateChassisVPXOK) WithPayload(payload *models.ChassisVPX) *UpdateChassisVPXOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update chassis v p x o k response
func (o *UpdateChassisVPXOK) SetPayload(payload *models.ChassisVPX) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateChassisVPXOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateChassisVPXBadRequestCode is the HTTP code returned for type UpdateChassisVPXBadRequest
const UpdateChassisVPXBadRequestCode int = 400

/*
UpdateChassisVPXBadRequest Bad request

swagger:response updateChassisVPXBadRequest
*/
type UpdateChassisVPXBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateChassisVPXBadRequest creates UpdateChassisVPXBadRequest with default headers values
func NewUpdateChassisVPXBadRequest() *UpdateChassisVPXBadRequest {

	return &UpdateChassisVPXBadRequest{}
}

// WithPayload adds the payload to the update chassis v p x bad request response
func (o *UpdateChassisVPXBadRequest) WithPayload(payload *models.Error) *UpdateChassisVPXBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update chassis v p x bad request response
func (o *UpdateChassisVPXBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateChassisVPXBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateChassisVPXForbiddenCode is the HTTP code returned for type UpdateChassisVPXForbidden
const UpdateChassisVPXForbiddenCode int = 403

/*
UpdateChassisVPXForbidden Forbidden

swagger:response updateChassisVPXForbidden
*/
type UpdateChassisVPXForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateChassisVPXForbidden creates UpdateChassisVPXForbidden with default headers values
func NewUpdateChassisVPXForbidden() *UpdateChassisVPXForbidden {

	return &UpdateChassisVPXForbidden{}
}

// WithPayload adds the payload to the update chassis v p x forbidden response
func (o *UpdateChassisVPXForbidden) WithPayload(payload *models.Error) *UpdateChassisVPXForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update chassis v p x forbidden response
func (o *UpdateChassisVPXForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateChassisVPXForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateChassisVPXUnprocessableEntityCode is the HTTP code returned for type UpdateChassisVPXUnprocessableEntity
const UpdateChassisVPXUnprocessableEntityCode int = 422

/*
UpdateChassisVPXUnprocessableEntity Unprocessable Entity

swagger:response updateChassisVPXUnprocessableEntity
*/
type UpdateChassisVPXUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateChassisVPXUnprocessableEntity creates UpdateChassisVPXUnprocessableEntity with default headers values
func NewUpdateChassisVPXUnprocessableEntity() *UpdateChassisVPXUnprocessableEntity {

	return &UpdateChassisVPXUnprocessableEntity{}
}

// WithPayload adds the payload to the update chassis v p x unprocessable entity response
func (o *UpdateChassisVPXUnprocessableEntity) WithPayload(payload *models.Error) *UpdateChassisVPXUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update chassis v p x unprocessable entity response
func (o *UpdateChassisVPXUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateChassisVPXUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateChassisVPXInternalServerErrorCode is the HTTP code returned for type UpdateChassisVPXInternalServerError
const UpdateChassisVPXInternalServerErrorCode int = 500

/*
UpdateChassisVPXInternalServerError Internal server error

swagger:response updateChassisVPXInternalServerError
*/
type UpdateChassisVPXInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateChassisVPXInternalServerError creates UpdateChassisVPXInternalServerError with default headers values
func NewUpdateChassisVPXInternalServerError() *UpdateChassisVPXInternalServerError {

	return &UpdateChassisVPXInternalServerError{}
}

// WithPayload adds the payload to the update chassis v p x internal server error response
func (o *UpdateChassisVPXInternalServerError) WithPayload(payload *models.Error) *UpdateChassisVPXInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update chassis v p x internal server error response
func (o *UpdateChassisVPXInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateChassisVPXInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
