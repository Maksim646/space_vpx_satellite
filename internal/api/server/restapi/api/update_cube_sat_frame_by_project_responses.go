// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/Maksim646/space_vpx_satellite/internal/api/definition"
)

// UpdateCubeSatFrameByProjectOKCode is the HTTP code returned for type UpdateCubeSatFrameByProjectOK
const UpdateCubeSatFrameByProjectOKCode int = 200

/*
UpdateCubeSatFrameByProjectOK Successfully updated Frame

swagger:response updateCubeSatFrameByProjectOK
*/
type UpdateCubeSatFrameByProjectOK struct {

	/*
	  In: Body
	*/
	Payload *models.CubeSatProject `json:"body,omitempty"`
}

// NewUpdateCubeSatFrameByProjectOK creates UpdateCubeSatFrameByProjectOK with default headers values
func NewUpdateCubeSatFrameByProjectOK() *UpdateCubeSatFrameByProjectOK {

	return &UpdateCubeSatFrameByProjectOK{}
}

// WithPayload adds the payload to the update cube sat frame by project o k response
func (o *UpdateCubeSatFrameByProjectOK) WithPayload(payload *models.CubeSatProject) *UpdateCubeSatFrameByProjectOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update cube sat frame by project o k response
func (o *UpdateCubeSatFrameByProjectOK) SetPayload(payload *models.CubeSatProject) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCubeSatFrameByProjectOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateCubeSatFrameByProjectBadRequestCode is the HTTP code returned for type UpdateCubeSatFrameByProjectBadRequest
const UpdateCubeSatFrameByProjectBadRequestCode int = 400

/*
UpdateCubeSatFrameByProjectBadRequest Bad request (e.g., invalid input)

swagger:response updateCubeSatFrameByProjectBadRequest
*/
type UpdateCubeSatFrameByProjectBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateCubeSatFrameByProjectBadRequest creates UpdateCubeSatFrameByProjectBadRequest with default headers values
func NewUpdateCubeSatFrameByProjectBadRequest() *UpdateCubeSatFrameByProjectBadRequest {

	return &UpdateCubeSatFrameByProjectBadRequest{}
}

// WithPayload adds the payload to the update cube sat frame by project bad request response
func (o *UpdateCubeSatFrameByProjectBadRequest) WithPayload(payload *models.Error) *UpdateCubeSatFrameByProjectBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update cube sat frame by project bad request response
func (o *UpdateCubeSatFrameByProjectBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCubeSatFrameByProjectBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateCubeSatFrameByProjectUnauthorizedCode is the HTTP code returned for type UpdateCubeSatFrameByProjectUnauthorized
const UpdateCubeSatFrameByProjectUnauthorizedCode int = 401

/*
UpdateCubeSatFrameByProjectUnauthorized Unauthorized

swagger:response updateCubeSatFrameByProjectUnauthorized
*/
type UpdateCubeSatFrameByProjectUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateCubeSatFrameByProjectUnauthorized creates UpdateCubeSatFrameByProjectUnauthorized with default headers values
func NewUpdateCubeSatFrameByProjectUnauthorized() *UpdateCubeSatFrameByProjectUnauthorized {

	return &UpdateCubeSatFrameByProjectUnauthorized{}
}

// WithPayload adds the payload to the update cube sat frame by project unauthorized response
func (o *UpdateCubeSatFrameByProjectUnauthorized) WithPayload(payload *models.Error) *UpdateCubeSatFrameByProjectUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update cube sat frame by project unauthorized response
func (o *UpdateCubeSatFrameByProjectUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCubeSatFrameByProjectUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateCubeSatFrameByProjectForbiddenCode is the HTTP code returned for type UpdateCubeSatFrameByProjectForbidden
const UpdateCubeSatFrameByProjectForbiddenCode int = 403

/*
UpdateCubeSatFrameByProjectForbidden Forbidden

swagger:response updateCubeSatFrameByProjectForbidden
*/
type UpdateCubeSatFrameByProjectForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateCubeSatFrameByProjectForbidden creates UpdateCubeSatFrameByProjectForbidden with default headers values
func NewUpdateCubeSatFrameByProjectForbidden() *UpdateCubeSatFrameByProjectForbidden {

	return &UpdateCubeSatFrameByProjectForbidden{}
}

// WithPayload adds the payload to the update cube sat frame by project forbidden response
func (o *UpdateCubeSatFrameByProjectForbidden) WithPayload(payload *models.Error) *UpdateCubeSatFrameByProjectForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update cube sat frame by project forbidden response
func (o *UpdateCubeSatFrameByProjectForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCubeSatFrameByProjectForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateCubeSatFrameByProjectNotFoundCode is the HTTP code returned for type UpdateCubeSatFrameByProjectNotFound
const UpdateCubeSatFrameByProjectNotFoundCode int = 404

/*
UpdateCubeSatFrameByProjectNotFound Project not found

swagger:response updateCubeSatFrameByProjectNotFound
*/
type UpdateCubeSatFrameByProjectNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateCubeSatFrameByProjectNotFound creates UpdateCubeSatFrameByProjectNotFound with default headers values
func NewUpdateCubeSatFrameByProjectNotFound() *UpdateCubeSatFrameByProjectNotFound {

	return &UpdateCubeSatFrameByProjectNotFound{}
}

// WithPayload adds the payload to the update cube sat frame by project not found response
func (o *UpdateCubeSatFrameByProjectNotFound) WithPayload(payload *models.Error) *UpdateCubeSatFrameByProjectNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update cube sat frame by project not found response
func (o *UpdateCubeSatFrameByProjectNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCubeSatFrameByProjectNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateCubeSatFrameByProjectUnprocessableEntityCode is the HTTP code returned for type UpdateCubeSatFrameByProjectUnprocessableEntity
const UpdateCubeSatFrameByProjectUnprocessableEntityCode int = 422

/*
UpdateCubeSatFrameByProjectUnprocessableEntity Unprocessable Entity (e.g., validation errors)

swagger:response updateCubeSatFrameByProjectUnprocessableEntity
*/
type UpdateCubeSatFrameByProjectUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateCubeSatFrameByProjectUnprocessableEntity creates UpdateCubeSatFrameByProjectUnprocessableEntity with default headers values
func NewUpdateCubeSatFrameByProjectUnprocessableEntity() *UpdateCubeSatFrameByProjectUnprocessableEntity {

	return &UpdateCubeSatFrameByProjectUnprocessableEntity{}
}

// WithPayload adds the payload to the update cube sat frame by project unprocessable entity response
func (o *UpdateCubeSatFrameByProjectUnprocessableEntity) WithPayload(payload *models.Error) *UpdateCubeSatFrameByProjectUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update cube sat frame by project unprocessable entity response
func (o *UpdateCubeSatFrameByProjectUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCubeSatFrameByProjectUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateCubeSatFrameByProjectInternalServerErrorCode is the HTTP code returned for type UpdateCubeSatFrameByProjectInternalServerError
const UpdateCubeSatFrameByProjectInternalServerErrorCode int = 500

/*
UpdateCubeSatFrameByProjectInternalServerError Internal server error

swagger:response updateCubeSatFrameByProjectInternalServerError
*/
type UpdateCubeSatFrameByProjectInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateCubeSatFrameByProjectInternalServerError creates UpdateCubeSatFrameByProjectInternalServerError with default headers values
func NewUpdateCubeSatFrameByProjectInternalServerError() *UpdateCubeSatFrameByProjectInternalServerError {

	return &UpdateCubeSatFrameByProjectInternalServerError{}
}

// WithPayload adds the payload to the update cube sat frame by project internal server error response
func (o *UpdateCubeSatFrameByProjectInternalServerError) WithPayload(payload *models.Error) *UpdateCubeSatFrameByProjectInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update cube sat frame by project internal server error response
func (o *UpdateCubeSatFrameByProjectInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCubeSatFrameByProjectInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
