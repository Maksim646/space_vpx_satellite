// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/Maksim646/space_vpx_satellite/internal/api/definition"
)

// GetUserProjectsOKCode is the HTTP code returned for type GetUserProjectsOK
const GetUserProjectsOKCode int = 200

/*
GetUserProjectsOK Get User Project Response

swagger:response getUserProjectsOK
*/
type GetUserProjectsOK struct {

	/*
	  In: Body
	*/
	Payload *models.Projects `json:"body,omitempty"`
}

// NewGetUserProjectsOK creates GetUserProjectsOK with default headers values
func NewGetUserProjectsOK() *GetUserProjectsOK {

	return &GetUserProjectsOK{}
}

// WithPayload adds the payload to the get user projects o k response
func (o *GetUserProjectsOK) WithPayload(payload *models.Projects) *GetUserProjectsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get user projects o k response
func (o *GetUserProjectsOK) SetPayload(payload *models.Projects) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUserProjectsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUserProjectsBadRequestCode is the HTTP code returned for type GetUserProjectsBadRequest
const GetUserProjectsBadRequestCode int = 400

/*
GetUserProjectsBadRequest Bad request

swagger:response getUserProjectsBadRequest
*/
type GetUserProjectsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUserProjectsBadRequest creates GetUserProjectsBadRequest with default headers values
func NewGetUserProjectsBadRequest() *GetUserProjectsBadRequest {

	return &GetUserProjectsBadRequest{}
}

// WithPayload adds the payload to the get user projects bad request response
func (o *GetUserProjectsBadRequest) WithPayload(payload *models.Error) *GetUserProjectsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get user projects bad request response
func (o *GetUserProjectsBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUserProjectsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUserProjectsForbiddenCode is the HTTP code returned for type GetUserProjectsForbidden
const GetUserProjectsForbiddenCode int = 403

/*
GetUserProjectsForbidden Forbidden

swagger:response getUserProjectsForbidden
*/
type GetUserProjectsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUserProjectsForbidden creates GetUserProjectsForbidden with default headers values
func NewGetUserProjectsForbidden() *GetUserProjectsForbidden {

	return &GetUserProjectsForbidden{}
}

// WithPayload adds the payload to the get user projects forbidden response
func (o *GetUserProjectsForbidden) WithPayload(payload *models.Error) *GetUserProjectsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get user projects forbidden response
func (o *GetUserProjectsForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUserProjectsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUserProjectsUnprocessableEntityCode is the HTTP code returned for type GetUserProjectsUnprocessableEntity
const GetUserProjectsUnprocessableEntityCode int = 422

/*
GetUserProjectsUnprocessableEntity Unprocessable Entity

swagger:response getUserProjectsUnprocessableEntity
*/
type GetUserProjectsUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUserProjectsUnprocessableEntity creates GetUserProjectsUnprocessableEntity with default headers values
func NewGetUserProjectsUnprocessableEntity() *GetUserProjectsUnprocessableEntity {

	return &GetUserProjectsUnprocessableEntity{}
}

// WithPayload adds the payload to the get user projects unprocessable entity response
func (o *GetUserProjectsUnprocessableEntity) WithPayload(payload *models.Error) *GetUserProjectsUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get user projects unprocessable entity response
func (o *GetUserProjectsUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUserProjectsUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUserProjectsInternalServerErrorCode is the HTTP code returned for type GetUserProjectsInternalServerError
const GetUserProjectsInternalServerErrorCode int = 500

/*
GetUserProjectsInternalServerError Internal server error

swagger:response getUserProjectsInternalServerError
*/
type GetUserProjectsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUserProjectsInternalServerError creates GetUserProjectsInternalServerError with default headers values
func NewGetUserProjectsInternalServerError() *GetUserProjectsInternalServerError {

	return &GetUserProjectsInternalServerError{}
}

// WithPayload adds the payload to the get user projects internal server error response
func (o *GetUserProjectsInternalServerError) WithPayload(payload *models.Error) *GetUserProjectsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get user projects internal server error response
func (o *GetUserProjectsInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUserProjectsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
