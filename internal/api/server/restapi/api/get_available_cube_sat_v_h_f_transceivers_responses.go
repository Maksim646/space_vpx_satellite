// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/Maksim646/space_vpx_satellite/internal/api/definition"
)

// GetAvailableCubeSatVHFTransceiversOKCode is the HTTP code returned for type GetAvailableCubeSatVHFTransceiversOK
const GetAvailableCubeSatVHFTransceiversOKCode int = 200

/*
GetAvailableCubeSatVHFTransceiversOK Get Available CubeSat VHF Transceivers Response

swagger:response getAvailableCubeSatVHFTransceiversOK
*/
type GetAvailableCubeSatVHFTransceiversOK struct {

	/*
	  In: Body
	*/
	Payload *models.CubeSatVHFTransceivers `json:"body,omitempty"`
}

// NewGetAvailableCubeSatVHFTransceiversOK creates GetAvailableCubeSatVHFTransceiversOK with default headers values
func NewGetAvailableCubeSatVHFTransceiversOK() *GetAvailableCubeSatVHFTransceiversOK {

	return &GetAvailableCubeSatVHFTransceiversOK{}
}

// WithPayload adds the payload to the get available cube sat v h f transceivers o k response
func (o *GetAvailableCubeSatVHFTransceiversOK) WithPayload(payload *models.CubeSatVHFTransceivers) *GetAvailableCubeSatVHFTransceiversOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get available cube sat v h f transceivers o k response
func (o *GetAvailableCubeSatVHFTransceiversOK) SetPayload(payload *models.CubeSatVHFTransceivers) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAvailableCubeSatVHFTransceiversOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAvailableCubeSatVHFTransceiversBadRequestCode is the HTTP code returned for type GetAvailableCubeSatVHFTransceiversBadRequest
const GetAvailableCubeSatVHFTransceiversBadRequestCode int = 400

/*
GetAvailableCubeSatVHFTransceiversBadRequest Bad request

swagger:response getAvailableCubeSatVHFTransceiversBadRequest
*/
type GetAvailableCubeSatVHFTransceiversBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAvailableCubeSatVHFTransceiversBadRequest creates GetAvailableCubeSatVHFTransceiversBadRequest with default headers values
func NewGetAvailableCubeSatVHFTransceiversBadRequest() *GetAvailableCubeSatVHFTransceiversBadRequest {

	return &GetAvailableCubeSatVHFTransceiversBadRequest{}
}

// WithPayload adds the payload to the get available cube sat v h f transceivers bad request response
func (o *GetAvailableCubeSatVHFTransceiversBadRequest) WithPayload(payload *models.Error) *GetAvailableCubeSatVHFTransceiversBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get available cube sat v h f transceivers bad request response
func (o *GetAvailableCubeSatVHFTransceiversBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAvailableCubeSatVHFTransceiversBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAvailableCubeSatVHFTransceiversForbiddenCode is the HTTP code returned for type GetAvailableCubeSatVHFTransceiversForbidden
const GetAvailableCubeSatVHFTransceiversForbiddenCode int = 403

/*
GetAvailableCubeSatVHFTransceiversForbidden Forbidden

swagger:response getAvailableCubeSatVHFTransceiversForbidden
*/
type GetAvailableCubeSatVHFTransceiversForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAvailableCubeSatVHFTransceiversForbidden creates GetAvailableCubeSatVHFTransceiversForbidden with default headers values
func NewGetAvailableCubeSatVHFTransceiversForbidden() *GetAvailableCubeSatVHFTransceiversForbidden {

	return &GetAvailableCubeSatVHFTransceiversForbidden{}
}

// WithPayload adds the payload to the get available cube sat v h f transceivers forbidden response
func (o *GetAvailableCubeSatVHFTransceiversForbidden) WithPayload(payload *models.Error) *GetAvailableCubeSatVHFTransceiversForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get available cube sat v h f transceivers forbidden response
func (o *GetAvailableCubeSatVHFTransceiversForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAvailableCubeSatVHFTransceiversForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAvailableCubeSatVHFTransceiversUnprocessableEntityCode is the HTTP code returned for type GetAvailableCubeSatVHFTransceiversUnprocessableEntity
const GetAvailableCubeSatVHFTransceiversUnprocessableEntityCode int = 422

/*
GetAvailableCubeSatVHFTransceiversUnprocessableEntity Unprocessable Entity

swagger:response getAvailableCubeSatVHFTransceiversUnprocessableEntity
*/
type GetAvailableCubeSatVHFTransceiversUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAvailableCubeSatVHFTransceiversUnprocessableEntity creates GetAvailableCubeSatVHFTransceiversUnprocessableEntity with default headers values
func NewGetAvailableCubeSatVHFTransceiversUnprocessableEntity() *GetAvailableCubeSatVHFTransceiversUnprocessableEntity {

	return &GetAvailableCubeSatVHFTransceiversUnprocessableEntity{}
}

// WithPayload adds the payload to the get available cube sat v h f transceivers unprocessable entity response
func (o *GetAvailableCubeSatVHFTransceiversUnprocessableEntity) WithPayload(payload *models.Error) *GetAvailableCubeSatVHFTransceiversUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get available cube sat v h f transceivers unprocessable entity response
func (o *GetAvailableCubeSatVHFTransceiversUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAvailableCubeSatVHFTransceiversUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAvailableCubeSatVHFTransceiversInternalServerErrorCode is the HTTP code returned for type GetAvailableCubeSatVHFTransceiversInternalServerError
const GetAvailableCubeSatVHFTransceiversInternalServerErrorCode int = 500

/*
GetAvailableCubeSatVHFTransceiversInternalServerError Internal server error

swagger:response getAvailableCubeSatVHFTransceiversInternalServerError
*/
type GetAvailableCubeSatVHFTransceiversInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAvailableCubeSatVHFTransceiversInternalServerError creates GetAvailableCubeSatVHFTransceiversInternalServerError with default headers values
func NewGetAvailableCubeSatVHFTransceiversInternalServerError() *GetAvailableCubeSatVHFTransceiversInternalServerError {

	return &GetAvailableCubeSatVHFTransceiversInternalServerError{}
}

// WithPayload adds the payload to the get available cube sat v h f transceivers internal server error response
func (o *GetAvailableCubeSatVHFTransceiversInternalServerError) WithPayload(payload *models.Error) *GetAvailableCubeSatVHFTransceiversInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get available cube sat v h f transceivers internal server error response
func (o *GetAvailableCubeSatVHFTransceiversInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAvailableCubeSatVHFTransceiversInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
