// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/Maksim646/space_vpx_satellite/internal/api/definition"
)

// GetSolarPanelTopOKCode is the HTTP code returned for type GetSolarPanelTopOK
const GetSolarPanelTopOKCode int = 200

/*
GetSolarPanelTopOK Get Solar Panel Top Response

swagger:response getSolarPanelTopOK
*/
type GetSolarPanelTopOK struct {

	/*
	  In: Body
	*/
	Payload *models.SolarPanelTop `json:"body,omitempty"`
}

// NewGetSolarPanelTopOK creates GetSolarPanelTopOK with default headers values
func NewGetSolarPanelTopOK() *GetSolarPanelTopOK {

	return &GetSolarPanelTopOK{}
}

// WithPayload adds the payload to the get solar panel top o k response
func (o *GetSolarPanelTopOK) WithPayload(payload *models.SolarPanelTop) *GetSolarPanelTopOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get solar panel top o k response
func (o *GetSolarPanelTopOK) SetPayload(payload *models.SolarPanelTop) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSolarPanelTopOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSolarPanelTopBadRequestCode is the HTTP code returned for type GetSolarPanelTopBadRequest
const GetSolarPanelTopBadRequestCode int = 400

/*
GetSolarPanelTopBadRequest Bad request

swagger:response getSolarPanelTopBadRequest
*/
type GetSolarPanelTopBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSolarPanelTopBadRequest creates GetSolarPanelTopBadRequest with default headers values
func NewGetSolarPanelTopBadRequest() *GetSolarPanelTopBadRequest {

	return &GetSolarPanelTopBadRequest{}
}

// WithPayload adds the payload to the get solar panel top bad request response
func (o *GetSolarPanelTopBadRequest) WithPayload(payload *models.Error) *GetSolarPanelTopBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get solar panel top bad request response
func (o *GetSolarPanelTopBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSolarPanelTopBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSolarPanelTopForbiddenCode is the HTTP code returned for type GetSolarPanelTopForbidden
const GetSolarPanelTopForbiddenCode int = 403

/*
GetSolarPanelTopForbidden Forbidden

swagger:response getSolarPanelTopForbidden
*/
type GetSolarPanelTopForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSolarPanelTopForbidden creates GetSolarPanelTopForbidden with default headers values
func NewGetSolarPanelTopForbidden() *GetSolarPanelTopForbidden {

	return &GetSolarPanelTopForbidden{}
}

// WithPayload adds the payload to the get solar panel top forbidden response
func (o *GetSolarPanelTopForbidden) WithPayload(payload *models.Error) *GetSolarPanelTopForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get solar panel top forbidden response
func (o *GetSolarPanelTopForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSolarPanelTopForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSolarPanelTopUnprocessableEntityCode is the HTTP code returned for type GetSolarPanelTopUnprocessableEntity
const GetSolarPanelTopUnprocessableEntityCode int = 422

/*
GetSolarPanelTopUnprocessableEntity Unprocessable Entity

swagger:response getSolarPanelTopUnprocessableEntity
*/
type GetSolarPanelTopUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSolarPanelTopUnprocessableEntity creates GetSolarPanelTopUnprocessableEntity with default headers values
func NewGetSolarPanelTopUnprocessableEntity() *GetSolarPanelTopUnprocessableEntity {

	return &GetSolarPanelTopUnprocessableEntity{}
}

// WithPayload adds the payload to the get solar panel top unprocessable entity response
func (o *GetSolarPanelTopUnprocessableEntity) WithPayload(payload *models.Error) *GetSolarPanelTopUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get solar panel top unprocessable entity response
func (o *GetSolarPanelTopUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSolarPanelTopUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSolarPanelTopInternalServerErrorCode is the HTTP code returned for type GetSolarPanelTopInternalServerError
const GetSolarPanelTopInternalServerErrorCode int = 500

/*
GetSolarPanelTopInternalServerError Internal server error

swagger:response getSolarPanelTopInternalServerError
*/
type GetSolarPanelTopInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSolarPanelTopInternalServerError creates GetSolarPanelTopInternalServerError with default headers values
func NewGetSolarPanelTopInternalServerError() *GetSolarPanelTopInternalServerError {

	return &GetSolarPanelTopInternalServerError{}
}

// WithPayload adds the payload to the get solar panel top internal server error response
func (o *GetSolarPanelTopInternalServerError) WithPayload(payload *models.Error) *GetSolarPanelTopInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get solar panel top internal server error response
func (o *GetSolarPanelTopInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSolarPanelTopInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
