// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/Maksim646/space_vpx_satellite/internal/api/definition"
)

// UpdateCubeSatFrameOKCode is the HTTP code returned for type UpdateCubeSatFrameOK
const UpdateCubeSatFrameOKCode int = 200

/*
UpdateCubeSatFrameOK Update CubeSat Frame Response

swagger:response updateCubeSatFrameOK
*/
type UpdateCubeSatFrameOK struct {

	/*
	  In: Body
	*/
	Payload *models.CubeSatFrame `json:"body,omitempty"`
}

// NewUpdateCubeSatFrameOK creates UpdateCubeSatFrameOK with default headers values
func NewUpdateCubeSatFrameOK() *UpdateCubeSatFrameOK {

	return &UpdateCubeSatFrameOK{}
}

// WithPayload adds the payload to the update cube sat frame o k response
func (o *UpdateCubeSatFrameOK) WithPayload(payload *models.CubeSatFrame) *UpdateCubeSatFrameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update cube sat frame o k response
func (o *UpdateCubeSatFrameOK) SetPayload(payload *models.CubeSatFrame) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCubeSatFrameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateCubeSatFrameBadRequestCode is the HTTP code returned for type UpdateCubeSatFrameBadRequest
const UpdateCubeSatFrameBadRequestCode int = 400

/*
UpdateCubeSatFrameBadRequest Bad request

swagger:response updateCubeSatFrameBadRequest
*/
type UpdateCubeSatFrameBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateCubeSatFrameBadRequest creates UpdateCubeSatFrameBadRequest with default headers values
func NewUpdateCubeSatFrameBadRequest() *UpdateCubeSatFrameBadRequest {

	return &UpdateCubeSatFrameBadRequest{}
}

// WithPayload adds the payload to the update cube sat frame bad request response
func (o *UpdateCubeSatFrameBadRequest) WithPayload(payload *models.Error) *UpdateCubeSatFrameBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update cube sat frame bad request response
func (o *UpdateCubeSatFrameBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCubeSatFrameBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateCubeSatFrameForbiddenCode is the HTTP code returned for type UpdateCubeSatFrameForbidden
const UpdateCubeSatFrameForbiddenCode int = 403

/*
UpdateCubeSatFrameForbidden Forbidden

swagger:response updateCubeSatFrameForbidden
*/
type UpdateCubeSatFrameForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateCubeSatFrameForbidden creates UpdateCubeSatFrameForbidden with default headers values
func NewUpdateCubeSatFrameForbidden() *UpdateCubeSatFrameForbidden {

	return &UpdateCubeSatFrameForbidden{}
}

// WithPayload adds the payload to the update cube sat frame forbidden response
func (o *UpdateCubeSatFrameForbidden) WithPayload(payload *models.Error) *UpdateCubeSatFrameForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update cube sat frame forbidden response
func (o *UpdateCubeSatFrameForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCubeSatFrameForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateCubeSatFrameUnprocessableEntityCode is the HTTP code returned for type UpdateCubeSatFrameUnprocessableEntity
const UpdateCubeSatFrameUnprocessableEntityCode int = 422

/*
UpdateCubeSatFrameUnprocessableEntity Unprocessable Entity

swagger:response updateCubeSatFrameUnprocessableEntity
*/
type UpdateCubeSatFrameUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateCubeSatFrameUnprocessableEntity creates UpdateCubeSatFrameUnprocessableEntity with default headers values
func NewUpdateCubeSatFrameUnprocessableEntity() *UpdateCubeSatFrameUnprocessableEntity {

	return &UpdateCubeSatFrameUnprocessableEntity{}
}

// WithPayload adds the payload to the update cube sat frame unprocessable entity response
func (o *UpdateCubeSatFrameUnprocessableEntity) WithPayload(payload *models.Error) *UpdateCubeSatFrameUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update cube sat frame unprocessable entity response
func (o *UpdateCubeSatFrameUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCubeSatFrameUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateCubeSatFrameInternalServerErrorCode is the HTTP code returned for type UpdateCubeSatFrameInternalServerError
const UpdateCubeSatFrameInternalServerErrorCode int = 500

/*
UpdateCubeSatFrameInternalServerError Internal server error

swagger:response updateCubeSatFrameInternalServerError
*/
type UpdateCubeSatFrameInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateCubeSatFrameInternalServerError creates UpdateCubeSatFrameInternalServerError with default headers values
func NewUpdateCubeSatFrameInternalServerError() *UpdateCubeSatFrameInternalServerError {

	return &UpdateCubeSatFrameInternalServerError{}
}

// WithPayload adds the payload to the update cube sat frame internal server error response
func (o *UpdateCubeSatFrameInternalServerError) WithPayload(payload *models.Error) *UpdateCubeSatFrameInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update cube sat frame internal server error response
func (o *UpdateCubeSatFrameInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCubeSatFrameInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
