// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/Maksim646/space_vpx_satellite/internal/api/definition"
)

// CreateSolarPanelOKCode is the HTTP code returned for type CreateSolarPanelOK
const CreateSolarPanelOKCode int = 200

/*
CreateSolarPanelOK Create Solar Panel Response

swagger:response createSolarPanelOK
*/
type CreateSolarPanelOK struct {

	/*
	  In: Body
	*/
	Payload *models.SolarPanel `json:"body,omitempty"`
}

// NewCreateSolarPanelOK creates CreateSolarPanelOK with default headers values
func NewCreateSolarPanelOK() *CreateSolarPanelOK {

	return &CreateSolarPanelOK{}
}

// WithPayload adds the payload to the create solar panel o k response
func (o *CreateSolarPanelOK) WithPayload(payload *models.SolarPanel) *CreateSolarPanelOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create solar panel o k response
func (o *CreateSolarPanelOK) SetPayload(payload *models.SolarPanel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateSolarPanelOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateSolarPanelBadRequestCode is the HTTP code returned for type CreateSolarPanelBadRequest
const CreateSolarPanelBadRequestCode int = 400

/*
CreateSolarPanelBadRequest Bad request

swagger:response createSolarPanelBadRequest
*/
type CreateSolarPanelBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateSolarPanelBadRequest creates CreateSolarPanelBadRequest with default headers values
func NewCreateSolarPanelBadRequest() *CreateSolarPanelBadRequest {

	return &CreateSolarPanelBadRequest{}
}

// WithPayload adds the payload to the create solar panel bad request response
func (o *CreateSolarPanelBadRequest) WithPayload(payload *models.Error) *CreateSolarPanelBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create solar panel bad request response
func (o *CreateSolarPanelBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateSolarPanelBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateSolarPanelForbiddenCode is the HTTP code returned for type CreateSolarPanelForbidden
const CreateSolarPanelForbiddenCode int = 403

/*
CreateSolarPanelForbidden Forbidden

swagger:response createSolarPanelForbidden
*/
type CreateSolarPanelForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateSolarPanelForbidden creates CreateSolarPanelForbidden with default headers values
func NewCreateSolarPanelForbidden() *CreateSolarPanelForbidden {

	return &CreateSolarPanelForbidden{}
}

// WithPayload adds the payload to the create solar panel forbidden response
func (o *CreateSolarPanelForbidden) WithPayload(payload *models.Error) *CreateSolarPanelForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create solar panel forbidden response
func (o *CreateSolarPanelForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateSolarPanelForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateSolarPanelUnprocessableEntityCode is the HTTP code returned for type CreateSolarPanelUnprocessableEntity
const CreateSolarPanelUnprocessableEntityCode int = 422

/*
CreateSolarPanelUnprocessableEntity Unprocessable Entity

swagger:response createSolarPanelUnprocessableEntity
*/
type CreateSolarPanelUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateSolarPanelUnprocessableEntity creates CreateSolarPanelUnprocessableEntity with default headers values
func NewCreateSolarPanelUnprocessableEntity() *CreateSolarPanelUnprocessableEntity {

	return &CreateSolarPanelUnprocessableEntity{}
}

// WithPayload adds the payload to the create solar panel unprocessable entity response
func (o *CreateSolarPanelUnprocessableEntity) WithPayload(payload *models.Error) *CreateSolarPanelUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create solar panel unprocessable entity response
func (o *CreateSolarPanelUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateSolarPanelUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateSolarPanelInternalServerErrorCode is the HTTP code returned for type CreateSolarPanelInternalServerError
const CreateSolarPanelInternalServerErrorCode int = 500

/*
CreateSolarPanelInternalServerError Internal server error

swagger:response createSolarPanelInternalServerError
*/
type CreateSolarPanelInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateSolarPanelInternalServerError creates CreateSolarPanelInternalServerError with default headers values
func NewCreateSolarPanelInternalServerError() *CreateSolarPanelInternalServerError {

	return &CreateSolarPanelInternalServerError{}
}

// WithPayload adds the payload to the create solar panel internal server error response
func (o *CreateSolarPanelInternalServerError) WithPayload(payload *models.Error) *CreateSolarPanelInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create solar panel internal server error response
func (o *CreateSolarPanelInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateSolarPanelInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
