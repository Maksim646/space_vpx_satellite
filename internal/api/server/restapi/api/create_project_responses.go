// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/Maksim646/space_vpx_satellite/internal/api/definition"
)

// CreateProjectOKCode is the HTTP code returned for type CreateProjectOK
const CreateProjectOKCode int = 200

/*
CreateProjectOK Create Project Response

swagger:response createProjectOK
*/
type CreateProjectOK struct {

	/*
	  In: Body
	*/
	Payload *models.CreateProjectResponse `json:"body,omitempty"`
}

// NewCreateProjectOK creates CreateProjectOK with default headers values
func NewCreateProjectOK() *CreateProjectOK {

	return &CreateProjectOK{}
}

// WithPayload adds the payload to the create project o k response
func (o *CreateProjectOK) WithPayload(payload *models.CreateProjectResponse) *CreateProjectOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create project o k response
func (o *CreateProjectOK) SetPayload(payload *models.CreateProjectResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateProjectOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateProjectBadRequestCode is the HTTP code returned for type CreateProjectBadRequest
const CreateProjectBadRequestCode int = 400

/*
CreateProjectBadRequest Bad request

swagger:response createProjectBadRequest
*/
type CreateProjectBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateProjectBadRequest creates CreateProjectBadRequest with default headers values
func NewCreateProjectBadRequest() *CreateProjectBadRequest {

	return &CreateProjectBadRequest{}
}

// WithPayload adds the payload to the create project bad request response
func (o *CreateProjectBadRequest) WithPayload(payload *models.Error) *CreateProjectBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create project bad request response
func (o *CreateProjectBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateProjectBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateProjectForbiddenCode is the HTTP code returned for type CreateProjectForbidden
const CreateProjectForbiddenCode int = 403

/*
CreateProjectForbidden Forbidden

swagger:response createProjectForbidden
*/
type CreateProjectForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateProjectForbidden creates CreateProjectForbidden with default headers values
func NewCreateProjectForbidden() *CreateProjectForbidden {

	return &CreateProjectForbidden{}
}

// WithPayload adds the payload to the create project forbidden response
func (o *CreateProjectForbidden) WithPayload(payload *models.Error) *CreateProjectForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create project forbidden response
func (o *CreateProjectForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateProjectForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateProjectUnprocessableEntityCode is the HTTP code returned for type CreateProjectUnprocessableEntity
const CreateProjectUnprocessableEntityCode int = 422

/*
CreateProjectUnprocessableEntity Unprocessable Entity

swagger:response createProjectUnprocessableEntity
*/
type CreateProjectUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateProjectUnprocessableEntity creates CreateProjectUnprocessableEntity with default headers values
func NewCreateProjectUnprocessableEntity() *CreateProjectUnprocessableEntity {

	return &CreateProjectUnprocessableEntity{}
}

// WithPayload adds the payload to the create project unprocessable entity response
func (o *CreateProjectUnprocessableEntity) WithPayload(payload *models.Error) *CreateProjectUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create project unprocessable entity response
func (o *CreateProjectUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateProjectUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateProjectInternalServerErrorCode is the HTTP code returned for type CreateProjectInternalServerError
const CreateProjectInternalServerErrorCode int = 500

/*
CreateProjectInternalServerError Internal server error

swagger:response createProjectInternalServerError
*/
type CreateProjectInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateProjectInternalServerError creates CreateProjectInternalServerError with default headers values
func NewCreateProjectInternalServerError() *CreateProjectInternalServerError {

	return &CreateProjectInternalServerError{}
}

// WithPayload adds the payload to the create project internal server error response
func (o *CreateProjectInternalServerError) WithPayload(payload *models.Error) *CreateProjectInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create project internal server error response
func (o *CreateProjectInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateProjectInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
