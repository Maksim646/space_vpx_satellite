// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/Maksim646/space_vpx_satellite/internal/api/definition"
)

// GetCubeSatProjectOKCode is the HTTP code returned for type GetCubeSatProjectOK
const GetCubeSatProjectOKCode int = 200

/*
GetCubeSatProjectOK Get CubeSat Project Response

swagger:response getCubeSatProjectOK
*/
type GetCubeSatProjectOK struct {

	/*
	  In: Body
	*/
	Payload *models.CubeSatProject `json:"body,omitempty"`
}

// NewGetCubeSatProjectOK creates GetCubeSatProjectOK with default headers values
func NewGetCubeSatProjectOK() *GetCubeSatProjectOK {

	return &GetCubeSatProjectOK{}
}

// WithPayload adds the payload to the get cube sat project o k response
func (o *GetCubeSatProjectOK) WithPayload(payload *models.CubeSatProject) *GetCubeSatProjectOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cube sat project o k response
func (o *GetCubeSatProjectOK) SetPayload(payload *models.CubeSatProject) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCubeSatProjectOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCubeSatProjectBadRequestCode is the HTTP code returned for type GetCubeSatProjectBadRequest
const GetCubeSatProjectBadRequestCode int = 400

/*
GetCubeSatProjectBadRequest Bad request

swagger:response getCubeSatProjectBadRequest
*/
type GetCubeSatProjectBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetCubeSatProjectBadRequest creates GetCubeSatProjectBadRequest with default headers values
func NewGetCubeSatProjectBadRequest() *GetCubeSatProjectBadRequest {

	return &GetCubeSatProjectBadRequest{}
}

// WithPayload adds the payload to the get cube sat project bad request response
func (o *GetCubeSatProjectBadRequest) WithPayload(payload *models.Error) *GetCubeSatProjectBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cube sat project bad request response
func (o *GetCubeSatProjectBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCubeSatProjectBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCubeSatProjectForbiddenCode is the HTTP code returned for type GetCubeSatProjectForbidden
const GetCubeSatProjectForbiddenCode int = 403

/*
GetCubeSatProjectForbidden Forbidden

swagger:response getCubeSatProjectForbidden
*/
type GetCubeSatProjectForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetCubeSatProjectForbidden creates GetCubeSatProjectForbidden with default headers values
func NewGetCubeSatProjectForbidden() *GetCubeSatProjectForbidden {

	return &GetCubeSatProjectForbidden{}
}

// WithPayload adds the payload to the get cube sat project forbidden response
func (o *GetCubeSatProjectForbidden) WithPayload(payload *models.Error) *GetCubeSatProjectForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cube sat project forbidden response
func (o *GetCubeSatProjectForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCubeSatProjectForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCubeSatProjectUnprocessableEntityCode is the HTTP code returned for type GetCubeSatProjectUnprocessableEntity
const GetCubeSatProjectUnprocessableEntityCode int = 422

/*
GetCubeSatProjectUnprocessableEntity Unprocessable Entity

swagger:response getCubeSatProjectUnprocessableEntity
*/
type GetCubeSatProjectUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetCubeSatProjectUnprocessableEntity creates GetCubeSatProjectUnprocessableEntity with default headers values
func NewGetCubeSatProjectUnprocessableEntity() *GetCubeSatProjectUnprocessableEntity {

	return &GetCubeSatProjectUnprocessableEntity{}
}

// WithPayload adds the payload to the get cube sat project unprocessable entity response
func (o *GetCubeSatProjectUnprocessableEntity) WithPayload(payload *models.Error) *GetCubeSatProjectUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cube sat project unprocessable entity response
func (o *GetCubeSatProjectUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCubeSatProjectUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCubeSatProjectInternalServerErrorCode is the HTTP code returned for type GetCubeSatProjectInternalServerError
const GetCubeSatProjectInternalServerErrorCode int = 500

/*
GetCubeSatProjectInternalServerError Internal server error

swagger:response getCubeSatProjectInternalServerError
*/
type GetCubeSatProjectInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetCubeSatProjectInternalServerError creates GetCubeSatProjectInternalServerError with default headers values
func NewGetCubeSatProjectInternalServerError() *GetCubeSatProjectInternalServerError {

	return &GetCubeSatProjectInternalServerError{}
}

// WithPayload adds the payload to the get cube sat project internal server error response
func (o *GetCubeSatProjectInternalServerError) WithPayload(payload *models.Error) *GetCubeSatProjectInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cube sat project internal server error response
func (o *GetCubeSatProjectInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCubeSatProjectInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
