// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/Maksim646/space_vpx_satellite/internal/api/definition"
)

// GetCubeSatFrameOKCode is the HTTP code returned for type GetCubeSatFrameOK
const GetCubeSatFrameOKCode int = 200

/*
GetCubeSatFrameOK Get CubeSat Frame Response

swagger:response getCubeSatFrameOK
*/
type GetCubeSatFrameOK struct {

	/*
	  In: Body
	*/
	Payload *models.CubeSatFrame `json:"body,omitempty"`
}

// NewGetCubeSatFrameOK creates GetCubeSatFrameOK with default headers values
func NewGetCubeSatFrameOK() *GetCubeSatFrameOK {

	return &GetCubeSatFrameOK{}
}

// WithPayload adds the payload to the get cube sat frame o k response
func (o *GetCubeSatFrameOK) WithPayload(payload *models.CubeSatFrame) *GetCubeSatFrameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cube sat frame o k response
func (o *GetCubeSatFrameOK) SetPayload(payload *models.CubeSatFrame) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCubeSatFrameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCubeSatFrameBadRequestCode is the HTTP code returned for type GetCubeSatFrameBadRequest
const GetCubeSatFrameBadRequestCode int = 400

/*
GetCubeSatFrameBadRequest Bad request

swagger:response getCubeSatFrameBadRequest
*/
type GetCubeSatFrameBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetCubeSatFrameBadRequest creates GetCubeSatFrameBadRequest with default headers values
func NewGetCubeSatFrameBadRequest() *GetCubeSatFrameBadRequest {

	return &GetCubeSatFrameBadRequest{}
}

// WithPayload adds the payload to the get cube sat frame bad request response
func (o *GetCubeSatFrameBadRequest) WithPayload(payload *models.Error) *GetCubeSatFrameBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cube sat frame bad request response
func (o *GetCubeSatFrameBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCubeSatFrameBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCubeSatFrameForbiddenCode is the HTTP code returned for type GetCubeSatFrameForbidden
const GetCubeSatFrameForbiddenCode int = 403

/*
GetCubeSatFrameForbidden Forbidden

swagger:response getCubeSatFrameForbidden
*/
type GetCubeSatFrameForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetCubeSatFrameForbidden creates GetCubeSatFrameForbidden with default headers values
func NewGetCubeSatFrameForbidden() *GetCubeSatFrameForbidden {

	return &GetCubeSatFrameForbidden{}
}

// WithPayload adds the payload to the get cube sat frame forbidden response
func (o *GetCubeSatFrameForbidden) WithPayload(payload *models.Error) *GetCubeSatFrameForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cube sat frame forbidden response
func (o *GetCubeSatFrameForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCubeSatFrameForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCubeSatFrameUnprocessableEntityCode is the HTTP code returned for type GetCubeSatFrameUnprocessableEntity
const GetCubeSatFrameUnprocessableEntityCode int = 422

/*
GetCubeSatFrameUnprocessableEntity Unprocessable Entity

swagger:response getCubeSatFrameUnprocessableEntity
*/
type GetCubeSatFrameUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetCubeSatFrameUnprocessableEntity creates GetCubeSatFrameUnprocessableEntity with default headers values
func NewGetCubeSatFrameUnprocessableEntity() *GetCubeSatFrameUnprocessableEntity {

	return &GetCubeSatFrameUnprocessableEntity{}
}

// WithPayload adds the payload to the get cube sat frame unprocessable entity response
func (o *GetCubeSatFrameUnprocessableEntity) WithPayload(payload *models.Error) *GetCubeSatFrameUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cube sat frame unprocessable entity response
func (o *GetCubeSatFrameUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCubeSatFrameUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCubeSatFrameInternalServerErrorCode is the HTTP code returned for type GetCubeSatFrameInternalServerError
const GetCubeSatFrameInternalServerErrorCode int = 500

/*
GetCubeSatFrameInternalServerError Internal server error

swagger:response getCubeSatFrameInternalServerError
*/
type GetCubeSatFrameInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetCubeSatFrameInternalServerError creates GetCubeSatFrameInternalServerError with default headers values
func NewGetCubeSatFrameInternalServerError() *GetCubeSatFrameInternalServerError {

	return &GetCubeSatFrameInternalServerError{}
}

// WithPayload adds the payload to the get cube sat frame internal server error response
func (o *GetCubeSatFrameInternalServerError) WithPayload(payload *models.Error) *GetCubeSatFrameInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cube sat frame internal server error response
func (o *GetCubeSatFrameInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCubeSatFrameInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
