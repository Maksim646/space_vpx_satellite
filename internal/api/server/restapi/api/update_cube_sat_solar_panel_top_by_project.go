// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"

	models "github.com/Maksim646/space_vpx_satellite/internal/api/definition"
)

// UpdateCubeSatSolarPanelTopByProjectHandlerFunc turns a function with the right signature into a update cube sat solar panel top by project handler
type UpdateCubeSatSolarPanelTopByProjectHandlerFunc func(UpdateCubeSatSolarPanelTopByProjectParams, *models.Principal) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateCubeSatSolarPanelTopByProjectHandlerFunc) Handle(params UpdateCubeSatSolarPanelTopByProjectParams, principal *models.Principal) middleware.Responder {
	return fn(params, principal)
}

// UpdateCubeSatSolarPanelTopByProjectHandler interface for that can handle valid update cube sat solar panel top by project params
type UpdateCubeSatSolarPanelTopByProjectHandler interface {
	Handle(UpdateCubeSatSolarPanelTopByProjectParams, *models.Principal) middleware.Responder
}

// NewUpdateCubeSatSolarPanelTopByProject creates a new http.Handler for the update cube sat solar panel top by project operation
func NewUpdateCubeSatSolarPanelTopByProject(ctx *middleware.Context, handler UpdateCubeSatSolarPanelTopByProjectHandler) *UpdateCubeSatSolarPanelTopByProject {
	return &UpdateCubeSatSolarPanelTopByProject{Context: ctx, Handler: handler}
}

/*
	UpdateCubeSatSolarPanelTopByProject swagger:route PUT /projects/{project_id}/solar_panel_top CubeSatProject updateCubeSatSolarPanelTopByProject

Update the Solar Panel Top of a CubeSat Project
*/
type UpdateCubeSatSolarPanelTopByProject struct {
	Context *middleware.Context
	Handler UpdateCubeSatSolarPanelTopByProjectHandler
}

func (o *UpdateCubeSatSolarPanelTopByProject) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewUpdateCubeSatSolarPanelTopByProjectParams()
	uprinc, aCtx, err := o.Context.Authorize(r, route)
	if err != nil {
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}
	if aCtx != nil {
		*r = *aCtx
	}
	var principal *models.Principal
	if uprinc != nil {
		principal = uprinc.(*models.Principal) // this is really a models.Principal, I promise
	}

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params, principal) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
