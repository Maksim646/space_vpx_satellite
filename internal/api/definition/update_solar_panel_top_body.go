// Code generated by go-swagger; DO NOT EDIT.

package definition

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UpdateSolarPanelTopBody update solar panel top body
//
// swagger:model UpdateSolarPanelTopBody
type UpdateSolarPanelTopBody struct {

	// coil area
	CoilArea float64 `json:"coil_area,omitempty"`

	// coil resistance
	CoilResistance float64 `json:"coil_resistance,omitempty"`

	// efficiency
	Efficiency float64 `json:"efficiency,omitempty"`

	// height
	// Required: true
	Height *float64 `json:"height"`

	// imp
	Imp float64 `json:"imp,omitempty"`

	// interface
	Interface string `json:"interface,omitempty"`

	// isc
	Isc float64 `json:"isc,omitempty"`

	// length
	// Required: true
	Length *float64 `json:"length"`

	// max operating temperature
	MaxOperatingTemperature float64 `json:"max_operating_temperature,omitempty"`

	// mechanical shock
	MechanicalShock float64 `json:"mechanical_shock,omitempty"`

	// mechanical vibration
	MechanicalVibration float64 `json:"mechanical_vibration,omitempty"`

	// min operating temperature
	MinOperatingTemperature float64 `json:"min_operating_temperature,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// vmp
	Vmp float64 `json:"vmp,omitempty"`

	// voc
	Voc float64 `json:"voc,omitempty"`

	// weight
	Weight float64 `json:"weight,omitempty"`

	// width
	// Required: true
	Width *float64 `json:"width"`
}

// Validate validates this update solar panel top body
func (m *UpdateSolarPanelTopBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateHeight(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLength(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateWidth(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UpdateSolarPanelTopBody) validateHeight(formats strfmt.Registry) error {

	if err := validate.Required("height", "body", m.Height); err != nil {
		return err
	}

	return nil
}

func (m *UpdateSolarPanelTopBody) validateLength(formats strfmt.Registry) error {

	if err := validate.Required("length", "body", m.Length); err != nil {
		return err
	}

	return nil
}

func (m *UpdateSolarPanelTopBody) validateWidth(formats strfmt.Registry) error {

	if err := validate.Required("width", "body", m.Width); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this update solar panel top body based on context it is used
func (m *UpdateSolarPanelTopBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UpdateSolarPanelTopBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UpdateSolarPanelTopBody) UnmarshalBinary(b []byte) error {
	var res UpdateSolarPanelTopBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
