// Code generated by go-swagger; DO NOT EDIT.

package definition

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UpdatePowerSystemBody update power system body
//
// swagger:model UpdatePowerSystemBody
type UpdatePowerSystemBody struct {

	// current output channels max
	CurrentOutputChannelsMax float64 `json:"current_output_channels_max,omitempty"`

	// data interface
	DataInterface string `json:"data_interface,omitempty"`

	// height
	// Required: true
	Height *float64 `json:"height"`

	// length
	// Required: true
	Length *float64 `json:"length"`

	// max operating temperature
	MaxOperatingTemperature float64 `json:"max_operating_temperature,omitempty"`

	// mechanical shock
	MechanicalShock int64 `json:"mechanical_shock,omitempty"`

	// mechanical vibration
	MechanicalVibration int64 `json:"mechanical_vibration,omitempty"`

	// min operating temperature
	MinOperatingTemperature float64 `json:"min_operating_temperature,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// output channels
	OutputChannels int64 `json:"output_channels,omitempty"`

	// solar panel channels
	SolarPanelChannels int64 `json:"solar_panel_channels,omitempty"`

	// solar panel current per channel max
	SolarPanelCurrentPerChannelMax float64 `json:"solar_panel_current_per_channel_max,omitempty"`

	// solar panel voltage max
	SolarPanelVoltageMax float64 `json:"solar_panel_voltage_max,omitempty"`

	// solar panel voltage min
	SolarPanelVoltageMin float64 `json:"solar_panel_voltage_min,omitempty"`

	// solar panels type
	SolarPanelsType string `json:"solar_panels_type,omitempty"`

	// system bus voltage output channels
	SystemBusVoltageOutputChannels float64 `json:"system_bus_voltage_output_channels,omitempty"`

	// system bus voltage solar panels
	SystemBusVoltageSolarPanels float64 `json:"system_bus_voltage_solar_panels,omitempty"`

	// total current of solar panels max
	TotalCurrentOfSolarPanelsMax float64 `json:"total_current_of_solar_panels_max,omitempty"`

	// total output current
	TotalOutputCurrent float64 `json:"total_output_current,omitempty"`

	// weight
	Weight float64 `json:"weight,omitempty"`

	// width
	// Required: true
	Width *float64 `json:"width"`
}

// Validate validates this update power system body
func (m *UpdatePowerSystemBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateHeight(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLength(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateWidth(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UpdatePowerSystemBody) validateHeight(formats strfmt.Registry) error {

	if err := validate.Required("height", "body", m.Height); err != nil {
		return err
	}

	return nil
}

func (m *UpdatePowerSystemBody) validateLength(formats strfmt.Registry) error {

	if err := validate.Required("length", "body", m.Length); err != nil {
		return err
	}

	return nil
}

func (m *UpdatePowerSystemBody) validateWidth(formats strfmt.Registry) error {

	if err := validate.Required("width", "body", m.Width); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this update power system body based on context it is used
func (m *UpdatePowerSystemBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UpdatePowerSystemBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UpdatePowerSystemBody) UnmarshalBinary(b []byte) error {
	var res UpdatePowerSystemBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
